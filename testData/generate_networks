#! /usr/bin/env python
"""
Program for generating a random network .sif file.
"""
from sets import Set
from random import randint
import sys, os


def printf(format, *args):
    print str(format) % args,


def GenerateNetwork(node_count, no_of_links):
    node_prefix = 'N'
    used_nodes = Set()
    for i in range(0, no_of_links):
        end_point1 = randint(1, node_count)
        end_point2 = randint(1, node_count)
        printf("%s%1d pp %s%1d\n", node_prefix, end_point1, node_prefix, end_point2)
        used_nodes.add(end_point1)
        used_nodes.add(end_point2)

    for node_ID in range(1, node_count + 1):
        if node_ID not in used_nodes:
            printf("%s%1d\n", node_prefix, node_ID)


def Usage():
    print "usage: " + sys.argv[0] + " node_count no_of_links > SIF_file"
    print "\twhere node_count is the number of nodes of the generated network"
    print "\twhere no_of_links is the number of edges of the generated network"

    sys.exit(1)


def ProcessArgs(argv):
    if len(argv) != 3:
        Usage()
    try:
        node_count  = int(argv[1])
        no_of_links = int(argv[2])
    except ValueError:
        Usage()

    if node_count < 1 or no_of_links < 0:
        Usage()

    return (node_count, no_of_links)


(node_count, no_of_links) = ProcessArgs(sys.argv)
GenerateNetwork(node_count, no_of_links)
