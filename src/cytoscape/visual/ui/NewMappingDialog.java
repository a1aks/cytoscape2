/*
 * NewMappingDialog.java
 *
 * Created on 2007/03/27, 14:19
 */
package cytoscape.visual.ui;

import cytoscape.Cytoscape;

import cytoscape.data.CyAttributes;

import cytoscape.visual.EdgeAppearanceCalculator;
import cytoscape.visual.NodeAppearanceCalculator;
import cytoscape.visual.VisualPropertyType;
import cytoscape.visual.VisualStyle;

import cytoscape.visual.calculators.Calculator;

import cytoscape.visual.mappings.ObjectMapping;

import org.jdesktop.swingx.JXCollapsiblePane;
import org.jdesktop.swingx.border.DropShadowBorder;
import org.jdesktop.swingx.painter.Painter;
import org.jdesktop.swingx.painter.gradient.BasicGradientPainter;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.geom.Point2D;

import java.net.URL;

import java.util.ArrayList;
import java.util.List;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.JTree;
import javax.swing.ToolTipManager;
import javax.swing.border.TitledBorder;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreeSelectionModel;


/**
 *
 * @author kono
 */
public class NewMappingDialog extends javax.swing.JDialog {
    private static Painter titlePainter;
    private static DropShadowBorder defBorder;
    private static final Font TITLE_FONT = new Font("SansSerif", Font.BOLD, 12);

    static {
        titlePainter = new BasicGradientPainter(
                new Point2D.Double(.2d, 0),
                new Color(
                    Color.gray.getRed(),
                    Color.gray.getGreen(),
                    Color.gray.getBlue(),
                    100),
                new Point2D.Double(.8d, 0),
                Color.WHITE);

        defBorder = new DropShadowBorder();
    }

    private final VisualStyle vs = Cytoscape.getVisualMappingManager()
                                            .getVisualStyle();
    private List<String> mappingExist;
    private String title;

    /** Creates new form NewMappingDialog */
    public NewMappingDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        title = vs.getName();

        buildList();

        initComponents();
        setTree();
        setMappingComboBox();
        setAttrComboBox();

        // setAdvancedPanel();
    }

    private void buildList() {
        mappingExist = new ArrayList<String>();

        final NodeAppearanceCalculator nac = vs.getNodeAppearanceCalculator();
        final EdgeAppearanceCalculator eac = vs.getEdgeAppearanceCalculator();

        ObjectMapping mapping = null;

        for (VisualPropertyType type : VisualPropertyType.values()) {
            Calculator calc = nac.getCalculator(type);

            if (calc == null) {
                calc = eac.getCalculator(type);

                if (calc != null)
                    mapping = calc.getMapping(0);
            } else
                mapping = calc.getMapping(0);

            if (mapping != null)
                mappingExist.add(type.getName());

            mapping = null;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">
    private void initComponents() {
        createButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        mappingTypePanel = new org.jdesktop.swingx.JXTitledPanel();
        mappingComboBox = new javax.swing.JComboBox();
        attributePanel = new org.jdesktop.swingx.JXTitledPanel();
        attributeComboBox = new javax.swing.JComboBox();
        visualPropertyPanel = new org.jdesktop.swingx.JXTitledPanel();
        visualPropertyScrollPane = new javax.swing.JScrollPane();
        visualPropertyTree = new javax.swing.JTree();
        advancedCollapsiblePanel = new JPanel();

        discreteOptionPanel = new javax.swing.JPanel();
        randomizeRadioButton = new javax.swing.JRadioButton();
        emptyRadioButton = new javax.swing.JRadioButton();
        continuousOptionPanel = new javax.swing.JPanel();
        pivotLabel = new javax.swing.JLabel();
        pivotSpinner = new javax.swing.JSpinner();
        templatePanel = new javax.swing.JPanel();
        templateComboBox = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Create New Mapping for " + title);

        // advancedCollapsiblePanel.setBorder(defBorder);
        createButton.setText("Create");
        createButton.addActionListener(
            new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    createButtonActionPerformed(evt);
                }
            });
        createButton.setEnabled(false);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(
            new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    cancelButtonActionPerformed(evt);
                }
            });

        mappingTypePanel.setTitle("Mapping Type");
        mappingTypePanel.setTitleFont(TITLE_FONT);
        mappingTypePanel.setTitlePainter(titlePainter);
        mappingTypePanel.setBorder(new DropShadowBorder());

        mappingComboBox.addActionListener(
            new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    mappingComboBoxActionPerformed(evt);
                }
            });

        org.jdesktop.layout.GroupLayout mappingTypePanelLayout = new org.jdesktop.layout.GroupLayout(
                mappingTypePanel.getContentContainer());
        mappingTypePanel.getContentContainer()
                        .setLayout(mappingTypePanelLayout);
        mappingTypePanelLayout.setHorizontalGroup(
            mappingTypePanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                mappingTypePanelLayout.createSequentialGroup().addContainerGap().add(mappingComboBox,
                    0, 245, Short.MAX_VALUE).addContainerGap()));
        mappingTypePanelLayout.setVerticalGroup(
            mappingTypePanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                org.jdesktop.layout.GroupLayout.TRAILING,
                mappingTypePanelLayout.createSequentialGroup().addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    Short.MAX_VALUE).add(mappingComboBox,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addContainerGap()));

        attributePanel.setTitle("Controlling Attribute");
        attributePanel.setTitleFont(TITLE_FONT);
        attributePanel.setBorder(new DropShadowBorder());
        attributePanel.setTitlePainter(titlePainter);

        attributeComboBox.addActionListener(
            new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    attributeComboBoxActionPerformed(evt);
                }
            });

        org.jdesktop.layout.GroupLayout attributePanelLayout = new org.jdesktop.layout.GroupLayout(
                attributePanel.getContentContainer());
        attributePanel.getContentContainer()
                      .setLayout(attributePanelLayout);
        attributePanelLayout.setHorizontalGroup(
            attributePanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                attributePanelLayout.createSequentialGroup().addContainerGap().add(attributeComboBox,
                    0, 245, Short.MAX_VALUE).addContainerGap()));
        attributePanelLayout.setVerticalGroup(
            attributePanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                attributePanelLayout.createSequentialGroup().addContainerGap().add(attributeComboBox,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    Short.MAX_VALUE)));

        visualPropertyPanel.setTitle("Visual Property");
        visualPropertyPanel.setTitleFont(TITLE_FONT);
        visualPropertyPanel.setBorder(new DropShadowBorder());
        visualPropertyPanel.setTitlePainter(titlePainter);

        org.jdesktop.layout.GroupLayout visualPropertyPanelLayout = new org.jdesktop.layout.GroupLayout(
                visualPropertyPanel.getContentContainer());
        visualPropertyPanel.getContentContainer()
                           .setLayout(visualPropertyPanelLayout);
        visualPropertyPanelLayout.setHorizontalGroup(
            visualPropertyPanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(visualPropertyScrollPane,
                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 220,
                Short.MAX_VALUE));
        visualPropertyPanelLayout.setVerticalGroup(
            visualPropertyPanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(visualPropertyScrollPane,
                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 420,
                Short.MAX_VALUE));

        discreteOptionPanel.setBorder(
            javax.swing.BorderFactory.createTitledBorder(
                null,
                "Discrete Mapping Options",
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("SansSerif", 1, 10)));
        randomizeRadioButton.setText("Create with randomized value");
        randomizeRadioButton.setBorder(
            javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        randomizeRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        emptyRadioButton.setText("Create Empty Mapping");
        emptyRadioButton.setBorder(
            javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        emptyRadioButton.setMargin(new java.awt.Insets(0, 0, 0, 0));

        org.jdesktop.layout.GroupLayout discreteOptionPanelLayout = new org.jdesktop.layout.GroupLayout(discreteOptionPanel);
        discreteOptionPanel.setLayout(discreteOptionPanelLayout);
        discreteOptionPanelLayout.setHorizontalGroup(
            discreteOptionPanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                discreteOptionPanelLayout.createSequentialGroup().addContainerGap().add(
                    discreteOptionPanelLayout.createParallelGroup(
                        org.jdesktop.layout.GroupLayout.LEADING).add(randomizeRadioButton,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        Short.MAX_VALUE).add(emptyRadioButton,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 204,
                        Short.MAX_VALUE)).addContainerGap()));
        discreteOptionPanelLayout.setVerticalGroup(
            discreteOptionPanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                discreteOptionPanelLayout.createSequentialGroup().add(emptyRadioButton).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(randomizeRadioButton)));

        continuousOptionPanel.setBorder(
            javax.swing.BorderFactory.createTitledBorder(
                null,
                "Continuous Mapping Options",
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("SansSerif", 1, 10)));
        pivotLabel.setText("Number of Pivots");

        org.jdesktop.layout.GroupLayout continuousOptionPanelLayout = new org.jdesktop.layout.GroupLayout(continuousOptionPanel);
        continuousOptionPanel.setLayout(continuousOptionPanelLayout);
        continuousOptionPanelLayout.setHorizontalGroup(
            continuousOptionPanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                continuousOptionPanelLayout.createSequentialGroup().addContainerGap().add(pivotLabel).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(pivotSpinner,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addContainerGap(36,
                    Short.MAX_VALUE)));
        continuousOptionPanelLayout.setVerticalGroup(
            continuousOptionPanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                continuousOptionPanelLayout.createParallelGroup(
                    org.jdesktop.layout.GroupLayout.BASELINE).add(pivotLabel).add(pivotSpinner,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)));

        templatePanel.setBorder(
            javax.swing.BorderFactory.createTitledBorder(
                null,
                "Templates",
                javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION,
                javax.swing.border.TitledBorder.DEFAULT_POSITION,
                new java.awt.Font("SansSerif", 1, 11)));
        templateComboBox.setModel(
            new javax.swing.DefaultComboBoxModel(
                new String[] { "Red-Green Continuous Mapping", "ID Passthrough" }));

        // templateComboBox.addActionListener(new
        // java.awt.event.ActionListener() {
        // public void actionPerformed(java.awt.event.ActionEvent evt) {
        // templateComboBoxActionPerformed(evt);
        // }
        // });
        org.jdesktop.layout.GroupLayout templatePanelLayout = new org.jdesktop.layout.GroupLayout(templatePanel);
        templatePanel.setLayout(templatePanelLayout);
        templatePanelLayout.setHorizontalGroup(
            templatePanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                templatePanelLayout.createSequentialGroup().addContainerGap().add(templateComboBox,
                    0, 204, Short.MAX_VALUE).addContainerGap()));
        templatePanelLayout.setVerticalGroup(
            templatePanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                templatePanelLayout.createSequentialGroup().add(templateComboBox,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    Short.MAX_VALUE)));

        org.jdesktop.layout.GroupLayout advancedCollapsiblePanelLayout = new org.jdesktop.layout.GroupLayout(advancedCollapsiblePanel);
        advancedCollapsiblePanel.setLayout(advancedCollapsiblePanelLayout);
        advancedCollapsiblePanelLayout.setHorizontalGroup(
            advancedCollapsiblePanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                org.jdesktop.layout.GroupLayout.TRAILING,
                advancedCollapsiblePanelLayout.createSequentialGroup().addContainerGap().add(
                    advancedCollapsiblePanelLayout.createParallelGroup(
                        org.jdesktop.layout.GroupLayout.TRAILING).add(org.jdesktop.layout.GroupLayout.LEADING,
                        templatePanel,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        Short.MAX_VALUE).add(org.jdesktop.layout.GroupLayout.LEADING,
                        continuousOptionPanel,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        Short.MAX_VALUE).add(org.jdesktop.layout.GroupLayout.LEADING,
                        discreteOptionPanel,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        Short.MAX_VALUE)).addContainerGap()));
        advancedCollapsiblePanelLayout.setVerticalGroup(
            advancedCollapsiblePanelLayout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                advancedCollapsiblePanelLayout.createSequentialGroup().addContainerGap().add(discreteOptionPanel,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(continuousOptionPanel,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).add(8, 8, 8).add(templatePanel,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addContainerGap(40,
                    Short.MAX_VALUE)));

        foo = new CollapsiblePane("Advanced");

        foo.getContentPane()
           .add(advancedCollapsiblePanel);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
                getContentPane());
        getContentPane()
            .setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                layout.createSequentialGroup().addContainerGap().add(visualPropertyPanel,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                    Short.MAX_VALUE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(
                    layout.createParallelGroup(
                        org.jdesktop.layout.GroupLayout.LEADING).add(foo,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        Short.MAX_VALUE).add(
                        layout.createSequentialGroup().add(0, 0, 0).add(attributePanel,
                            org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                            org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                            Short.MAX_VALUE)).add(
                        org.jdesktop.layout.GroupLayout.TRAILING,
                        layout.createSequentialGroup().add(51, 51, 51).add(cancelButton).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(createButton)).add(mappingTypePanel,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        Short.MAX_VALUE)).addContainerGap()));
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(
                layout.createSequentialGroup().addContainerGap().add(
                    layout.createParallelGroup(
                        org.jdesktop.layout.GroupLayout.LEADING).add(visualPropertyPanel,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        Short.MAX_VALUE).add(
                        layout.createSequentialGroup().add(attributePanel,
                            org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                            org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                            org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(mappingTypePanel,
                            org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
                            org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                            org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(foo,
                            org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                            org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                            Short.MAX_VALUE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(
                            layout.createParallelGroup(
                                org.jdesktop.layout.GroupLayout.BASELINE).add(createButton).add(cancelButton)))).addContainerGap()));
        pack();
    } // </editor-fold>

    private void createButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        dispose();
    }

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        dispose();
    }

    private void mappingComboBoxActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void attributeComboBoxActionPerformed(
        java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
    }

    private void visualPropertyTreeValueChanged(
        javax.swing.event.TreeSelectionEvent evt) {
        // TODO add your handling code here:
    }

    // Variables declaration - do not modify
    private JPanel advancedCollapsiblePanel;
    private CollapsiblePane foo;
    private javax.swing.JComboBox attributeComboBox;
    private org.jdesktop.swingx.JXTitledPanel attributePanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel continuousOptionPanel;
    private javax.swing.JButton createButton;
    private javax.swing.JPanel discreteOptionPanel;
    private javax.swing.JRadioButton emptyRadioButton;
    private javax.swing.JComboBox mappingComboBox;
    private org.jdesktop.swingx.JXTitledPanel mappingTypePanel;
    private javax.swing.JLabel pivotLabel;
    private javax.swing.JSpinner pivotSpinner;
    private javax.swing.JRadioButton randomizeRadioButton;
    private javax.swing.JComboBox templateComboBox;
    private javax.swing.JPanel templatePanel;
    private org.jdesktop.swingx.JXTitledPanel visualPropertyPanel;
    private javax.swing.JScrollPane visualPropertyScrollPane;
    private javax.swing.JTree visualPropertyTree;

    // End of variables declaration
    private void setTree() {
        /*
         * Define root category
         */
        DefaultMutableTreeNode root = new DefaultMutableTreeNode(
                "Visual Property");
        DefaultMutableTreeNode nodeRoot = new DefaultMutableTreeNode("Node");
        DefaultMutableTreeNode edgeRoot = new DefaultMutableTreeNode("Edge");

        root.add(nodeRoot);
        root.add(edgeRoot);

        for (VisualPropertyType type : VisualPropertyType.values()) {
            if (type.isNodeProp())
                nodeRoot.add(new DefaultMutableTreeNode(type.getName()));
            else
                edgeRoot.add(new DefaultMutableTreeNode(type.getName()));
        }

        visualPropertyTree = new JTree(root);
        visualPropertyTree.getSelectionModel()
                          .setSelectionMode(TreeSelectionModel.SINGLE_TREE_SELECTION);

        // Enable tool tips.
        ToolTipManager.sharedInstance()
                      .registerComponent(visualPropertyTree);

        // Set the icon for leaf nodes.
        URL iconURL = Cytoscape.class.getResource(
                "images/ximian/stock_3d-apply-16.png");
        ImageIcon existIcon = new ImageIcon(iconURL);

        if (existIcon != null)
            visualPropertyTree.setCellRenderer(
                new VSTreeCellRenderer(existIcon));
        else
            System.err.println("Icon missing; using default.");

        visualPropertyScrollPane.setViewportView(visualPropertyTree);

        visualPropertyTree.addTreeSelectionListener(
            new javax.swing.event.TreeSelectionListener() {
                public void valueChanged(
                    javax.swing.event.TreeSelectionEvent evt) {
                    visualPropertyTreeValueChanged(evt);
                }
            });
        repaint();
    }

    private void setMappingComboBox() {
        this.mappingComboBox.addItem("Discrete Mapping");
        this.mappingComboBox.addItem("Continuous Mapping");
        this.mappingComboBox.addItem("Passthrough Mapping");
    }

    private void setAttrComboBox() {
        CyAttributes attr = Cytoscape.getNodeAttributes();

        for (String name : attr.getAttributeNames())
            attributeComboBox.addItem(name);
    }

    private void setAdvancedPanel() {
        advancedCollapsiblePanel.setLayout(new BorderLayout());

        // the Controls panel with a textfield to filter the tree
        JPanel controls = new JPanel(new FlowLayout(FlowLayout.LEFT, 4, 0));
        controls.add(new JLabel("Search:"));
        controls.add(new JTextField(10));
        controls.add(new JButton("Refresh"));
        controls.setBorder(new TitledBorder("Filters"));
        advancedCollapsiblePanel.add("Center", controls);

        // Show/hide the "Controls"
        cancelButton = new JButton(
                advancedCollapsiblePanel.getActionMap().get(JXCollapsiblePane.TOGGLE_ACTION));
        cancelButton.setText("Show/Hide Search Panel");
        pack();
        repaint();
    }

    private class VSTreeCellRenderer extends DefaultTreeCellRenderer {
        Icon existIcon;

        public VSTreeCellRenderer(Icon icon) {
            existIcon = icon;
        }

        public Component getTreeCellRendererComponent(JTree tree, Object value,
            boolean sel, boolean expanded, boolean leaf, int row,
            boolean hasFocus) {
            super.getTreeCellRendererComponent(tree, value, sel, expanded,
                leaf, row, hasFocus);

            if (leaf && isMappingExist(value)) {
                setIcon(existIcon);
                setToolTipText(
                    "Mapping already exists for this visual property.");
            } else
                setToolTipText(null); //no tool tip

            return this;
        }

        protected boolean isMappingExist(Object value) {
            final String name = (String) ((DefaultMutableTreeNode) value).getUserObject();

            //System.out.println("Val = " + value + value.getClass());
            if (mappingExist.contains(name))
                return true;

            return false;
        }
    }
}
