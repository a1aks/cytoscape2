<?xml version="1.0"?><article><articleinfo><title>Cytoscape User Manual</title></articleinfo><para> </para><section><title>Cytoscape @version@ User Manual</title><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Title_Page?action=AttachFile&amp;do=get&amp;target=cyto-logo-smaller.gif'/></imageobject><textobject><phrase>attachment:cyto-logo-smaller.gif</phrase></textobject></inlinemediaobject> </para><para>This document is licensed under the <ulink url='http://creativecommons.org/licenses/by/2.5/'>Creative Commons license</ulink>, 2006 </para><para>Authors: The Cytoscape Collaboration </para><para>The Cytoscape project is an ongoing collaboration between: </para><table><caption/><tgroup cols='2'><colspec colname='xxx1'/><colspec colname='xxx2'/><tbody><row><entry><para>University of California at San Diego </para></entry><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Title_Page?action=AttachFile&amp;do=get&amp;target=ucsd-logo.gif'/></imageobject><textobject><phrase>attachment:ucsd-logo.gif</phrase></textobject></inlinemediaobject> </para></entry></row><row><entry><para>Institute for Systems Biology </para></entry><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Title_Page?action=AttachFile&amp;do=get&amp;target=isb-logo.gif'/></imageobject><textobject><phrase>attachment:isb-logo.gif</phrase></textobject></inlinemediaobject> </para></entry></row><row><entry><para>Memorial Sloan-Kettering Cancer Center </para></entry><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Title_Page?action=AttachFile&amp;do=get&amp;target=msk-logo.gif'/></imageobject><textobject><phrase>attachment:msk-logo.gif</phrase></textobject></inlinemediaobject> </para></entry></row><row><entry><para>Institut Pasteur </para></entry><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Title_Page?action=AttachFile&amp;do=get&amp;target=pasteur-logo.gif'/></imageobject><textobject><phrase>attachment:pasteur-logo.gif</phrase></textobject></inlinemediaobject> </para></entry></row><row><entry><para>Agilent Technologies </para></entry><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Title_Page?action=AttachFile&amp;do=get&amp;target=agilent-logo.gif'/></imageobject><textobject><phrase>attachment:agilent-logo.gif</phrase></textobject></inlinemediaobject> </para></entry></row><row><entry><para>University of California at San Francisco </para></entry><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Title_Page?action=AttachFile&amp;do=get&amp;target=ucsf-logo.gif'/></imageobject><textobject><phrase>attachment:ucsf-logo.gif</phrase></textobject></inlinemediaobject> </para></entry></row></tbody></tgroup></table><para>Funding for Cytoscape is provided by a federal grant from the U.S. National Institute of General Medical Sciences (NIGMS) of the National Institutes of Health (NIH) under award number GM070743-01. Corporate funding is provided through a contract from Unilever PLC. </para> </section><section><title>Introduction</title><para>Cytoscape is a project dedicated to building open-source network visualization and analysis software.  A software “Core” provides basic functionality to layout and query the network and to visually integrate the network with state data.  The Core is extensible through a plug-in architecture, allowing rapid development of additional computational analyses and features. </para><para>Cytoscape's roots are in Systems Biology where it is used for integrating biomolecular interaction networks with high-throughput expression data and other molecular state information. Although applicable to any system of molecular components and interactions, Cytoscape is most powerful when used in conjunction with large databases of protein-protein, protein-DNA, and genetic interactions that are increasingly available for humans and model organisms. Cytoscape allows the visual integration of the network with expression profiles, phenotypes, and other molecular state information and to link the network to databases of functional annotations. <emphasis role='strong'>The central organizing metaphor of Cytoscape is a network (graph), with genes, proteins, and molecules represented as nodes and interactions represented as links, i.e. edges, between nodes.</emphasis> </para><para><emphasis role='underline'><emphasis role='strong'>Development</emphasis></emphasis> Cytoscape is a collaborative project between the Institute for Systems Biology (Leroy Hood lab), the University of California San Diego (Trey Ideker lab), Memorial Sloan-Kettering Cancer Center (Chris Sander lab), the Institut Pasteur (Benno Schwikowski lab), Agilent Technologies (Annette Adler lab) and the University of California, San Francisco (Bruce Conklin lab). </para><para>Visit <ulink url='http://www.cytoscape.org'>http://www.cytoscape.org</ulink> for more information. </para><para><emphasis role='underline'><emphasis role='strong'>License</emphasis></emphasis> Cytoscape is protected under the GNU LGPL (Lesser General Public License). The License is included as an appendix to this manual, but can also be found online: <ulink url='http://www.gnu.org/copyleft/lesser.txt'>http://www.gnu.org/copyleft/lesser.txt</ulink> Cytoscape also includes a number of other open source libraries, which are detailed in <ulink url='#acknowledgements'>Acknowledgements</ulink> below. </para><para><emphasis role='underline'><emphasis role='strong'>What’s New in 2.4</emphasis></emphasis> </para><para><emphasis><emphasis role='strong'>Cytoscape version 2.4</emphasis></emphasis> contains several new features, plus improvements to the performance and usability of the software. These include: </para><itemizedlist><listitem>Publication quality image generation.  This includes: <itemizedlist><listitem>Node label position adjustment. </listitem><listitem>Automatic Visual Legend generator. </listitem><listitem>Node position fine-tuning by arrow keys. </listitem><listitem><para>The ability to override selected <ulink url='/cgi-bin/moin.cgi/VizMap'>VizMap</ulink> settings. </para></listitem></itemizedlist></listitem><listitem><para><emphasis><emphasis role='strong'>Quick Find</emphasis></emphasis> plugin. </para></listitem><listitem>New Cytoscape icons for a cleaner user interface. </listitem><listitem>Consolidated network import capabilities. <itemizedlist><listitem>Import network from remote data sources (through http or ftp). </listitem><listitem>Default support for the following file formats: <itemizedlist><listitem><para><ulink url='http://sbml.org/index.psp'>Systems Biology Markup Language (SBML)</ulink> </para></listitem><listitem><para><ulink url='http://www.biopax.org/'>BioPAX Level 1 and 2</ulink> </para></listitem><listitem><para><ulink url='http://psidev.sourceforge.net/mi/xml/doc/user/'>PSI-MI (Level 1 and 2.5)</ulink> </para></listitem><listitem>Delimited text table (TAB delimited text file, CSV, etc.) </listitem><listitem><para>Excel (<emphasis>.xls</emphasis>) format file. </para></listitem></itemizedlist></listitem></itemizedlist></listitem><listitem><para>New Ontology Server.  This will eventually replace the BioDataServer. New Ontology Server features include: </para><itemizedlist><listitem>Native support for OBO format ontology files.  Users can import many different ontologies in the OBO format. </listitem><listitem>Ability to visualize the ontology tree as a network (DAG). </listitem><listitem>Full support for Gene Association files. </listitem></itemizedlist></listitem><listitem>Support for Java SE 5. </listitem><listitem>Many, many bug fixes! </listitem></itemizedlist> </section><section><title>Launching Cytoscape</title><para>Cytoscape is a Java application that runs on Linux, Windows, and Mac OS X. </para><para><emphasis role='strong'>System requirements:</emphasis> The system requirements for Cytoscape depend on the size of the networks the user wants to load, view and manipulate. We recommend a recent computer (1GHz CPU or higher) with a high-end graphics card and at least 512MB of free physical RAM. Cytoscape expects a minimum screen resolution of 1024x768. </para><para/><section><title>(1) If necessary, install Java</title><para>If not already installed on your computer, download and install Java SE 5 or 6.  <emphasis><emphasis role='strong'>Cytoscape 2.4 will no longer run with Java version 1.4.x or lower.  You must install Java SE 5 or 6!!!</emphasis></emphasis> </para><para>These can be found at: </para><para><ulink url='http://java.sun.com/javase/downloads/index_jdk5.jsp'>Java SE 5</ulink> </para><para><ulink url='http://java.sun.com/javase/downloads/index.jsp'>Java SE 6</ulink> </para><para/></section><section><title>(2) Install Cytoscape</title><para>There are a number of options for downloading and installing Cytoscape.  All options can be downloaded from the <ulink url='http://cytoscape.org'>http://cytoscape.org</ulink> website. </para><itemizedlist><listitem>Automatic installation packages exist for Windows, Mac OS X, and Linux platforms.   </listitem><listitem>You can install cytoscape from a compressed archive distribution. </listitem><listitem>You can build cytoscape from source. </listitem><listitem><para>You can check out the latest and greatest software from our <ulink url='http://chianti.ucsd.edu/svn'>Subversion repository</ulink>. </para></listitem></itemizedlist><para>Cytoscape installations (regardless of platform) containing the following files and directories: </para><table><caption/><tgroup cols='2'><colspec colname='xxx1'/><colspec colname='xxx2'/><tbody><row><entry><para><emphasis role='strong'>File</emphasis></para></entry><entry><para><emphasis role='strong'>Description</emphasis></para></entry></row><row><entry><para>cytoscape.jar</para></entry><entry><para>Main Cytoscape application (Java archive)</para></entry></row><row><entry><para>cytoscape.sh</para></entry><entry><para>Script to run Cytoscape from command line (Linux, Mac OS X)</para></entry></row><row><entry><para>cytoscape.bat </para></entry><entry><para>Script to run Cytoscape (Windows)</para></entry></row><row><entry><para>LICENSE.txt/html</para></entry><entry><para>Cytoscape GNU LGPL License</para></entry></row><row><entry><para>lib/</para></entry><entry><para>library jar files needed to run Cytoscape.</para></entry></row><row><entry><para>docs/</para></entry><entry><para>Manuals in different formats.  What you are reading now.</para></entry></row><row><entry><para>licenses/</para></entry><entry><para>Licence files for the various libraries distributed with Cytoscape.</para></entry></row><row><entry><para>plugins/</para></entry><entry><para>Directory containing cytoscape <ulink url='/cgi-bin/moin.cgi/PlugIns'>PlugIns</ulink>, in .jar format.</para></entry></row><row><entry><para>sampleData/</para></entry><entry/></row><row><entry><para> </para></entry><entry><para>galFiltered.gml -- Sample molecular interaction network file *</para></entry></row><row><entry><para> </para></entry><entry><para>galFiltered.sif -- Identical network in Simple Interaction Format *</para></entry></row><row><entry><para> </para></entry><entry><para>galExpData.pvals -- Sample gene expression matrix file *</para></entry></row><row><entry><para> </para></entry><entry><para>galFiltered.nodeAttrTable.xls -- Sample node attribute file in Microsoft Excel format</para></entry></row><row><entry><para> </para></entry><entry><para>galFiltered.cys -- Sample session file created from datasets above plus GO Annotations *</para></entry></row><row><entry><para> </para></entry><entry><para>BINDyeast.sif -- Network of all yeast protein-protein interactions in the BIND database as of Dec, 2006 **</para></entry></row><row><entry><para> </para></entry><entry><para>BINDhuman.sif -- Network of all human protein-protein interactions in the BIND database as of Dec, 2006 **</para></entry></row><row><entry><para> </para></entry><entry><para>yeastHighQuality.sif -- Sample molecular interaction network file ***</para></entry></row><row><entry><para> </para></entry><entry><para>interactome_merged.networkTable.gz -- Human interactome network file in tab-delimited format ****</para></entry></row></tbody></tgroup></table><para>* From Ideker et al., Science 292:929 (2001) </para><para>** Obtained from data hosted at <ulink url='http://www.blueprint.org/bind/bind_downloads.html'>http://www.blueprint.org/bind/bind_downloads.html</ulink> </para><para>** From von Mering et al., Nature, 417:399 (2002) and Lee et al, Science 298:799 (2002) </para><para>**** Created from Cytoscape tutorial web page.  Original data sets are available at: <ulink url='http://www.cytoscape.org/cgi-bin/moin.cgi/Data_Sets/'>http://www.cytoscape.org/cgi-bin/moin.cgi/Data_Sets/</ulink>  <emphasis>A merged human interactome by Andrew Garrow, Yeyejide Adeleye and Guy Warner Unilever, Safety and Environmental Assurance Center </emphasis> </para><para/></section><section><title>(3) Launch the application</title><para>Double-click on the icon created by the installer or by running <code>cytoscape.sh</code> from the command line (Linux or Mac OS X) or double-clicking <code>cytoscape.bat</code> (Windows). Alternatively, you can pass the .jar file to Java directly using the command <code>java -Xmx512M -jar cytoscape.jar -p plugins</code>. The <code>-Xmx512M</code> flag tells java to allocate more memory for Cytoscape and the <code>-p plugins</code> option tells cytoscape to load all of the plugins in the plugins directory.  Loading the plugins is important because many key features like layouts, filters and the attribute browser are included with Cytoscape as plugins in the <code>plugins</code> directory. See the [Cytoscape_User_Manual/Command_Line_Arguments Command Line] chapter for more detail. In Windows, it is also possible to directly double-click the .jar file to launch it. However, this does not allow specification of command-line arguments (such as the location of the plugin directory).  </para><para><emphasis role='strong'>Cytoscape Window</emphasis> When you succeed in launching Cytoscape, a window will appear that looks like this (captured on Linux): </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Launching_Cytoscape?action=AttachFile&amp;do=get&amp;target=cytoscape_startup.png'/></imageobject><textobject><phrase>attachment:cytoscape_startup.png</phrase></textobject></inlinemediaobject> </para><para/><section><title>Note on Memory Consumption</title><para>For users interested in loading large networks, the amount of memory needed by Cytoscape will increase. Memory usage depends on both number of network objects (nodes+edges) and the number of attributes. Here are some <emphasis>rough</emphasis> suggestions for memory allocation: </para><para><emphasis>Suggested Memory Size <emphasis role='strong'>Without</emphasis> View</emphasis> </para><table><caption/><tgroup cols='2'><colspec colname='xxx1'/><colspec colname='xxx2'/><tbody><row><entry><para>Number of Objects (nodes + edges)</para></entry><entry><para>Suggested Memory Size</para></entry></row><row><entry><para>0 - 70,000</para></entry><entry><para> 512M (default)</para></entry></row><row><entry><para>70,000 - 150,000</para></entry><entry><para>800M</para></entry></row></tbody></tgroup></table><para><emphasis>Suggested Memory Size <emphasis role='strong'>With</emphasis> View</emphasis> </para><table><caption/><tgroup cols='2'><colspec colname='xxx1'/><colspec colname='xxx2'/><tbody><row><entry><para>Number of Objects (nodes + edges)</para></entry><entry><para>Suggested Memory Size</para></entry></row><row><entry><para>0 - 20,000</para></entry><entry><para>512M (default)</para></entry></row><row><entry><para>20,000 - 70,000</para></entry><entry><para>800M</para></entry></row><row><entry><para>70,000 - 150,000</para></entry><entry><para>1G</para></entry></row></tbody></tgroup></table><para/></section><section><title>Note on Directory Location</title><para>For the application to work properly, all files should be left in the directory in which they were unpacked. The core Cytoscape application assumes this directory structure when looking for the various libraries needed to run the application.  If you are adventurous, you can get creative with the $CLASSPATH and/or the cytoscape.jar manifest file and run Cytoscape from any location you want. </para></section></section> </section><section><title>Quick Tour of Cytoscape</title><para>When a network is loaded, Cytoscape will look something like the image below: </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=cytoscape_startup_network.png'/></imageobject><textobject><phrase>attachment:cytoscape_startup_network.png</phrase></textobject></inlinemediaobject> </para><para>The main window here has several components: </para><orderedlist numeration='arabic'><listitem>The menu bar at the top (See below for more information about each menu). </listitem><listitem>The toolbar, which contains icons for commonly used functions. These functions are also available via the menus. Hover the mouse pointer over an icon and wait momentarily for a description to appear as a tooltip. </listitem><listitem>The network management panel (top-left ). This contains an optional network overview pane (bottom-left overview of the network). </listitem><listitem>The main network view window, which displays the network. </listitem><listitem>The attribute browser panel (bottom panel), which displays attributes of selected nodes and edges and enables you to modify the values of attributes. </listitem></orderedlist><para>The network management and attribute browser panels are dockable tabbed panels known as CytoPanels.  You can undock any of these panels by clicking on the Float Window control in the upper-right corner of the CytoPanel. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=float_icon.png'/></imageobject><textobject><phrase>attachment:float_icon.png</phrase></textobject></inlinemediaobject> If you select this control, e.g. on the attribute browser panel, you will now have two Cytoscape windows, the main window, and a new window labeled CytoPanel 2, similar to the one shown below. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=attribute_browser_nodes.png'/></imageobject><textobject><phrase>attachment:attribute_browser_nodes.png</phrase></textobject></inlinemediaobject> Note that CytoPanel 2 now has a Dock Window control. If you select this control, the window will dock onto the main window. </para><para>Cytoscape also has an editor that enables you to build and modify networks interactively by dragging and dropping nodes and edges from a palette onto the main network view window.  The Node shapes and Edge arrows on the palette are defined by the currently used Visual Style.  To edit a network, just select the Editor tab on CytoPanel 1.  An example of an editor, with the palette contained in CytoPanel 1 and defined by the Bio<emphasis role='strong'/>Molecule<emphasis role='strong'/>Editor Visual Style, is shown below. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=editor1.png'/></imageobject><textobject><phrase>attachment:editor1.png</phrase></textobject></inlinemediaobject> <anchor id='menus'/> </para><para/><section><title>The Menus</title><para><emphasis role='strong'>File</emphasis> The <emphasis role='underline'>File</emphasis> menu contains most basic file functionality:  <emphasis role='underline'>File → Open</emphasis> for opening a Cytoscape session file, <emphasis role='underline'>File → Save</emphasis> for saving a session file, <emphasis role='underline'>File → Import</emphasis> for importing data such as networks and attributes, <emphasis role='underline'>File → Export</emphasis> for exporting data and images.  <emphasis role='underline'>File → Print</emphasis> allows printing.  <emphasis role='underline'>File → Quit</emphasis> closes all windows of Cytoscape and exits the program. <emphasis role='underline'>File → New </emphasis> creates a new network, either blank for editing, or from an existing network. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=menu_file.png'/></imageobject><textobject><phrase>attachment:menu_file.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='strong'>Edit</emphasis> The <emphasis role='underline'>Edit</emphasis> menu contains Undo and Redo menu items which undo and redo edits made in the Attribute Browser and the Network Editor <emphasis role='strong'>ONLY</emphasis>.  <emphasis>Undo and Redo support do </emphasis>NOT<emphasis> work for other actions in Cytoscape such as layout.</emphasis> </para><para>There are also options for creating and destroying views (graphical representations of a network) and networks (the network data – not yet visualized), as well as an option for deleting selected nodes and edges from the current network. All deleted nodes and edges can be restored to the network via the <emphasis role='underline'>Edit → Undo</emphasis> menu item. The <emphasis role='underline'>Edit</emphasis> Menu also supports Preferences editing for properties and plug-ins via a Preferences Dialog. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=menu_edit.png'/></imageobject><textobject><phrase>attachment:menu_edit.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='strong'>View</emphasis> The <emphasis role='underline'>View</emphasis> menu allows you to display or hide the network management panel (CytoPanel 1), the attribute browser (CytoPanel 2), the Network Overview (in CytoPanel 1), and the Advanced window.  The <emphasis role='underline'>View</emphasis> menu also allows you to open the VizMapper and lock the VizMapper.  The <emphasis role='underline'>View → Desktop</emphasis> provide further control over the various CytoPanels. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=menu_view.png'/></imageobject><textobject><phrase>attachment:menu_view.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='strong'>Select</emphasis> The <emphasis role='underline'>Select</emphasis> menu contains different options selecting nodes and edges.  It also contains the <emphasis role='underline'>Select → Use Filters</emphasis> option which allows filters to be created which can be used to automatically select portions of a network whose node or edge attributes meet a filtering criterion. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=menu_select.png'/></imageobject><textobject><phrase>attachment:menu_select.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='strong'>Layout</emphasis> The <emphasis role='underline'>Layout</emphasis> menu has an array of features for organizing the network visually. The top of the menu contains tools for manipulating sections of networks. These tools include scale, rotate, distribute, and align.  The bottom section of the menu lists a variety of layout algorithms which automatically lay a network out. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=menu_layout.png'/></imageobject><textobject><phrase>attachment:menu_layout.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='strong'>Plugins</emphasis> The <emphasis role='underline'>Plugins</emphasis> menu has menu items or choices added by plugins that have been loaded, such as "Import BioPAX Document from file". Depending on which plugins are loaded, the plugins that you see may be different than what appear here. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=menu_plugins.png'/></imageobject><textobject><phrase>attachment:menu_plugins.png</phrase></textobject></inlinemediaobject> </para><table><caption/><tgroup cols='1'><colspec colname='xxx1'/><tbody><row><entry><para>Note: A list of available Cytoscape Plugins with descriptions is available online at: <ulink url='http://cytoscape.org/plugins2.php'>http://cytoscape.org/plugins2.php</ulink> </para></entry></row></tbody></tgroup></table><para><emphasis role='strong'>Help</emphasis> The <emphasis role='underline'>Help</emphasis> menu allows you to launch the online help viewer and browse the table of contents (Contents…). The “About…” menu item displays information about the running version of Cytoscape. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=menu_help.png'/></imageobject><textobject><phrase>attachment:menu_help.png</phrase></textobject></inlinemediaobject> </para><para/></section><section><title>Network Management</title><para>Cytoscape 2.3 allows multiple networks to be loaded at a time, either with or without a view. A network stores all the nodes and edges that are loaded by the user and a view displays them. You can have many views of the same network. Networks (and their optionally associated views) can be organized hierarchically. </para><para>An example where a number of networks have been loaded and arranged hierarchically is shown below: </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=cytoscape_network_hierarchy.png'/></imageobject><textobject><phrase>attachment:cytoscape_network_hierarchy.png</phrase></textobject></inlinemediaobject> </para><para>The network manager (top-right tree view in CytoPanel 1) shows the networks that are loaded. Clicking on a network here will make that view active in the main window, if the view exists (green highlighted networks only). Each network has a name and size (number of nodes and edges), which are shown in the network manager. If a network is loaded from a file, the network name is the name of the file. </para><para>Some networks are very large (thousands of nodes and edges) and can take a long time to display. For this reason, a network in Cytoscape may not contain a ‘view’. Networks that have a view are highlighted in green and networks that don’t have a view are highlighted in red. You can create or destroy a view for a network by right-clicking the network name in the network manager or by choosing the appropriate option in the edit menu. You can also destroy previously loaded networks this way. In the picture above, seven networks are loaded, six green ones with views and one red one without a view. </para><para>Certain operations in Cytoscape will create new networks. If a new network is created from an old network, for example by selecting a set of nodes in one network and copying these nodes to a new network (via the <emphasis role='underline'>File → New → Network</emphasis> option), it will be shown as a child of the network that it was derived from. In this way, the relationships between networks that are loaded in Cytoscape can be seen at a glance. Networks in the top part of the tree in the figure above were generated in this manner. </para><para>The available network views are also arranged as multiple, overlapping windows in the network view window. You can maximize, minimize, and destroy network views by using the normal window controls for your operating system. </para><para/></section><section><title>The Network Overview Window</title><para>The network overview window shows an overview (or ‘bird’s eye view’) of the network. It can be used to navigate around a large network view. This feature can be turned on or off via the <emphasis role='underline'>View → Show/Hide Network Overview</emphasis> menu. The blue rectangle in the overview window shown below can be dragged with the mouse to navigate to a part of the network. The size of the navigation rectangle depends on the size of the active view and the zoom level of the view. The rectangle is smaller if the view is zoomed in and larger if zoomed out. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Quick_Tour?action=AttachFile&amp;do=get&amp;target=network_overview.png'/></imageobject><textobject><phrase>attachment:network_overview.png</phrase></textobject></inlinemediaobject> </para></section> </section><itemizedlist><listitem><anchor id='command_line_args'/> </listitem></itemizedlist><para/><section><title>Command Line Arguments</title><table><caption/><tgroup cols='1'><colspec colname='xxx1'/><tbody><row><entry><para><emphasis role='strong'>Important!</emphasis> The command line arguments have changed since version 2.2, so please read this section carefully. </para></entry></row></tbody></tgroup></table><para>Cytoscape recognizes a number of optional command line arguments, including run-time specification of network files, attribute files, and session files. This is the output generated when the cytoscape is executed with the "-h" or "--help" flag. </para><para></para><screen><![CDATA[usage: java -Xmx512M -jar cytoscape.jar [OPTIONS]
 -h,--help                      Print this message.
 -v,--version                 Print the version number.
 -s,--session <file>        Load a cytoscape session (.cys) file.
 -N,--network <file>     Load a network file (any format).
 -e,--edge-attrs <file>    Load an edge attributes file (edge attribute format).
 -n,--node-attrs <file>   Load a node attributes file (node attribute format).
 -m,--matrix <file>        Load a node attribute matrix file (table).
 -p,--plugin <file>         Load a plugin jar file, directory of jar files,
                                     plugin class name, or plugin jar URL.
 -P,--props <file>         Load cytoscape properties file (Java properties
                                    format) or individual property: -P name=value.
 -V,--vizmap <file>      Load vizmap properties file (Java properties format).
]]></screen><para>Any file specified for an option may be specified as either a path or as a URL.  For example you can specify a network as a file (assuming that myNet.sif exists in the current working directory): <code>cytoscape.sh -N myNet.sif</code>. Or you can specify a network as a URL: <code>cytoscape.sh -N http://example.com/myNet.sif</code>. </para><table><caption/><tgroup cols='2'><colspec colname='xxx1'/><colspec colname='xxx2'/><tbody><row><entry><para><emphasis role='strong'>Argument</emphasis> </para></entry><entry><para><emphasis role='strong'>Description</emphasis> </para></entry></row><row><entry><para>-h,--help </para></entry><entry><para>This flag generates the help output you see above and exits. </para></entry></row><row><entry><para>-v,--version </para></entry><entry><para>This flag prints the version number of cytoscape and exits. </para></entry></row><row><entry><para>-s,--session &lt;file> </para></entry><entry><para>This option specifies a session file to be loaded.  Since only one session file can be loaded at a given time, this option may only specified once on a given command line.  The option expects a <emphasis role='strong'>.cys</emphasis> cytoscape session file.  It is customary, although not necessary, for session file names to contain the <emphasis role='strong'>.cys</emphasis> extension. </para></entry></row><row><entry><para>-N,--network &lt;file> </para></entry><entry><para>This option is used to load all types of network files.  SIF, GML, and XGMML files can all be loaded using the -N option.  You can specify as many networks as desired on a single command line. </para></entry></row><row><entry><para>-e,--edge-attrs &lt;file> </para></entry><entry><para>This option specifies an edge attributes file.  You may specify as many edge attribute files as desired on a single command line. </para></entry></row><row><entry><para>-n,--node-attrs &lt;file> </para></entry><entry><para>This option specifies a node attributes file.  You may specify as many node attribute files as desired on a single command line. </para></entry></row><row><entry><para>-m,--matrix &lt;file> </para></entry><entry><para>This option specifies a data matrix file.  In a biological context, the data matrix consists of expression data. All data matrix files are read into node attributes. You may specify as many data matrix files as desired on a single command line. </para></entry></row><row><entry><para>-p,--plugin &lt;file> </para></entry><entry><para>This option specifies a cytoscape plugin (.jar) file to be loaded by cytoscape. This option also subsumes the previous "resource plugin option".   You may specify a class name that identifies your plugin and the plugin will be loaded if the plugin is in Cytoscape's CLASSPATH.  For example, assuming that the class MyPlugin can be found in the CLASSPATH, you could specify the plugin like: <code>cytoscape.sh -p MyPlugin.class</code>.  A final means of specifying plugins is to specify a file name who's contents contain a list of plugin jar files. </para></entry></row><row><entry><para>-P,--props &lt;file> </para></entry><entry><para>This option specifies cytoscape properties.  Properties can be specified either as a properties file (in Java's standard properties format), or as individual properties. To specify individual properties, you must specify the property name followed by the property value where the name and value are separated by the '=' sign.  For example to specify the defaultSpeciesName:  <code>cytoscape.sh -P defaultSpeciesName=Human</code>.  If you would like to include spaces in your property, simply enclose the name and value in quotation marks:  <code>cytoscape.sh -P "defaultSpeciesName=Homo Sapiens"</code>.  The property option subsumes previous options -noCanonicalization, -species, and -bioDataServer.  Now it would look like: <code>cytoscape.sh -P defaultSpeciesName=Human -P noCanonicalization=true -P bioDataServer=myServer</code>. </para></entry></row><row><entry><para>-V,--vizmap &lt;file> </para></entry><entry><para>This option specifies a visual properties file. </para></entry></row></tbody></tgroup></table><para>Aside from plugins, all options described above can be loaded from the GUI once cytoscape is running. </para><para>Additional command line arguments that are not recognized by the Cytoscape core are passed to the Plugin modules. Please refer to the documentation for each specific Plugin for more details. </para> </section><itemizedlist><listitem><anchor id='properties'/> </listitem></itemizedlist><para/><section><title>Cytoscape Preferences</title><para/><section><title>Managing Properties</title><table><caption/><tgroup cols='1'><colspec colname='xxx1'/><tbody><row><entry><para><emphasis role='strong'>Important!</emphasis> If you have used previous versions of Cytoscape, you will notice that handling of properties has changed.  The most important change is that properties are no longer saved by default to the current directory or to your home .cytoscape directory.  Properties are stored by default in Cytoscape Session files.  The cytoscape.props file still exists in the .cytoscape directory but is only written to when the user explicitly requests that the current settings be made the defaults for all future sessions of Cytoscape.  <emphasis>Unless you have something important in your .cytoscape/cytoscape.props file, your best bet will be to delete the file and use the defaults.</emphasis> </para></entry></row></tbody></tgroup></table><para>The Cytoscape Preferences Dialog, accessed via <emphasis role='underline'>Edit → Preferences → Properties…</emphasis>, has sections for general properties display/editing and plugins specification via the properties mechanism. Preferences are now stored in Cytoscape session files.  Any changes made to properties while running Cytoscape will be saved to the current session when you save the session.  If you do not save the session, export the properties (<emphasis role='underline'>File → Export</emphasis>), or set them as defaults (see below), the properties will be lost and the next time Cytoscape starts, defaults will be used. </para><para>Cytoscape properties are displayed in the Properties section of the dialog. These properties are configurable via Add, Modify and Delete operations. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Preferences?action=AttachFile&amp;do=get&amp;target=preferences_editor.png'/></imageobject><textobject><phrase>attachment:preferences_editor.png</phrase></textobject></inlinemediaobject> </para><para>Some common properties are described below. </para><table><caption/><tgroup cols='3'><colspec colname='xxx1'/><colspec colname='xxx2'/><colspec colname='xxx3'/><tbody><row><entry><para><emphasis role='strong'>Property name</emphasis></para></entry><entry><para><emphasis role='strong'>Default value</emphasis></para></entry><entry><para><emphasis role='strong'>Valid values</emphasis></para></entry></row><row><entry><para>defaultSpeciesName </para></entry><entry><para>PleaseSpecify </para></entry><entry><para>Species name. This value must match the name in the first line of the file specified in the bioDataServer’s manifest for synonyms e.g., for yeast synonyms, specify Saccharomyces cerevisiae</para></entry></row><row><entry><para>bioDataServer </para></entry><entry><para>PleaseSpecify </para></entry><entry><para>annotation/manifest, and other manifest file locations </para></entry></row><row><entry><para>viewThreshold </para></entry><entry><para>10000 </para></entry><entry><para>integer > 0 </para></entry></row><row><entry><para>secondaryViewThreshold </para></entry><entry><para>30000 </para></entry><entry><para>integer > 0 </para></entry></row><row><entry><para>viewType </para></entry><entry><para>tabbed </para></entry><entry><para>tabbed </para></entry></row><row><entry><para>plugins </para></entry><entry><para> </para></entry><entry><para>comma-separated list of jar files containing plugins, or URL’s to jar files containing plugins (e.g., <ulink url='http://server/my-plugin.jar'>http://server/my-plugin.jar</ulink>) </para></entry></row><row><entry><para>defaultWebBrowser </para></entry><entry><para> </para></entry><entry><para>A path to the web browser on your system. This only needs to be specified if Cytoscape can’t find the web browser on your system. </para></entry></row></tbody></tgroup></table><para>The specification of plugins to be loaded into Cytoscape at startup time is also supported in cytoscape.props and accessible in this dialog under the Plugins section. In this special case, the plugins property specifies a comma-separated list of jar files or URLs to jar files containing plugins. This property is parsed and presented and managed in the Plugins table, as at left. </para><para><emphasis role='strong'>Setting Default Properties</emphasis>  It is possible to alter the default properties for Cytoscape. In the Cytoscape Preferences Dialog, accessed  via <emphasis role='underline'>Edit → Preferences → Properties…</emphasis>, edit any preferences, then click the "Make Current Cytoscape Properties Default" checkbox in the "Default Cytoscape Properties" section of the dialog.  This will save any properties to the .cytoscape directory contained in your home directory.  You should only do this if you want specific properties to apply to all of your Cytoscape sessions. You can rely on the Cytoscape session file to maintain the properties used for that particular session, so making certain properties default is not necessary to save the properties. </para><para/></section><section><title>Managing Bookmarks</title><para>You can manage the available bookmarks on the system from the <emphasis role='underline'>Edit → Preferences → Bookmarks…</emphasis> menu.   </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Preferences?action=AttachFile&amp;do=get&amp;target=BookmarkManager.PNG'/></imageobject><textobject><phrase>attachment:BookmarkManager.PNG</phrase></textobject></inlinemediaobject> </para><para>There are currently two types of bookmarks <emphasis role='strong'>network</emphasis> and <emphasis role='strong'>annotation</emphasis>.  Network bookmarks are URLs pointing to network files available on the internet.  These are nomal networks that can be loaded into Cytoscape.  The annotation bookmarks are URLs pointing to ontology annotation files.  The annotation bookmarks are only used when importing an ontology. </para><para/></section><section><title>Managing Proxy Servers</title><para>You can define and configure a proxy server for Cytoscape to use from the <emphasis role='underline'>Edit → Preferences → Proxies…</emphasis> menu. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Preferences?action=AttachFile&amp;do=get&amp;target=ProxyServerSetting.PNG'/></imageobject><textobject><phrase>attachment:ProxyServerSetting.PNG</phrase></textobject></inlinemediaobject> </para><para>After the proxy server is set, all network traffic related to loading a network from URL will pass through the proxy server.  Other plugins use this capability as well. </para></section> </section><section><title>Creating Networks</title><para>There are 3 different ways of creating networks in Cytoscape: </para><orderedlist numeration='arabic'><listitem>Importing pre-existing, formatted network files. </listitem><listitem>Importing pre-existing unformatted text or excel files. </listitem><listitem>Creating an empty network and adding nodes and edges using the Editor. </listitem></orderedlist><para/><section><title>Import Fixed-Format Network Files</title><para>Network files can be specified in any of the formats described in the [Cytoscape_User_Manual/Network_Formats Network Formats] chapter. Networks are imported into Cytoscape through the <emphasis><emphasis role='strong'>Import Network</emphasis></emphasis> dialog, which can be activated through Menu <emphasis role='underline'>File → Import → Network</emphasis>. The network file can either be located on the local computer, or it can also be located in a remote computer and referenced with a URL. </para><para/><section><title>Load Networks from Local Computer</title><para>By default, Cytoscape load network from the local computer. When the import network dialog is initialized, the data source type “Local” will be selected. To import a network, first click on the “Select” button, which will pop-up a file chooser and let user browse the local disk to choose a network file. User is allowed only to choose Cytoscape recognized network types. After the file is selected, a click on the Import button will import the network. For example, The following steps will load a sample molecular interaction network in SIF format. Use the menu <emphasis role='underline'>File → Import → Network</emphasis>. select the file “galFiltered.sif” in “sampleData” directory. After a few seconds, a small network of 331 nodes should appear in the main window. The procedure to load network in other format is very similar. To load the same interaction network as a GML, use the menu: <emphasis role='underline'>File → Import → Network</emphasis> again. In the resulting file dialog box, select the file “sampleData/galFiltered.gml”. Node and edge attribute files as well as expression data and extra annotation can be loaded as well. </para><para>Network files may also be loaded directly from the command line using the –N option (works for SIF, GML, and XGMML). </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Creating_Networks?action=AttachFile&amp;do=get&amp;target=network_import_dialog1.png'/></imageobject><textobject><phrase>attachment:network_import_dialog1.png</phrase></textobject></inlinemediaobject> </para><para/></section><section><title>Load Network from a Remote Computer (URL import)</title><para>Cytoscape also supports network import through URL. In this case, user should choose “Remote” as the data Source Type on the Import Network dialog. Next the user can either type (or paste) a URL into choice box or select one of the pre-existing bookmarked networks.  Cytoscape supports URL bookmarks. A click on the right-most arrow of the comboBox will show a list of available network bookmarks. Cytoscape contains a pre-defined a list of bookmarks, which point to sample network files located on the Cytoscapes web server. Users may add new bookmarks through the Bookmark manager described in the [Cytoscape_User_Manual/Preferences Preferences] chapter.  </para><para>After the user specifies a URL a click on the import button will load the network from the remote computer.   </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Creating_Networks?action=AttachFile&amp;do=get&amp;target=network_import_dialog2.png'/></imageobject><textobject><phrase>attachment:network_import_dialog2.png</phrase></textobject></inlinemediaobject> </para><para>Network import from URL has an important caveat.  Because Cytoscape determines file type primarily (not exclusively) by file extension, it can have trouble importing networks with URLs that don't end in a  human readable file name.  If Cytoscape does not recognize a meaningful file name with extension in the URL, it will attempt to guess the type of file based on MIME type.  If the MIME type is not recognizable to any of our import handlers, then the import will fail.   </para><para>Another issue for network import is the presence of firewalls, which can affect what files are accessible to a computer.  To work around this problem, Cytoscape supports the use  of proxy servers. To configure the proxy server, click <emphasis role='underline'>Edit → Preference → Proxy Server…</emphasis>.  This is further described in the [Cytoscape_User_Manual/Preferences Preferences] chapter. </para><para><anchor id='import-free-format-tables'/> </para></section></section><section><title>Import Free-Format Table Files</title><para>Introduced in version 2.4, Cytoscape now supports the import of networks from delimited text files and excel files from the menu <emphasis role='underline'>Edit → Import → Network from Table (Text/MS Excel)...</emphasis>.   An interactive GUI allows users to specify parsing options for specified files.  The screen provides a preview that shows how the file will be parsed given the current configuration.  As the configuration changes, the preview updates automatically.  In addition to specifying how the file will be parsed, the user must also choose the columns that represent the Source nodes, the Target nodes, and an optional edge interaction type. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Creating_Networks?action=AttachFile&amp;do=get&amp;target=network_table_import.png'/></imageobject><textobject><phrase>attachment:network_table_import.png</phrase></textobject></inlinemediaobject> </para><para/><section><title>Supported Files</title><para><emphasis>Network Table Import</emphasis> function supports delimited text files and Microsoft Excel Workbooks (1).  The following is a sample table file: </para><para></para><screen><![CDATA[source  target  interaction     boolean attribute       string attribute        floating point attribute
YJR022W YNR053C pp      TRUE    abcd12371       1.2344543
YER116C YDL013W pp      TRUE    abcd12372       1.2344543
YNL307C YAL038W pp      FALSE   abcd12373       1.2344543
YNL216W YCR012W pd      TRUE    abcd12374       1.2344543
YNL216W YGR254W pd      TRUE    abcd12375       1.2344543
]]></screen><para>The network table files should contain at least two columns: <emphasis><emphasis role='strong'>source</emphasis></emphasis> nodes and <emphasis><emphasis role='strong'>target</emphasis></emphasis> nodes.  <emphasis><emphasis role='strong'>Interaction</emphasis></emphasis> is optional in this format.  Therefore, minimal network table looks like the following: </para><para></para><screen><![CDATA[YJR022W YNR053C
YER116C YDL013W
YNL307C YAL038W
YNL216W YCR012W
YNL216W YGR254W
]]></screen><para>One row in a network table file represents an edge and its edge attributes.  This means that a network file is considered a combination of network data and edge attributes.  A table may contain columns that aren't meant to be edge attributes.  In this case, you can choose not to import those columns by clicking on the column header in the preview window.  This function is useful when importing a data table like the following (2): </para><screen><![CDATA[Unique ID A     Unique ID B     Alternative ID A        Alternative ID B        Aliases A       Aliases B       Interaction detection methods   First author surnames   Pubmed IDs      species A       species B       Interactor types        Source database Interaction ID  Interaction labels      Cross-references        Associated Files        Experiment files        Experiment labels       Different techniques    Different Pubmed articles       Different sources       Weight

7205    5747    TRIP6   PTK2    Q15654  Q05397-1        vv|HPRD Currently not available 14688263|15892868(Marcotte)     Mammalia        Homo sapiens    protein|protein HPRD|Marcotte   0       Thyroid hormone receptor interactor 6-FAK-|PTK2-TRIP6   NA(HPRD)|NA(Marcotte)   HPRD/02859_psimi.xml|other/ORIGINAL_DATA_MARCOTTE.txt   vv(HPRD/02859_psimi.xml)|HPRD(other/ORIGINAL_DATA_MARCOTTE.txt) 17651(ExptRef)|Marcotte 2       2       2       2

4174    7311    MCM5    UBA52   P33992  P62987  neighbouring_reaction   Currently not available 15608231(Reactome)      Homo sapiens    Homo sapiens    protein|protein Reactome        1       P33992-P62988   Reaction:68944<->Reaction:68946(Reactome)|Reaction:68946<->Reaction:68944(Reactome)     other/ORIGINAL_DATA_MARCOTTE.txt        neighbouring_reaction(other/REACTOMEhomo_sapiens.interactions.txt)      Reactome        1       1       1       1

7040    7040    TGFB1   TGFB1   P01137  P01137  nmr: nuclear magnetic resonance Currently not available 8679613 Homo sapiens    Homo sapiens    protein|protein BIND    2       TGFB1-TGFB1-    72085(BIND)     BIND/bind_taxid9606.1.psi.xml   nmr: nuclear magnetic resonance(BIND/bind_taxid9606.1.psi.xml)  NotAvailable    1       1       1       1
]]></screen><para>This data file is a tab-delimited text and contains network data (interactions), edge attributes, and node attributes.  To import network and edge attributes from this table, you need to choose <emphasis>Unique ID A</emphasis> as source, <emphasis>Unique ID B</emphasis> as target, and <emphasis>Interactor types</emphasis> as interaction type.  Then you need to turn off columns used for node attributes (<emphasis>Alternative ID A</emphasis>, <emphasis>species B</emphasis>, etc.).  Other columns can be imported as edge attributes.   </para><para>The network import dialog cannot import node attributes - only edge attributes.  To import node attributes from this table, please see the <ulink url='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes'> Attributes</ulink> section of this manual. </para><para>Note (1): in version 2.4, Cytoscape supports Excel Workbooks with single sheet (table) only.  <emphasis role='underline'>Multiple sheet Workbooks are not supported.</emphasis> </para><para>Note (2): from <emphasis>A merged human interactome</emphasis> datasets by Andrew Garrow, Yeyejide Adeleye and Guy Warner (Unilever, Safety and Environmental Assurance Center, 12 October 2006).  Actual data files are available at: </para><para><ulink url='http://www.cytoscape.org/cgi-bin/moin.cgi/Data_Sets/'>http://www.cytoscape.org/cgi-bin/moin.cgi/Data_Sets/</ulink> </para><para/></section><section><title>Basic Operations</title><para>To import network text/Excel tables, please follow these steps: </para><orderedlist numeration='arabic'><listitem><para>Select <emphasis role='underline'>File → Import → Network from Table (Text/MS Excel)...</emphasis> </para></listitem><listitem><para>Select a table file by clicking on <emphasis><emphasis role='strong'>Select File</emphasis></emphasis> button.  </para></listitem><listitem><para>Set Interaction Definition.  You need to specify <emphasis><emphasis role='strong'>Source Interaction</emphasis></emphasis>, <emphasis><emphasis role='strong'>Target Interaction</emphasis></emphasis>, and <emphasis><emphasis role='strong'>Interaction Type</emphasis></emphasis>.  For <emphasis><emphasis role='strong'>Interaction Type</emphasis></emphasis>, if you select <emphasis>Default Interaction</emphasis> the default interaction value will be used for all edges.  The default value is <emphasis>pp</emphasis>.  This value can be modified in <emphasis>Advanced Options</emphasis>. </para></listitem><listitem>(Optional) Select edge attribute columns.  Network table files can have edge attribute columns in addition to network data. <itemizedlist><listitem><para>Enable/Disable Attribute Column - By <emphasis><emphasis role='strong'>left</emphasis></emphasis>-clicking on a <emphasis><emphasis role='strong'>column header</emphasis></emphasis> in the preview table, you can enable/disable edge attributes.  If the header is checked and entries are blue, the column will be imported as an edge attribute.  For example, the table below shows that column 1 through 3 will be used as network data, and column 5 and 6 will be imported as edge attributes.   <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Creating_Networks?action=AttachFile&amp;do=get&amp;target=network_table_sample.png'/></imageobject><textobject><phrase>attachment:network_table_sample.png</phrase></textobject></inlinemediaobject> </para></listitem><listitem>Change Attribute Name and Data Types: </listitem></itemizedlist><itemizedlist><listitem><para>If you <emphasis><emphasis role='strong'>right</emphasis></emphasis>-click on a <emphasis><emphasis role='strong'>column header</emphasis></emphasis> in the preview table, the dialog above will be displayed.  You can modify attribute name and data type from this dialog.  For more detail, see <emphasis><emphasis role='strong'>Modify Attribute Name/Type</emphasis></emphasis>. </para></listitem></itemizedlist></listitem><listitem><para>Click <emphasis><emphasis role='strong'>Import</emphasis></emphasis> button.  </para></listitem></orderedlist><para><emphasis role='strong'>Advanced Options</emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Creating_Networks?action=AttachFile&amp;do=get&amp;target=network_import_advanced.png'/></imageobject><textobject><phrase>attachment:network_import_advanced.png</phrase></textobject></inlinemediaobject> </para><para>You can select several options by checking <emphasis><emphasis role='strong'>Show Text File Import Options</emphasis></emphasis>. </para><itemizedlist><listitem><para>Delimiter: You can select multiple delimiters for text tables.  By default, <emphasis><emphasis role='strong'>Tab</emphasis></emphasis> and <emphasis><emphasis role='strong'>Space</emphasis></emphasis> are selected as delimiters. </para></listitem><listitem><para>Preview Options: When you select a network table file, first 100 entries will be displayed in the Preview panel.  To display more entries, change the value for this option.  If you want to show all entries in the file, select <emphasis><emphasis role='strong'>Show all entries in the file</emphasis></emphasis>.  You need to click <emphasis><emphasis role='strong'>Reload button</emphasis></emphasis> to update the Preview panel. </para></listitem><listitem>Attribute Names <itemizedlist><listitem><para><emphasis><emphasis role='strong'>Transfer first line as attribute names</emphasis></emphasis>: By choosing this option, first entry in the file will be used as edge attribute names. </para></listitem><listitem><para><emphasis><emphasis role='strong'>Start Import Row</emphasis></emphasis>: Change the start row for import.  For example, if you want to skip first 3 rows in the file, set <emphasis>4</emphasis> for this option. </para></listitem><listitem><para><emphasis><emphasis role='strong'>Comment Line</emphasis></emphasis>: Rows start with this character will be ignored.  This option will be used to skip comment lines in text files. </para></listitem></itemizedlist></listitem><listitem><para>Network Import Options: If <emphasis>Interaction Type</emphasis> is set to <emphasis><emphasis role='strong'>Default Interaction</emphasis></emphasis>, the value here will be used as interaction for all edges. </para></listitem></itemizedlist><para><emphasis role='strong'>Modify Attribute Name/Type</emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Creating_Networks?action=AttachFile&amp;do=get&amp;target=network_table_attr_dialog1.png'/></imageobject><textobject><phrase>attachment:network_table_attr_dialog1.png</phrase></textobject></inlinemediaobject> </para><para>Attribute names and data types can be modified in this dialog. </para><itemizedlist><listitem>Modify Attribute Name - just type new attribute name in the text field and click OK. </listitem><listitem><para>Modify Attribute Data Type - <emphasis>Table Import</emphasis> supports the following attribute data types: </para><itemizedlist><listitem>String </listitem><listitem>Boolean (True/False) </listitem><listitem>Integer </listitem><listitem>Floating Point </listitem><listitem>List of String/Boolean/Integer/Floating Point    </listitem></itemizedlist>Cytoscape has basic data type detection function for string, boolean, integer, and floating point numbers.  This means attribute data type will be set to integer if all entries in a column are integers, etc.  If you need to change the suggested data type, click on one of the radio buttons in the dialog.  For list data type, you need to select delimiter for list cells.  The list delimiter is global, i.e. all cells will be split by this character.  You cannot specify column-specific list delimiter. </listitem></itemizedlist><para/></section></section><section><title>Edit a New Network</title><para>The last option for creating a network is to create a new, empty network and manual add nodes and edges.  To do this, select the <emphasis role='underline'>File → New → Network → Empty Network</emphasis> menu.  This will create a new network.  From here select the Edit tab in Cyto Panel 1 and edit the network as described in the [Cytoscape_User_Manual/Editor Cytoscape Editor] chapter. </para></section> </section><section><title>Supported Network File Formats</title><para>Cytoscape can read network/pathway files written in the following formats: </para><itemizedlist><listitem>Simple interaction file (SIF or .sif format) </listitem><listitem>Graph Markup Language (GML or .gml format) </listitem><listitem>XGMML (extensible graph markup and modelling language). </listitem><listitem>SBML </listitem><listitem>BioPAX </listitem><listitem>PSI-MI Level 1 and 2.5 </listitem><listitem>Delimited text </listitem><listitem>Excel Workbook (.xls) </listitem></itemizedlist><para>SIF specifies nodes and interactions only, while others store additional information about network layout and allows network data exchange with a variety of other network programs and data sources. Typically, SIF is used to import interactions when building a network for the first time, since it is easy to create in a text editor or spreadsheet. Once the interactions have been loaded and layout has been performed, the network may be saved to GML or XGMML format for interaction with other systems. All file types listed (except Excel) are text files and you can edit and view them in a regular text editor.  </para><para/><section><title>SIF Format</title><para>The simple interaction format is convenient for building a graph from a list of interactions. It also makes it easy to combine different interaction sets into a larger network, or add new interactions to an existing data set. The main disadvantage is that this format does not include any layout information, forcing Cytoscape to re-compute a new layout of the network each time it is loaded. </para><para>Lines in the SIF file specify a source node, a relationship type (or edge type), and one or more target nodes: </para><para></para><screen><![CDATA[nodeA <relationship type> nodeB
nodeC <relationship type> nodeA
nodeD <relationship type> nodeE nodeF nodeB
nodeG
...
nodeY <relationship type> nodeZ
]]></screen><para>A more specific example is: </para><para></para><screen><![CDATA[node1 typeA node2
node2 typeB node3 node4 node5
node0
]]></screen><para>The first line identifies two nodes, called node1 and node2, and a single relationship between node1 and node2 of type typeA. The second line specifies three new nodes, node3, node4, and node5; here "node2" refers to the same node as in the first line. The second line also specifies three relationships, all of type typeB and with node2 as the source, with node3, node4, and node5 as the targets, respectively. This second form is simply shorthand for specifying multiple relationships of the same type with the same source node. The third line indicates how to specify a node that has no relationships with other nodes. This form is not needed for nodes that do have relationships, since the specification of the relationship implicitly identifies the nodes as well.  </para><para>Duplicate entries are ignored. Multiple edges between the same nodes must have different edge types.  For example, the following specifies two edges between the same pair of nodes, one of type xx and one of type yy: </para><para></para><screen><![CDATA[node1 xx node2
node1 xx node2
node1 yy node2
]]></screen><para>Edges connecting a node to itself (self-edges) are also allowed: </para><para></para><screen><![CDATA[node1 xx node1
]]></screen><para>Every node and edge in Cytoscape has an identifying name, most commonly used with the node and edge data attribute structures. Node names must be unique as identically named nodes will be treated as identical nodes. The name of each node will be the name in this file by default (unless another string is mapped to display on the node using the visual mapper). This is discussed in the section on [Cytoscape_User_Manual/Visual_Styles visual styles]. The name of each edge will be formed from the name of the source and target nodes plus the interaction type: for example, sourceName (edgeType) targetName. </para><para>The tag &lt;interaction type> can be any string.  Whole words or concatenated words may be used to define types of relationships e.g. geneFusion, cogInference, pullsDown, activates, degrades, inactivates, inhibits, phosphorylates, upRegulates, etc. </para><para>Some common interaction types used in the Systems Biology community are as follows: </para><screen><![CDATA[  pp .................. protein – protein interaction
  pd .................. protein -> DNA   
  (e.g. transcription factor binding upstream of a regulating gene.)
]]></screen><para>Some less common interaction types used are: </para><screen><![CDATA[  pr .................. protein -> reaction
  rc .................. reaction -> compound
  cr .................. compound -> reaction
  gl .................. genetic lethal relationship
  pm .................. protein-metabolite interaction
  mp .................. metabolite-protein interaction
]]></screen><para><emphasis role='strong'>Delimiters</emphasis> Whitespace (space or tab) is used to delimit the names in the simple interaction file format. However, in some cases spaces are desired in a node name or edge type. The standard is that, if the file contains any tab characters, then tabs are used to delimit the fields and spaces are considered part of the name. If the file contains no tabs, then any spaces are delimiters that separate names (and names cannot contain spaces). </para><para>If your network unexpectedly contains no edges and node names that look like edge names, it probably means your file contains a stray tab that's fooling the parser. On the other hand, if your network has nodes whose names are half of a full name, then you probably meant to use tabs to separate node names with spaces. </para><para>Networks in simple interactions format are often stored in files with a ".sif" extension, and Cytoscape recognizes this extension when browsing a directory for files of this type. </para><para/></section><section><title>GML Format</title><para>In contrast to SIF, GML is a rich graph format language supported by many other network visualization packages. The GML file format specification is available at: </para><para><ulink url='http://www.infosun.fmi.uni-passau.de/Graphlet/GML/'>http://www.infosun.fmi.uni-passau.de/Graphlet/GML/</ulink> </para><para>It is generally not necessary to modify the content of a GML file directly. Once a network is built in SIF format and then laid out, the layout is preserved by saving to and loading from GML. Visual attributes specified in a GML file will result in a new visual style named “<emphasis>Filename</emphasis>.style” when that GML file is loaded. </para><para/></section><section><title>XGMML Format</title><para>XGMML is the XML evolution of GML and is based on the GML definition.  In addition to network data, XGMML contains node/edge/network attributes.  The XGMML file format specification is available at: </para><para><ulink url='http://www.cs.rpi.edu/~puninj/XGMML/'>http://www.cs.rpi.edu/~puninj/XGMML/</ulink> </para><para>XGMML is now preferred to GML because it offers the flexibility associated with all XML document types. If you're unsure about which to use, choose XGMML. </para><para/></section><section><title>SBML (Systems Biology Markup Language) Format</title><para>The Systems Biology Markup Language (SBML) is an XML format to describe biochemical networks.  SBML file format specification is available at: </para><para><ulink url='http://sbml.org/documents/'>http://sbml.org/documents/</ulink>  </para><para/></section><section><title>BioPAX (Biological PAthways eXchange) Format</title><para>BioPAX is an OWL (Web Ontology Language) document designed to exchange biological pathways data.  Complete set of documents for this format is available at:  </para><para><ulink url='http://www.biopax.org/index.html'>http://www.biopax.org/index.html</ulink> </para><para/></section><section><title>PSI-MI Format</title><para>The PSI-MI format is a data exchange format for protein-protein interactions.  It is an XML document to describe PPI and associated data.  PSI-MI XML format specification is available at: </para><para><ulink url='http://psidev.sourceforge.net/mi/xml/doc/user/'>http://psidev.sourceforge.net/mi/xml/doc/user/</ulink> </para><para/></section><section><title>Delimited Text Table and Excel Workbook</title><para>Cytoscape has native support for Microsoft Excel files (.xls) and delimited text files.  The table in those file can have network data and edge attributes.  Users can specify columns for source node, target node, interaction type, and edge attributes from GUI.  For more detail, please read <ulink url='#import-free-format-tables'>Import Free-Format Tables</ulink> section.  </para><para/><section><title>NODE NAMING ISSUES IN CYTOSCAPE</title><para>Typically, genes are represented by nodes, and interactions (or other biological relationships) are represented by edges between nodes. For compactness, a gene also represents its corresponding protein. Nodes may also be used to represent compounds and reactions (or anything else) instead of genes. </para><para>If a network of genes or proteins is to be integrated with Gene Ontology (GO) annotation or gene expression data, the gene names must exactly match the names specified in the other data files. We strongly encourage naming genes and proteins by their systematic ORF name or standard accession number; common names may be displayed on the screen for ease of interpretation, so long as these are available to the program in the annotation directory or in a node attribute file. Cytoscape ships with all yeast ORF-to-common name mappings in a synonym table within the annotation/ directory. Other organisms will be supported in the future. </para><para>Why do we recommend using standard gene names? All of the external data formats recognized by Cytoscape provide data associated with particular names of particular objects. For example, a network of protein-protein interactions would list the names of the proteins, and the attribute and expression data would likewise be indexed by the name of the object. </para><para>The problem is in connecting data from different data sources that don't necessarily use the same name for the same object. For example, genes are commonly referred to by different names, including a formal "location on the chromosome" identifier and one or more common names that are used by ordinary researchers when talking about that gene. Additionally, database identifiers from every database where the gene is stored may be used to refer to a gene (e.g. protein accession numbers from Swiss-Prot). If one data source uses the formal name while a different data source used a common name or identifier, then Cytoscape must figure out that these two different names really refer to the same biological entity. </para><para>Cytoscape has two strategies for dealing with this naming issue, one simple and one more complex. The simple strategy is to assume that every data source uses the same set of names for every object. If this is the case, then Cytoscape can easily connect all of the different data sources. </para><para>To handle data sources with different sets of names, as is usually the case when manually integrating gene information from different sources, Cytoscape needs a data server that provides synonym information (See<emphasis>12. Annotation.</emphasis>). A synonym table gives a canonical name for each object in a given organism and one or more recognized synonyms for that object. Note that the synonym table itself defines what set of names are the "canonical" names. For example, in budding yeast the ORF names are commonly used as the canonical names. </para><para>If a synonym server is available, then by default Cytoscape will convert every name that appears in a data file to the associated canonical name. Unrecognized names will not be changed. This conversion of names to a common set allows Cytoscape to connect the genes present in different data sources, even if they have different names – as long as those names are recognized by the synonym server. </para><para>For this to work, Cytoscape must also be provided with the species to which the objects belong, since the data server requires the species in order to uniquely identify the object referred to by a particular name. This is usually done in Cytoscape by specifying the species name on the command line with the –P option (<code>cytoscape.sh -P "defaultSpeciesName=Saccharomyces cerevisiae"</code>) or by editing the properties in the Preferences Dialog (<emphasis role='underline'>Edit → Preference...</emphasis>). </para><para>The automatic canonicalization of names can be turned off using the -P option (<code>cytoscape.sh -P canonicalizeName=false"</code>) or by editing the properties in the Preferences Dialog (<emphasis role='underline'>Edit → Preferences...</emphasis>). This canonicalization of names currently does not apply to expression data. Expression data should use the same names as the other data sources or use the canonical names as defined by the synonym table. </para></section></section> </section><section><title>Node and Edge Attributes</title><para>Interaction networks are useful as stand-alone models. However, they are most powerful for answering scientific questions when integrated with additional information. Cytoscape allows the user to add arbitrary node, edge and network information to Cytoscape as node/edge/network(1) <emphasis role='strong'>attributes</emphasis>. Attributes could be, for example, annotation data on a gene or confidence values in a protein-protein interaction. These attributes can then be visualized in a user-defined way by setting up a mapping from data attributes to visual attributes (colors, shapes, etc.)  See the section on <ulink url='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles'> visual styles</ulink> for a discussion of this. </para><para/><section><title>Cytoscape Attribute File Format</title><para>Node and edge attribute files are simply formatted: A node attribute file begins with the name of the attribute on the first line, and on each following line, has the name of the node, followed by an equals sign, followed by the value of that attribute. Numbers and text strings are the most common attribute types. All values for a given attribute must have the same type. For example: </para><para></para><screen><![CDATA[FunctionalCategory
YAL001C = metabolism
YAR002W = apoptosis
YBL007C = ribosome
]]></screen><para>An edge attribute file has much the same structure, except that the name of the edge is the source node name, followed by the interaction type in parentheses, followed by the target node name. Directionality counts, so switching the source and target will refer to a different (or perhaps non-existent) edge. The following is an example edge attributes file: </para><para></para><screen><![CDATA[InteractionStrength
YAL001C (pp) YBR043W = 0.82
YMR022W (pd) YDL112C = 0.441
YDL112C (pd) YMR022W = 0.9013
]]></screen><para>Cytoscape treats edge attributes as directional, so note that the second and third edge attribute values refer to two different edges (source and target are reversed, though the nodes involved are the same). </para><para>Each attribute is stored in a separate file. Node and edge attribute files use the same format. Node attribute file names often use the suffix ".noa", while edge attribute file names use the suffix ".eda". Cytoscape recognizes these suffixes when browsing for attribute files. </para><para>Node and edge attributes may be loaded at the command line using the –n and –e options or via the <emphasis role='underline'>File → Import</emphasis> menu. </para><para>When expression data is loaded using an expression matrix, it is automatically copied into the Node Attributes data structure unless explicitly specified not to. </para><para>Node and edge attributes are attached to nodes and edges, NOT to networks.  If two different networks have the same nodes, then those nodes will have the same attributes.  Even if a network is loaded after attributes have been loaded, if the nodes or edges found in the new network already exist, then any existing attributes will be applied to those nodes. </para><para>Note (1): Network attributes are supported in Cytoscape, but network attribute file reader is not yet implemented in Cytoscape 2.4.  If you need to import network attributes, please use attribute table import function or write network attributes directly in XGMML file.  </para><para/><section><title>Detailed file format (Advanced users)</title><para>Every attribute file has one header line that gives the name of the attribute, and optionally some additional meta-information about that attribute. The format is as follows: </para><para></para><screen><![CDATA[attributeName (class=formal.class.of.value)
]]></screen><para>The first field is always the attribute name: it cannot contain spaces. If present, the class field defines the formal (package qualified) name of the class of the attribute values. For example, java.lang.String for Strings, java.lang.Double for floating point values, java.lang.Integer for integer values, etc. If the value is actually a list of values, the class should be the type of the objects in the list.  If no class is specified in the header line, Cytoscape will attempt to guess the type from the first value. If the first value contains numbers in a floating point format, Cytoscape will assume java.lang.Double; if the first value contains only numbers with no decimal point, Cytoscape will assume java.lang.Integer; otherwise Cytoscape will assume java.lang.String. Note that the first value can lead Cytoscape astray: for example, </para><para></para><screen><![CDATA[floatingPointAttribute
firstName = 1
secondName = 2.5
]]></screen><para>In this case, the first value will make Cytoscape think the values should be integers, when in fact they should be floating point numbers. It's safest to explicitly specify the value type to prevent confusion. A better format would be: </para><para></para><screen><![CDATA[floatingPointAttribute (class=Double)
firstName = 1
secondName = 2.5
]]></screen><para>or </para><para></para><screen><![CDATA[floatingPointAttribute 
firstName = 1.0
secondName = 2.5
]]></screen><para>Every line past the first line identifies the name of an object (node in a node attribute file and an edge in a edge attribute file) along with the String representation of the attribute value. The delimiter is always an equals sign; whitespace (spaces and/or tabs) before and after the equals sign is ignored. This means that your names and values can contain whitespace, but object names cannot contain an equals sign and no guarantees are made concerning leading or trailing whitespace.  Object names must be the Node ID or Edge ID as seen in the left-most column of the attribute browser if the attribute is to map to anything.  These names must be reproduced exactly, including case, or they will not match. </para><para>Edge names are all of the form: </para><para></para><screen><![CDATA[sourceName (edgeType) targetName
]]></screen><para>Specifically, that is  </para><table><caption/><tgroup cols='1'><colspec colname='xxx1'/><tbody><row><entry><para>sourceName space openParen edgeType closeParen space targetName</para></entry></row></tbody></tgroup></table><para>Note that tabs are not allowed in edge names.  Tabs can be used to separate the edge name from the "=" delimiter, but not within the edge name itself. Also note that this format is different from the specification of interactions in the SIF file format. To be explicit:  a SIF entry for the previous interaction would look like </para><para></para><screen><![CDATA[sourceName edgeType targetName
]]></screen><para>or </para><table><caption/><tgroup cols='1'><colspec colname='xxx1'/><tbody><row><entry><para>sourceName whiteSpace edgeType whiteSpace targetName</para></entry></row></tbody></tgroup></table><para>To specify lists of values, use the following syntax: </para><para></para><screen><![CDATA[listAttributeName (class=java.lang.String)
firstObjectName = (firstValue::secondValue::thirdValue)
secondObjectName = (onlyOneValue)
]]></screen><para>This defines an attribute which is a list of Strings. The first object has three strings, and thus three elements in its list, while the second object has a list with only one member. In the case of a list every attribute value should be specified as a list, and every member of the list should be of the same class. Again, the class will be inferred if it is not specified in the header line. Lists are not supported by the visual mapper, so can’t be mapped to visual attributes. </para><para/></section><section><title>Newline Feature</title><para>Sometimes it is desirable to for attributes to include linebreaks, for example node labels that extend over two lines. You can acomplish by inserting the <code>
</code> characters into the attribute value.  For example: </para><para></para><screen><![CDATA[newlineAttr
YJL157C = This is a long\nline for a label.
]]></screen><para/></section></section><section><title>Import Attribute Table Files</title><para>Introduced in version 2.4, Cytoscape now supports importing delimited text and MS Excel attribute data tables.  Using this functionality, users can now easily import data that isn't formatted into Cytoscape node or edge attribute file formats (as described above). </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes?action=AttachFile&amp;do=get&amp;target=attribute_table_import_main.png'/></imageobject><textobject><phrase>attachment:attribute_table_import_main.png</phrase></textobject></inlinemediaobject> </para><para><emphasis><emphasis role='strong'>Sample Attribute Table 1</emphasis></emphasis> </para><table><caption/><tgroup cols='3'><colspec colname='xxx1'/><colspec colname='xxx2'/><colspec colname='xxx3'/><tbody><row><entry><para>Object Key</para></entry><entry><para>Alias</para></entry><entry><para>SGD ID</para></entry></row><row><entry><para>AAC3</para></entry><entry><para>YBR085W|ANC3</para></entry><entry><para>S000000289</para></entry></row><row><entry><para>AAT2</para></entry><entry><para>YLR027C|ASP5</para></entry><entry><para>S000004017</para></entry></row><row><entry><para>BIK1</para></entry><entry><para>YCL029C|ARM5|PAC14</para></entry><entry><para>S000000534</para></entry></row></tbody></tgroup></table><para>Attribute table file should contain a primary key column and at least one attribute column.  Number of attribute columns is unlimited.  <emphasis>Alias</emphasis> column is optional.  First row can be used as attribute names, but it is optional.  You can specify each attribute name from <emphasis>Attribute Table Import</emphasis> user interface. </para><para/><section><title>Basic Operation</title><para>User interface of <emphasis>Attribute Table Import</emphasis> is similar to <emphasis>Network Table Import</emphasis>. </para><orderedlist numeration='arabic'><listitem><para>Select <emphasis role='underline'>File → Import → <emphasis role='strong'>Attribute from Table (text/MS Excel)</emphasis></emphasis> </para></listitem><listitem><para>Select one of the attribute types from <emphasis>Attributes</emphasis> radio buttons.  Cytoscape can import node, edge, and network attributes. </para></listitem><listitem><para>Select a data file.  To load a local file, click on <emphasis>Select File</emphasis> button and choose a data file.  Input file can be text or Excel (.xls) file.  To load a remote file, type  source URL directly in the text box.  To show preview for the remote file, click <emphasis>Reload</emphasis> button on <emphasis>Advanced</emphasis> panel. </para></listitem><listitem><para>(Optional) If the table is not properly delimited, change delimiter from <emphasis>Text File Import Options</emphasis> panel.  Default delimiter is <emphasis role='strong'>TAB</emphasis>.  This is not necessary for Excel Workbooks. </para></listitem><listitem><para>By default, the first column is set to <emphasis>primary key</emphasis>.  Change the key column if necessary. </para><itemizedlist><listitem><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes?action=AttachFile&amp;do=get&amp;target=attribute_table_import_primary_key.png'/></imageobject><textobject><phrase>attachment:attribute_table_import_primary_key.png</phrase></textobject></inlinemediaobject>   </para></listitem></itemizedlist></listitem><listitem><para>Click <emphasis>Import</emphasis> button. </para></listitem></orderedlist><para/></section><section><title>Advanced Options</title><para><emphasis>Attribute Table Import</emphasis> user interface has two advanced option panels to maximize mapping flexibility. </para><para/><section><title>Advanced Mapping Options</title><para>This panel is designed to change detail of mapping operation. </para><para><emphasis role='underline'><emphasis role='strong'>Primaly Key and Key Attribute</emphasis></emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes?action=AttachFile&amp;do=get&amp;target=attribute_table_import_keyattr.png'/></imageobject><textobject><phrase>attachment:attribute_table_import_keyattr.png</phrase></textobject></inlinemediaobject> </para><para>Old attribute file loader only supports mapping between node/edge ID and primary key in attribute file.  To solve this limitation, new <emphasis>Attribute Table Import</emphasis> function supports both ID and attributes for mapping.  You can choose an attribute for mapping from the list in the combo box. </para><para>Note: currently, only primitive data types (string, boolean, floating point, and integer) are supported for mapping, i.e. you cannot use list, map, or complex attribute as <emphasis>Key Attribute</emphasis>. </para><para><emphasis role='underline'><emphasis role='strong'>Aliases</emphasis></emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes?action=AttachFile&amp;do=get&amp;target=attribute_table_import_alias.png'/></imageobject><textobject><phrase>attachment:attribute_table_import_alias.png</phrase></textobject></inlinemediaobject> </para><para>Cytoscape uses simple mechanism to manage aliases of objects.   Both nodes and edges can have alias.  If attributes are loaded as alias, they are treated as special attribute called <emphasis><emphasis role='strong'>alias</emphasis></emphasis>.  This will be used when mapping attributes.  If <emphasis>primary key</emphasis> and <emphasis>key attribute</emphasis> for an object does not match, Cytoscape searches a match between aliases and key attribute.  To use columns in attribute table as alias, just click on check boxes in the alias table.      </para><para/></section><section><title>Text File Import Options</title><itemizedlist><listitem><para>This is mostly same as <emphasis>Network Table Import</emphasis>.  For detail, please read <emphasis>Import Free-Format Table Files</emphasis> section in this manual. </para></listitem></itemizedlist><para/></section></section><section><title>Attribute Browser</title><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes?action=AttachFile&amp;do=get&amp;target=attribute_browser1.png'/></imageobject><textobject><phrase>attachment:attribute_browser1.png</phrase></textobject></inlinemediaobject> </para><para>When Cytoscape is started, the Attribute Browser appears in the bottom Cytopanel. This browser can be hidden and restored using the F5 key or the <emphasis role='underline'>View → Show/Hide attribute browser</emphasis> menu option. Like other Cytopanels, the browser can be undocked by pressing the little icon in the browser’s top right corner. </para><para>To swap between displaying node, edge, and network attributes use the tabs on the bottom of the panel: <emphasis><emphasis role='strong'>Node Attribute Browser</emphasis></emphasis>, <emphasis><emphasis role='strong'>Edge Attribute Browser</emphasis></emphasis>, and <emphasis><emphasis role='strong'>Network Attribute Browser</emphasis></emphasis>. The attribute browser displays attributes belonging to selected nodes and/or edges and the currently selected network. To populate the browser with rows (as pictured above), simply select nodes and/or edges in a loaded network. By default, only the <emphasis>ID</emphasis> of nodes and edges is shown. To display more than just the ID, click the <emphasis>Select Attributes</emphasis> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes?action=AttachFile&amp;do=get&amp;target=attributes_select_icon.png'/></imageobject><textobject><phrase>attachment:attributes_select_icon.png</phrase></textobject></inlinemediaobject> button and choose the attributes that are to be displayed. Each attribute chosen will result in one column in the attribute browser (in the screenshot above there are 5 columns total including the ID). Most attribute values can be edited by double-clicking an attribute cell; list values cannot be edited, and neither can the ID. Attribute rows in the browser can be sorted alphabetically by specific attribute by clicking on a column heading. A new attribute can be created using the <emphasis>Create New Attribute</emphasis> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes?action=AttachFile&amp;do=get&amp;target=attributes_new_icon.png'/></imageobject><textobject><phrase>attachment:attributes_new_icon.png</phrase></textobject></inlinemediaobject> button. Attributes created using the attribute browser must be one of four types – integer, string, real number (floating point), or boolean. Attributes can be deleted using the <emphasis>Delete Attributes...</emphasis> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes?action=AttachFile&amp;do=get&amp;target=attributes_delete_icon.png'/></imageobject><textobject><phrase>attachment:attributes_delete_icon.png</phrase></textobject></inlinemediaobject> button. NOTE: Deleting attributes removes them from Cytoscape, not just the attribute browser! To remove attributes only from the browser simply unselect the attribute using the <emphasis>Select Attributes</emphasis> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes?action=AttachFile&amp;do=get&amp;target=attributes_select_icon.png'/></imageobject><textobject><phrase>attachment:attributes_select_icon.png</phrase></textobject></inlinemediaobject> button. The right-click menu on the Attribute Browser has several functions. This menu is useful for exporting attribute information to spreadsheet applications. For example, choose <emphasis>Select All</emphasis> and then <emphasis>Copy</emphasis> from the right-click and then paste into a spreadsheet application.  Each attribute browser panel has a button for importing new attributes: <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes?action=AttachFile&amp;do=get&amp;target=attributes_import_icon.png'/></imageobject><textobject><phrase>attachment:attributes_import_icon.png</phrase></textobject></inlinemediaobject> . </para><para>The Node Attribute Browser panel has additional buttons for loading Gene Expression attribute matrices ( <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Attributes?action=AttachFile&amp;do=get&amp;target=attributes_gene_expr_icon.png'/></imageobject><textobject><phrase>attachment:attributes_gene_expr_icon.png</phrase></textobject></inlinemediaobject> ) as node attributes. </para></section></section> </section><section><title>Loading Gene Expression (Attribute Matrix) Data</title><para>In addition to normal node and edge attribute data, Cytoscape also supports importing gene expression data.  Gene expression data are imported using a different file format than normal attributes, however the resulting attributes are no different from other attributes from Cytoscape's perspective. Gene expression data (like attribute data) can be loaded at any time, but are (generally) only relevant once a network has been loaded. </para><para/><section><title>Data File Format</title><para>Gene expression ratios or values are specified over one or more experiments using a text file. Ratios result from a comparison of two expression measurements (experiment vs. control). Some expression platforms, such as Affymetrix, directly measure expression values, without a comparison. The file consists of a header and a number of space- or tab-delimited fields, one line per gene, with the following format: </para><para></para><screen><![CDATA[Identifier [CommonName] value1 value2 ... valueN [pval1 pval2 ... pvalN]
]]></screen><para>Brackets [ ] indicate fields that are optional. </para><para>The first field identifies which Cytoscape node the data refers to.  In the simplest case, this is the gene name - exactly  as it appears on the Cytoscape canvas (case sensitive!).  Alternatively, this can be some node attribute that identifies the node uniquely, such as a probeset identifier for commercial microarrays. </para><para>The next field is an optional common name.  It is not used by Cytoscape, and is provided strictly for the user's convenience. With this common name field, the input format is the same as for commonly-used expression data anaysis packages such as SAM (<ulink url='http://www-stat.stanford.edu/~tibs/SAM/'>http://www-stat.stanford.edu/~tibs/SAM/</ulink>). </para><para>The next set of columns represent expression values, one per experiment.  These can be either absolute expression values or fold change ratios.  Each experiment is identified by its experiment name, given in the first line. </para><para>Optionally, significance measures such as P values may be provided.  These values, generated by many microarray data analysis packages, indicate where the level of gene expression or the fold change appears to be greater than random chance.  If you are using significance measures, then your expression file should contain them in a second set of columns after the expression values.  The column names for the expression significance measures should match those of the expression values <emphasis>exactly</emphasis>. </para><para>For example, here is an excerpt from the file galExpData.pvals in the Cytoscape sampleData directory:: </para><para></para><screen><![CDATA[GENE COMMON gal1RG gal4RG gal80R gal1RG gal4RG gal80R
YHR051W COX6 -0.034 0.111 -0.304 3.75720e-01 1.56240e-02 7.91340e-06
YHR124W NDT80 -0.090 0.007 -0.348 2.71460e-01 9.64330e-01 3.44760e-01
YKL181W PRS1 -0.167 -0.233 0.112 6.27120e-03 7.89400e-04 1.44060e-01
YGR072W UPF3 0.245 -0.471 0.787 4.10450e-04 7.51780e-04 1.37130e-05
]]></screen><para>This indicates that there is data for three experiments: gal1RG, gal4RG, and gal80R.  These names appear two times: the first time gives the expression values, and the second gives the significance measures.  For instance, the second line tells us that in Experiment gal1RG, the gene YHR051W has an expression value of -0.034 with significance measure 3.75720e-01. </para><para>Some variations on this basic format are recognized: see the formal file format specification below for more information. Expression data files commonly have the file extensions ".mrna" or ".pvals", and these file extensions are recognized by Cytoscape when browsing for data files. </para><para><emphasis role='strong'>COMMANDS:</emphasis> Load an expression attribute matrix file using the Cytoscape menu options <emphasis role='underline'>File → Import → Attribute/Expression Matrix</emphasis> to bring up the import dialog box, or by specifying the filename using the -m option at the command line.  If you use the command line input, you must enter your expression data by node ID.  If you use the dialog box, then you can either load expression data by node ID (the default option), or can optionally select a node attribute to use in assigning your expression data to your Cytoscape nodes. If you do use a node attribute, then (1) the attribute should already be loaded, and (2) the node attribute value must match the first column in your matrix file. </para><para/></section><section><title>Example</title><para>For the sample network file <emphasis role='strong'>sampleData/galFiltered.sif</emphasis>: </para><para>1. Load a sample gene expression data set using the menu: <emphasis role='underline'>File → Import → Attribute/Expression Matrix</emphasis>. In the resulting file dialog box, in the field labeled "Please select an attribute or expression matrix file...",  select <emphasis role='strong'>sampleData/galExpData.pvals</emphasis>.  The identifiers used in this file are the same ones used in the network file  <emphasis role='strong'>sampleData/galFiltered.sif</emphasis>, so you do not need to touch the field labeled "Assign values to nodes using...".  A few lines of this file are shown below: </para><para></para><screen><![CDATA[GENE COMMON gal1RG gal4RG gal80R gal1RG gal4RG gal80R
YHR051W COX6 -0.034 0.111 -0.304 3.75720e-01 1.56240e-02 7.91340e-06
YHR124W NDT80 -0.090 0.007 -0.348 2.71460e-01 9.64330e-01 3.44760e-01
YKL181W PRS1 -0.167 -0.233 0.112 6.27120e-03 7.89400e-04 1.44060e-01
]]></screen><para>- or - </para><para>2a. After loading the network, load the node attribute file <emphasis role='strong'>sampleData/gal.probeset.na</emphasis>, using the menu options <emphasis role='underline'>File → Import → Node attributes...</emphasis>.  This file is shown in part below: </para><para></para><screen><![CDATA[Probeset
YHR051W = probeset2
YHR124W = probeset3
YKL181W = probeset4
]]></screen><para>2b. After loading the node attribute file, select the expression data file <emphasis role='strong'>sampleData.galExpPvals.probeset.pvals</emphasis>, shown in part below: </para><para></para><screen><![CDATA[GENE COMMON gal1RG gal4RG gal80R gal1RG gal4RG gal80R
probeset2 COX6 -0.034 0.111 -0.304 3.75720e-01 1.56240e-02 7.91340e-06
probeset3 NDT80 -0.090 0.007 -0.348 2.71460e-01 9.64330e-01 3.44760e-01
probeset4 PRS1 -0.167 -0.233 0.112 6.27120e-03 7.89400e-04 1.44060e-01
]]></screen><para>After selecting this file, in the field labeled <emphasis role='strong'>Assign values to nodes using...</emphasis>, select <emphasis role='strong'>Probeset</emphasis>.  You will see that this loads exactly the same expression data as in Case 1, but provides extra flexibility in case the node name cannot be used as an identifier. </para><para><emphasis role='strong'>Detailed file format (Advanced users)</emphasis> In all expression data files, any whitespace (spaces and/or tabs) is considered a delimiter between adjacent fields. Every line of text is either the header line or contains all the measurements for a particular gene. No name conversion is applied to expression data files. </para><para>The names given in the first column of the expression data file should match exactly the names used elsewhere (i.e. in SIF or GML files). </para><para>The first line is a header line with one of the following three formats: </para><para></para><screen><![CDATA[<text> <text> cond1 cond2 ... cond1 cond2 ... [NumSigConds]
<text> <text> cond1 cond2 ...
<tab><tab>RATIOS<tab><tab>...LAMBDAS
]]></screen><para>The first format specifies that both expression ratios and significance values are included in the file. The first two text tokens contain names for each gene. The next token set specifies the names of the experimental conditions; these columns will contain ratio values. This list of condition names must then be duplicated exactly, each spelled the same way and in the same order. Optionally, a final column with the title <ulink url='/cgi-bin/moin.cgi/NumSigConds'>NumSigConds</ulink> may be present. If present, this column will contain integer values indicating the number of conditions in which each gene had a statistically significant change according to some threshold. </para><para>The second format is similar to the first except that the duplicate column names are omitted, and there is no <ulink url='/cgi-bin/moin.cgi/NumSigConds'>NumSigConds</ulink> fields. This format specifies data with ratios but no significance values. </para><para>The third format specifies an MTX header, which is a commonly used format. Two tab characters precede the RATIOS token. This token is followed by a number of tabs equal to the number of conditions, followed by the LAMBDAS token. This format specifies both ratios and significance values. </para><para>Each line after the first is a data line with the following format: </para><para></para><screen><![CDATA[FormalGeneName CommonGeneName ratio1 ratio2 ... [lambda1 lambda2 ...] [numSigConds]
]]></screen><para>The first two tokens are gene names. The names in the first column are the keys used for node name lookup; these names should be the same as the names used elsewhere in Cytoscape (i.e. in the SIF, GML, or XGMML files). Traditionally in the gene expression microarray community, who defined these file formats, the first token is expected to be the formal name of the gene (in systems where there is a formal naming scheme for genes), while the second is expected to be a synonym for the gene commonly used by biologists, although Cytoscape does not make use of the common name column. The next columns contain floating point values for the ratios, followed by columns with the significance values if specified by the header line. The final column, if specified by the header line, should contain an integer giving the number of significant conditions for that gene.  Missing values are not allowed and will confuse the parser. For example, using two consecutive tabs to indicate a missing value will not work; the parser will regard both tabs as a single delimiter and be unable to parse the line correctly. </para><para>Optionally, the last line of the file may be a special footer line with the following format: </para><para></para><screen><![CDATA[NumSigGenes int1 int2 ...
]]></screen><para>This line specified the number of genes that were significantly differentially expressed in each condition. The first text token must be spelled exactly as shown; the rest of the line should contain one integer value for each experimental condition. </para></section> </section><section><title>Navigation and Layout</title><para><anchor id='navigation'/> </para><section><title>Basic Network Navigation</title><para>Cytoscape uses a <ulink url='http://en.wikipedia.org/wiki/Zooming_User_Interface'>Zoomable User Interface</ulink> for navigating and viewing networks.  ZUIs use two mechanisms for navigation: zooming and panning.  Zooming increases or decreases the magnification of a view based on how much or how little a user wants to see.  Panning allows users to move the focus of a screen to different parts of a view.  </para><para><emphasis role='strong'>Zoom</emphasis>  Cytoscape provides two mechanisms for zooming, either using mouse gestures or buttons on the toolbar. Use the zooming buttons located on the toolbar to zoom in / out of the interaction network shown in the current network display. Zoom icons are detailed below: </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=image049.jpg'/></imageobject><textobject><phrase>attachment:image049.jpg</phrase></textobject></inlinemediaobject> </para><para>From Left to Right: </para><itemizedlist><listitem>Zoom Out </listitem><listitem>Zoom In </listitem><listitem>Zoom Selected Region </listitem><listitem>Zoom out to Display all of Current Network </listitem></itemizedlist><para>You can also zoom in/out by holding down the right mouse button and moving the mouse to the right (zoom in) or left (zoom out). </para><para><emphasis role='strong'>Pan</emphasis>  You can pan the network image by holding down the middle mouse button and moving the mouse.  You can also pan the image by holding down the left mouse button over the blue box in the Network Overview panel in the lower left hand of the Cytoscape desktop. </para><para/><section><title>Other Mouse Behaviors</title><para><emphasis role='strong'>Select</emphasis>  Click the left mouse button on a node or edge to select that object. You can hold down the Shift key to select more than one node/edge or you can hold down the left mouse button and drag the mouse to select groups of nodes/edges. </para><para><emphasis role='strong'>Context</emphasis>  Click the right mouse button on a node/edge to launch a context sensitive menu with additional information about the node/edge. </para><para/></section></section><section><title>Automatic Layout Algorithms</title><para>The <emphasis role='underline'>Layout</emphasis> menu has an array of features for organizing the network visually according to one of several algorithms, aligning and rotating groups of nodes, and adjusting the size of the network. Most of these features are available from plugins that are packaged with Cytoscape 2.3. Some of the layout algorithms provided with Cytoscape 2.3 are: </para><para><emphasis role='strong'>Cytoscape Spring-embedded Layout </emphasis> </para><para>Spring-embedded layout is based on a “force-directed” paradigm. Network nodes are treated like physical objects that repel each other, such as electrons. The connections between nodes are treated like metal springs attached to the pair of nodes. These springs repel or attract their end points according to a force function. The layout algorithm sets the positions of the nodes in a way that minimizes the sum of forces in the network. This algorithm is available from the <emphasis role='underline'>Layout → Cytoscape Layouts → Spring Embedded</emphasis> menu item. A sample screen shot is provided below: </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=image051.png'/></imageobject><textobject><phrase>attachment:image051.png</phrase></textobject></inlinemediaobject> <emphasis role='strong'>yFiles Circular Layout </emphasis> </para><para>This algorithm produces layouts that emphasize group and tree structures within a network. It partitions the network by analyzing its connectivity structure, and arranges the partitions as separate circles. The circles themselves are arranged in a radial tree layout fashion. This algorithm is available from the <emphasis role='underline'>Layout → yFiles → Circular</emphasis> menu item. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=image053.png'/></imageobject><textobject><phrase>attachment:image053.png</phrase></textobject></inlinemediaobject> <emphasis role='strong'>yFiles Hierarchical Layout </emphasis> </para><para>The hierarchical layout algorithm is good for representing main direction or <emphasis>flow</emphasis> within a network. Nodes are placed in hierarchically arranged layers and the ordering of the nodes within each layer is chosen in such a way that minimizes the number of edge crossings. This algorithm is available from the <emphasis role='underline'>Layout → yFiles → Heirarchical</emphasis> menu item. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=image055.png'/></imageobject><textobject><phrase>attachment:image055.png</phrase></textobject></inlinemediaobject> <emphasis role='strong'>yFiles Organic Layout </emphasis> </para><para>The organic layout algorithm is a kind of spring-embedded algorithm that combines elements of the other algorithms to show the clustered structure of a graph. This algorithm is available from the <emphasis role='underline'>Layout → yFiles → Organic</emphasis> menu item. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=image057.png'/></imageobject><textobject><phrase>attachment:image057.png</phrase></textobject></inlinemediaobject> </para><para>Several other alignment algorithms, including a selection from the JGraph project (<ulink url='http://jgraph.sourceforge.net'>http://jgraph.sourceforge.net</ulink>), are also available under the Layout menu. </para><para/></section><section><title>Manual Layout</title><para>The simplest method to manually layout a network is to click on a node and drag the node.  If you select multiple nodes, all of the selected nodes will be moved together. </para><para><emphasis role='strong'>Edge Handles</emphasis> </para><para><emphasis>A little known feature!</emphasis>  If you select an edge and then Ctrl-left-click on the edge, an edge "handle" will appear.  This handle can be used to change the shape of the line. To remove a handle, simply Ctrl-left-click on the handle again. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=edge_handles.png'/></imageobject><textobject><phrase>attachment:edge_handles.png</phrase></textobject></inlinemediaobject> </para><para>The <emphasis role='underline'>Select → Edges</emphasis> menu has two menu items that provide further control: "Smooth Selected Edges" turns an edge consisting of line segments into a smoothed bezier curve, and "Straighen Selected Edges" turns a curved edge back into line segments. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=menu_select_edges.png'/></imageobject><textobject><phrase>attachment:menu_select_edges.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='strong'>Rotate</emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=rotate_dialog.png'/></imageobject><textobject><phrase>attachment:rotate_dialog.png</phrase></textobject></inlinemediaobject> </para><para>The <emphasis role='underline'>Layout → Rotate</emphasis> menu opens the Rotate dialog.  Rotate will either rotate the entire network or a selected portion of the network.  The image below shows a network with selected nodes rotated. </para><para>Before </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=rotate_networkA.png'/></imageobject><textobject><phrase>attachment:rotate_networkA.png</phrase></textobject></inlinemediaobject> </para><para>After  </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=rotate_networkB.png'/></imageobject><textobject><phrase>attachment:rotate_networkB.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='strong'>Scale</emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=scale_dialog.png'/></imageobject><textobject><phrase>attachment:scale_dialog.png</phrase></textobject></inlinemediaobject> </para><para>The <emphasis role='underline'>Layout → Scale</emphasis> menu opens the Scale dialog.  Scale will scale the position of the entire network or of the selected portion of the network. Note that only the position of the nodes scale, not the node sizes.  Node size can be adjusted using the <ulink url='/cgi-bin/moin.cgi/VizMapper'>VizMapper</ulink>. The image below shows selected nodes scaled. </para><para>Before </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=scale_networkA.png'/></imageobject><textobject><phrase>attachment:scale_networkA.png</phrase></textobject></inlinemediaobject> </para><para>After  </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=scale_networkB.png'/></imageobject><textobject><phrase>attachment:scale_networkB.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='strong'>Align/Distribute</emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=align_distribute_dialog.png'/></imageobject><textobject><phrase>attachment:align_distribute_dialog.png</phrase></textobject></inlinemediaobject> </para><para>The <emphasis role='underline'>Layout → Align/Distribute</emphasis> menu opens the Align/Distribute dialog.  The Align buttons of the dialog provides different options for either vertically or horizontally aligning selected nodes against a line.  The differences are in what part of the node gets aligned, e.g. the center of the node, the top of the node, the left side of the node.  The Distribute buttons evenly distribute  selected nodes between the two most distant nodes along either the vertical or horizontal axis. The differences are again a function what part of the node is used as a reference point for the distribution.  The table below provides a mapping from button to name to result. </para><table><caption/><tgroup cols='4'><colspec colname='xxx1'/><colspec colname='xxx2'/><colspec colname='xxx3'/><colspec colname='xxx4'/><tbody><row><entry><para><emphasis role='strong'>Button</emphasis></para></entry><entry><para><emphasis role='strong'>Before</emphasis></para></entry><entry><para><emphasis role='strong'>After</emphasis></para></entry><entry><para><emphasis role='strong'>Description of Align Options</emphasis> </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=V_ALIGN_TOP.gif'/></imageobject><textobject><phrase>attachment:V_ALIGN_TOP.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_begin.png'/></imageobject><textobject><phrase>attachment:small.align_begin.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_vertical_top.png'/></imageobject><textobject><phrase>attachment:small.align_vertical_top.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Vertical Align Top - The tops of the selected nodes are aligned with the top-most node. </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=V_ALIGN_CENTER.gif'/></imageobject><textobject><phrase>attachment:V_ALIGN_CENTER.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_begin.png'/></imageobject><textobject><phrase>attachment:small.align_begin.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_vertical_center.png'/></imageobject><textobject><phrase>attachment:small.align_vertical_center.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Vertical Align Center - The centers of selected nodes are aligned along a line defined by the midpoint between the top and bottom-most nodes. </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=V_ALIGN_BOTTOM.gif'/></imageobject><textobject><phrase>attachment:V_ALIGN_BOTTOM.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_begin.png'/></imageobject><textobject><phrase>attachment:small.align_begin.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_vertical_bottom.png'/></imageobject><textobject><phrase>attachment:small.align_vertical_bottom.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Vertical Align Bottom - The bottoms of the nodes are aligned with the bottom-most node. </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=H_ALIGN_LEFT.gif'/></imageobject><textobject><phrase>attachment:H_ALIGN_LEFT.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_begin.png'/></imageobject><textobject><phrase>attachment:small.align_begin.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_horizontal_left.png'/></imageobject><textobject><phrase>attachment:small.align_horizontal_left.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Horizontal Align Left - The left hand sides of the selected nodes are aligned with the left-most node. </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=H_ALIGN_CENTER.gif'/></imageobject><textobject><phrase>attachment:H_ALIGN_CENTER.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_begin.png'/></imageobject><textobject><phrase>attachment:small.align_begin.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_horizontal_center.png'/></imageobject><textobject><phrase>attachment:small.align_horizontal_center.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Horizontal Align Center - The centers of selected nodes are aligned along a line defined by the midpoint between the left and right-most nodes. </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=H_ALIGN_RIGHT.gif'/></imageobject><textobject><phrase>attachment:H_ALIGN_RIGHT.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_begin.png'/></imageobject><textobject><phrase>attachment:small.align_begin.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.align_horizontal_right.png'/></imageobject><textobject><phrase>attachment:small.align_horizontal_right.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Horizontal Align Right  - The right hand sides of the selected nodes are aligned with the right-most node. </para></entry></row></tbody></tgroup></table><table><caption/><tgroup cols='4'><colspec colname='xxx1'/><colspec colname='xxx2'/><colspec colname='xxx3'/><colspec colname='xxx4'/><tbody><row><entry><para><emphasis role='strong'>Button</emphasis></para></entry><entry><para><emphasis role='strong'>Before</emphasis></para></entry><entry><para><emphasis role='strong'>After</emphasis></para></entry><entry><para><emphasis role='strong'>Description of Distribute Options</emphasis> </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=V_DIST_TOP.gif'/></imageobject><textobject><phrase>attachment:V_DIST_TOP.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_begin_vertical.png'/></imageobject><textobject><phrase>attachment:small.distribute_begin_vertical.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_vertical_top.png'/></imageobject><textobject><phrase>attachment:small.distribute_vertical_top.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Vertical Distribute Top - The tops of the selected nodes are distributed evenly between the top-most and bottom-most nodes, which should stay stationary. </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=V_DIST_CENTER.gif'/></imageobject><textobject><phrase>attachment:V_DIST_CENTER.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_begin_vertical.png'/></imageobject><textobject><phrase>attachment:small.distribute_begin_vertical.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_vertical_center.png'/></imageobject><textobject><phrase>attachment:small.distribute_vertical_center.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Vertical Distribute Center - The centers of the selected nodes are distributed evenly between the top-most and bottom-most nodes, which should stay stationary. </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=V_DIST_BOTTOM.gif'/></imageobject><textobject><phrase>attachment:V_DIST_BOTTOM.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_begin_vertical.png'/></imageobject><textobject><phrase>attachment:small.distribute_begin_vertical.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_vertical_bottom.png'/></imageobject><textobject><phrase>attachment:small.distribute_vertical_bottom.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Vertical Distribute Bottom - The bottoms of the selected nodes are distributed evenly between the top-most and bottom-most nodes, which should stay stationary. </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=H_DIST_LEFT.gif'/></imageobject><textobject><phrase>attachment:H_DIST_LEFT.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_begin_horizontal.png'/></imageobject><textobject><phrase>attachment:small.distribute_begin_horizontal.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_horizontal_left.png'/></imageobject><textobject><phrase>attachment:small.distribute_horizontal_left.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Horizontal Distribute Left  - The left hand sides of the selected nodes are distributed evenly between the left-most and rigth-most nodes, which should stay stationary. </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=H_DIST_CENTER.gif'/></imageobject><textobject><phrase>attachment:H_DIST_CENTER.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_begin_horizontal.png'/></imageobject><textobject><phrase>attachment:small.distribute_begin_horizontal.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_horizontal_center.png'/></imageobject><textobject><phrase>attachment:small.distribute_horizontal_center.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Horizontal Distribute Center - The centers of the selected nodes are distributed evenly between the left-most and rigth-most nodes, which should stay stationary. </para></entry></row><row><entry><para> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=H_DIST_RIGHT.gif'/></imageobject><textobject><phrase>attachment:H_DIST_RIGHT.gif</phrase></textobject></inlinemediaobject> </para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_begin_horizontal.png'/></imageobject><textobject><phrase>attachment:small.distribute_begin_horizontal.png</phrase></textobject></inlinemediaobject></para></entry><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Navigation_Layout?action=AttachFile&amp;do=get&amp;target=small.distribute_horizontal_right.png'/></imageobject><textobject><phrase>attachment:small.distribute_horizontal_right.png</phrase></textobject></inlinemediaobject></para></entry><entry><para>Horizontal Distribute Right - The right hand sides of the selected nodes are distributed evenly between the left-most and rigth-most nodes, which should stay stationary. </para></entry></row></tbody></tgroup></table><para/><section><title>Node Movement and Placement</title><para>In addition to the ability to click on a node and drag it to a new position, Cytoscape now has the ability move nodes using the arrow keys on the keyboard.  By selecting one or more nodes using the mouse and clicking one of the arrow keys (&amp;#8592;, &amp;#8594;, &amp;#8593;, &amp;#8595;) the selected nodes will move one pixel in the chosen direction.  If an arrow key is pressed while holding the <code>shift</code> key down, the selected nodes will 10 pixels in the chosen direction.  </para><para>Mouse movement has also been enhanced.  If the <code>shift</code> key is held down while dragging a node, the node will only move horizontally, vertically, or along a 45 degree diagonal. </para></section></section> </section><section><title>Visual Styles</title><para>With the Cytoscape Visual Style feature, you can easily customize the visual appearance of your network. For example, you can: </para><itemizedlist><listitem>specify a default color and shape for all nodes. </listitem><listitem>use specific line types to indicate different types of interactions, or </listitem><listitem>visualize gene expression data along a color gradient. </listitem></itemizedlist><para>All these features are available by selecting the <emphasis role='underline'>View → Open Viz Mapper</emphasis> menu item or clicking on the Viz Mapper icon <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapIcon.png'/></imageobject><textobject><phrase>attachment:VizMapIcon.png</phrase></textobject></inlinemediaobject> button on the main button bar. </para><para/><section><title>Introduction to Visual Styles</title><para>The Cytoscape distribution includes several predefined visual styles to get you started. To demonstrate these styles, try out the following example: </para><itemizedlist><listitem><para>Load a sample network: From the main menu, select <emphasis role='underline'>File → Import → Network</emphasis>, and select sampleData/galFiltered.sif. </para></listitem><listitem><para>Layout the network: select <emphasis role='underline'>Layout → yFiles → Organic</emphasis>. </para></listitem><listitem><para>Load a sample set of expression data: From the main menu, select <emphasis role='underline'>File → Import → Attribute Matrix</emphasis> and select sampleData/galExpData.pvals. </para></listitem></itemizedlist><para>By default, the Visual Style labeled “default” will be automatically applied to your network. This default style has a blue background, circular pink nodes, and blue edges (see sample screenshot below). </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperDefaultStyle.png'/></imageobject><textobject><phrase>attachment:VizMapperDefaultStyle.png</phrase></textobject></inlinemediaobject> <emphasis role='strong'>Figure: Using the default Visual Style.</emphasis> </para><para>You can change visual styles by making a selection from the Visual Style pull down menu (available directly to the right of the <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapIcon.png'/></imageobject><textobject><phrase>attachment:VizMapIcon.png</phrase></textobject></inlinemediaobject> icon). </para><para>For example, if you select “Sample1”, a new visual style will be applied to your network, and you will see a white background and round blue nodes. Additionally, if you zoom in closer, you can see that protein-DNA interactions (specified with the label: pd) are drawn with dashed red edges, whereas protein-protein interactions (specified with the label: pp) are drawn with a light blue color (see sample screenshot below). </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperSample1Style.png'/></imageobject><textobject><phrase>attachment:VizMapperSample1Style.png</phrase></textobject></inlinemediaobject> <emphasis role='strong'>Figure: Using the Sample1 Visual Style. Protein-Protein interactions (solid blue lines) are now distinguishable from Protein-DNA interactions (dashed red lines).</emphasis> </para><para>Finally, if you select “Sample2”, gene expression values for each node will be colored along a color gradient between red and green (where red represents a low expression ratio, and green represents a high expression ratio - with thresholds set for the gal1RGexp experiment bundled with Cytoscape in the sampleData/galExpData.pvals file). See sample screenshot below: </para><itemizedlist><listitem><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperSample2Style.png'/></imageobject><textobject><phrase>attachment:VizMapperSample2Style.png</phrase></textobject></inlinemediaobject> </para></listitem></itemizedlist><para><emphasis role='strong'>Figure: Using the Sample2 Visual Style. Gene expression values are now displayed along a red/green color gradient.</emphasis> </para><para/></section><section><title>Visual Attributes, Graph Attributes and Visual Mappers</title><para>The Cytoscape Visual Mapper has three core components: <emphasis>visual attributes, network attributes </emphasis>and <emphasis>visual mappers</emphasis>: </para><itemizedlist><listitem><para>A <emphasis>visual attribute</emphasis> is any visual setting that can be applied to your network. For example, you can change all nodes to squares by setting the node shape visual attribute. </para></listitem><listitem><para>A <emphasis>network attribute</emphasis> is any attribute associated with a node or an edge. For example, each edge in a network may be associated with a label, such as “pd” (protein-DNA interactions), or “pp” (protein-protein interactions). </para></listitem><listitem><para>A <emphasis>visual mapper</emphasis> maps network attributes to visual attributes. For example, a visual mapper can map all protein-DNA interactions to the color blue, and all protein-protein interactions to the color red. </para></listitem></itemizedlist><para>Cytoscape includes a large number of visual attributes. These are summarized in the tables below. </para><table><caption/><tgroup cols='1'><colspec colname='xxx1'/><tbody><row><entry><para><emphasis role='strong'>Visual Attributes Associated with Nodes:</emphasis> </para></entry></row><row><entry><para>Node Color </para></entry></row><row><entry><para>Node Border Color </para></entry></row><row><entry><para>Node Border Line Type. The following options are available: </para></entry></row><row><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperLineType.png'/></imageobject><textobject><phrase>attachment:VizMapperLineType.png</phrase></textobject></inlinemediaobject> </para></entry></row><row><entry><para>Node Shape. The following options are available: </para></entry></row><row><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperNodeShape.png'/></imageobject><textobject><phrase>attachment:VizMapperNodeShape.png</phrase></textobject></inlinemediaobject> </para></entry></row><row><entry><para>Node Size: width and height of each node. </para></entry></row><row><entry><para>Node Label: the text label for each node. </para></entry></row><row><entry><para>Node Label Position: the posiiton of the label relative to the node.</para></entry></row><row><entry><para>Node Font: node font and size. </para></entry></row></tbody></tgroup></table><table><caption/><tgroup cols='1'><colspec colname='xxx1'/><tbody><row><entry><para><emphasis role='strong'>Visual Attributes Associated with Edges:</emphasis> </para></entry></row><row><entry><para>Edge Color </para></entry></row><row><entry><para>Edge Line Type. The following options are available: </para></entry></row><row><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperLineType.png'/></imageobject><textobject><phrase>attachment:VizMapperLineType.png</phrase></textobject></inlinemediaobject> </para></entry></row><row><entry><para>Edge Source Arrow. The following options are available: </para></entry></row><row><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperArrowType.png'/></imageobject><textobject><phrase>attachment:VizMapperArrowType.png</phrase></textobject></inlinemediaobject> </para></entry></row><row><entry><para>Edge Target Arrow. The following options are available: </para></entry></row><row><entry><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperArrowType.png'/></imageobject><textobject><phrase>attachment:VizMapperArrowType.png</phrase></textobject></inlinemediaobject> </para></entry></row><row><entry><para>Edge Label: the text label for each edge. </para></entry></row><row><entry><para>Edge Font: edge font and size. </para></entry></row></tbody></tgroup></table><table><caption/><tgroup cols='1'><colspec colname='xxx1'/><tbody><row><entry><para><emphasis role='strong'>Global Visual Properties:</emphasis> </para></entry></row><row><entry><para>Background Color </para></entry></row></tbody></tgroup></table><para>For each visual attribute, you can specify a default value or define a visual mapping. Cytoscape currently supports three different types of visual mappers: </para><itemizedlist><listitem><para><emphasis role='strong'>Passthrough Mapper:</emphasis> network attributes are passed directly through to visual attributes. A passthrough mapper only works for node / edge labels. For example, a passthrough mapper can draw the common gene name on all nodes. </para></listitem><listitem><para><emphasis role='strong'>Discrete Mapper:</emphasis> discrete network attributes are mapped to discrete visual attributes. For example, a discrete mapper can map all protein-protein interactions to the color blue. </para></listitem><listitem><para><emphasis role='strong'>Continuous Mapper</emphasis>: continuous graph attributes are mapped to visual attributes. Depending on the visual attribute, there are two types of continuous mappers: </para><itemizedlist><listitem><para><emphasis role='strong'>continuous to continuous mapper</emphasis>: for example, you can map a continuous value (0..1) to a continuous color gradient (red..green) or node/font size (10..100). </para></listitem><listitem><para><emphasis role='strong'>continuous to discrete mapper</emphasis>: for example, all values below 0 are mapped to square nodes, and all values above 0 are mapped to circular nodes. However, there is no way to smoothly morph between circular nodes and square nodes. </para></listitem></itemizedlist></listitem></itemizedlist><para>The matrix below shows visual mapper support for each visual property. </para><table><caption/><tgroup cols='4'><colspec colname='xxx1'/><colspec colname='xxx2'/><colspec colname='xxx3'/><colspec colname='xxx4'/><tbody><row><entry><para><emphasis role='strong'>Node Properties</emphasis> </para></entry><entry><para><emphasis role='strong'>Passthrough Mapper</emphasis> </para></entry><entry><para><emphasis role='strong'>Discrete Mapper</emphasis> </para></entry><entry><para><emphasis role='strong'>Continuous Mapper</emphasis> </para></entry></row><row><entry><para> Node Color </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>X </para></entry></row><row><entry><para> Node Border Color </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>X </para></entry></row><row><entry><para> Node Border Type </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>o </para></entry></row><row><entry><para> Node Shape </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>o </para></entry></row><row><entry><para> Node Size </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>X </para></entry></row><row><entry><para> Node Label </para></entry><entry><para>X </para></entry><entry><para>X </para></entry><entry><para>o </para></entry></row><row><entry><para> Node Font Family </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>o </para></entry></row><row><entry><para> Node Font Size </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>X </para></entry></row><row><entry><para><emphasis role='strong'>Edge Properties</emphasis> </para></entry><entry><para><emphasis role='strong'>Passthrough Mapper</emphasis> </para></entry><entry><para><emphasis role='strong'>Discrete Mapper</emphasis> </para></entry><entry><para><emphasis role='strong'>Continuous Mapper</emphasis> </para></entry></row><row><entry><para> Edge Color </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>X </para></entry></row><row><entry><para> Edge Line Type </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>o </para></entry></row><row><entry><para> Edge Source Arrow </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>o </para></entry></row><row><entry><para> Edge Target Arrow </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>o </para></entry></row><row><entry><para> Edge Label </para></entry><entry><para>X </para></entry><entry><para>X </para></entry><entry><para>o </para></entry></row><row><entry><para> Edge Font Family </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>o </para></entry></row><row><entry><para> Edge Font Size </para></entry><entry><para> - </para></entry><entry><para>X </para></entry><entry><para>X </para></entry></row></tbody></tgroup></table><para><emphasis role='strong'>Legend</emphasis> </para><table><caption/><tgroup cols='2'><colspec colname='xxx1'/><colspec colname='xxx2'/><tbody><row><entry><para><emphasis>Symbol</emphasis></para></entry><entry><para><emphasis>Description</emphasis></para></entry></row><row><entry><para> - </para></entry><entry><para>Mapping is not supported for specified visual property. </para></entry></row><row><entry><para> X </para></entry><entry><para>Mapping is fully supported for specified visual property. </para></entry></row><row><entry><para> o </para></entry><entry><para>Mapping is partially supported for specified visual property. Support for “continuous to continuous” mapping is not supported. </para></entry></row></tbody></tgroup></table><para/></section><section><title>Visual Styles Tutorials</title><para/><section><title>Tutorial 1: Creating a Basic Visual Style</title><para>To create a new visual style, select the <emphasis role='underline'>View → Open Viz Mapper</emphasis> menu item, or select the <ulink url='/cgi-bin/moin.cgi/VizMap'>VizMap</ulink> icon in the main button bar. You will now see a new Visual Styles dialog box (shown below.) </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperDialog.png'/></imageobject><textobject><phrase>attachment:VizMapperDialog.png</phrase></textobject></inlinemediaobject> </para><para>Click the New button, and enter a name for your new visual style when prompted. Then click the <emphasis role='strong'>Define</emphasis> button. You will now see the main Visual Styles Properties dialog box (shown below.) </para><para>From this dialog box, you can flip between Node Attributes, Edge Attributes, and Global Defaults. You can also specify default values for any visual property, or define a new custom mapping. </para><para>For example, to set the default node shape to triangles, select <emphasis role='underline'>Node Attributes → Node Shape</emphasis>. Then, click the <emphasis role='strong'>Change Default</emphasis> button, and select the Triangle icon from the selection list. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperNodeShapeDialog.png'/></imageobject><textobject><phrase>attachment:VizMapperNodeShapeDialog.png</phrase></textobject></inlinemediaobject> To apply your visual style to your network, hit the <emphasis role='strong'>Apply to Network</emphasis>  button, available in the bottom of the dialog panel. </para><para/></section><section><title>Tutorial 2: Creating a New Visual Style with a Discrete Mapper</title><para>The following tutorial demonstrates how to create a new visual style with a discrete mapper. The goal is to draw Protein-DNA interactions with blue edges, and Protein-Protein interactions with red edges. </para><itemizedlist><listitem><para>Load a sample network: From the main menu, select <emphasis role='underline'>File → Import → Network</emphasis>, and select sampleData/galFiltered.sif. </para></listitem><listitem><para>Click the <ulink url='/cgi-bin/moin.cgi/VizMap'>VizMap</ulink> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapIcon.png'/></imageobject><textobject><phrase>attachment:VizMapIcon.png</phrase></textobject></inlinemediaobject> button on the tool bar. </para></listitem><listitem><para>Select <emphasis role='strong'>New</emphasis> to create a new Visual Style. Name your new style: “Sample3”. </para></listitem><listitem><para>Click the <emphasis role='strong'>Define</emphasis> button to define the newly created Visual Style. </para></listitem><listitem><para>In the “Set Visual Properties” Dialog box, select <emphasis role='underline'>Edge Attributes → Edge Color</emphasis>. </para></listitem><listitem><para>Click the <emphasis role='strong'>New</emphasis> button in the mapping panel. </para></listitem><listitem>You will be prompted to select a mapping type: passthrough mapper, discrete mapper or continuous mapper (for an overview of the differences between these mappers, please refer to the text above) Select “discrete mapper”, and enter a descriptive name. For example, enter: Interaction_Type_Color. </listitem><listitem>From the “Map Attribute” pull-down menu, select “interaction.” You should now see two buttons, one for pd (Protein-DNA interactions), and one for pp (Protein-Protein interactions). </listitem><listitem>Click the “pd” button and select a blue color. </listitem><listitem>Click the “pp” button and select a red color. </listitem><listitem>Click the “Apply to Network" button. </listitem></itemizedlist><para>You network should now show “pd” interactions in blue, and “pp” interactions in red. Sample screenshot is below </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperInteractionsRedBlue.png'/></imageobject><textobject><phrase>attachment:VizMapperInteractionsRedBlue.png</phrase></textobject></inlinemediaobject> </para></section><section><title>Tutorial 3: Visualizing Expression Data on a Network</title><para>The following tutorial demonstrates how to create a new continuous mapper. The goal is to superimpose gene expression data onto a network, and to display gene expression values along a color gradient. </para><itemizedlist><listitem><para>Load a sample network: From the main menu, select <emphasis role='underline'>File → Import → Network</emphasis>, and select sampleData/galFiltered.sif. </para></listitem><listitem><para>Load a sample set of expression data: From the main menu, select <emphasis role='underline'>File → Import → Attribute Matrix</emphasis> and select sampleData/galExpData.pvals. </para></listitem><listitem><para>Click the <ulink url='/cgi-bin/moin.cgi/VizMap'>VizMap</ulink> <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapIcon.png'/></imageobject><textobject><phrase>attachment:VizMapIcon.png</phrase></textobject></inlinemediaobject> button on the tool bar. </para></listitem><listitem>Select “New” to create a new Visual Style. Name your new style: “Sample4”. </listitem><listitem>Click the “Define” button to define the newly created Visual Style. </listitem><listitem><para>In the “Set Visual Properties” Dialog box, select <emphasis role='underline'>Node Attributes → Node Color</emphasis>. </para></listitem><listitem>Click the New button in the mapping panel. </listitem><listitem>You will be prompted to select a mapping type: passthrough mapper, discrete mapper or continuous mapper (for an overview of the differences between these mappers, please refer to the section above) Select “continuous mapper”, and enter a descriptive name. For example, enter: Color_Gradient. </listitem><listitem>From the “Map Attribute” pull-down menu, select “gal1RGexp.” </listitem><listitem>Click the “Add Point” button twice to add two data points. </listitem><listitem>Set the first point to “-1”, Below = Yellow, Equal = White. </listitem><listitem>Set the second point to “2”, Equal = Red, Above = Black. </listitem><listitem>Click the “Apply to Network" button. </listitem></itemizedlist><para>This visual mapper will set all nodes with a gal1RGexp value less than –1 to Yellow, and all nodes with a gal1RGExp value greater than 2 to Black. Additionally, all values between –1 and 2 will be painted with a white/red color gradient. Sample screenshot is below. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizMapperExpRedBlack.png'/></imageobject><textobject><phrase>attachment:VizMapperExpRedBlack.png</phrase></textobject></inlinemediaobject> </para></section></section><section><title>Managing Visual Styles</title><para>All Cytoscape Visual Style settings are initially loaded from a a default file called vizmap.props that cannot be altered by users. When users make changes to the visual properties, a vizmap.props file is saved in the session file. This means that assuming you save your session, you will not lose your visual properties.  No other vizmap.props files are saved during normal operation. </para><para/><section><title>Saving Visual Styles</title><para>Visual styles are automatically saved with the session they were created in.  Before Cytoscape exits, you will be prompted to make sure you save the session before quitting.   It is also possible to save your visual styles in a file separate from the session file.  To do this, navigate to the <emphasis role='underline'>File → Export → Vizmap Property File...</emphasis> menu and choose the file the properties should be saved to.   This feature can be used to share visual styles with other users. </para><para/></section><section><title>Importing Visual Styles</title><para>To import existing visual styles navigate to the <emphasis role='underline'>File → Import → Vizmap Property File</emphasis> menu option and select a vizmap.props file.  Imported properties will supplement existing properties or override existing properties if the properties have the same name. You can also specify a visual properties file using the -V command line option (cytoscape.sh -V myVizmap.props).  Visual properties loaded from the command line will override any default properties. </para><para/></section><section><title>Default Visual Styles</title><para>It is possible to change the default visual properties for all sessions of cytoscape.  To do this, navigate to the <emphasis role='underline'>Edit → Preferences...</emphasis> menu, check the "Make Current Visual Styles Default" box in the "Default Visual Styles" section, and click "Ok".  This will save the current visual styles as a vizmap.props file to your .cytoscape directory (found in your home directory). These visual styles will be loaded each time Cytoscape is started. </para><para/></section></section><section><title>Bypassing Visual Styles</title><para>Cytoscape has a new feature that allows users to override visualizations created by the vizmapper for individual nodes and edges. This feature is available by right-clicking on a node or edge and then clicking on the <emphasis role='underline'>Visual Mapping Bypass</emphasis> menu.  </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Visual_Styles?action=AttachFile&amp;do=get&amp;target=VizmapBypass.png'/></imageobject><textobject><phrase>attachment:VizmapBypass.png</phrase></textobject></inlinemediaobject> </para><para>Each visual property of the node or edge is displayed.  When a property is overridden, a checkmark appears next to the property and a <emphasis role='underline'>[Reset &lt;Property Name>]</emphasis> menu item appears below the checked property.  By clicking the <emphasis role='underline'>[Reset &lt;Property Name>]</emphasis> option the bypass will be removed and the attribute will be displayed as defined by the <ulink url='/cgi-bin/moin.cgi/VizMapper'>VizMapper</ulink>. At the bottom of the menu a <emphasis role='underline'>Reset All</emphasis> option appears.  When clicked, this will be remove all bypasses for the specified node or edge.  In the example above you can see the the selected node size, color, and shape have been overridden.  This is apparent in the appearance of the node itself and by the check marks in the popup menu. </para><para>It is important to realize that the the Visual Mapping Bypass only works for individual nodes and edges and not for all nodes or edges of a specific type.  Using bypass is not particularly resource intensive, meaning you can use it as much as you like. However, if you ever find yourself repeating the same bypasses, then you should consider using the <ulink url='/cgi-bin/moin.cgi/VizMapper'>VizMapper</ulink> instead. </para><para>Bypass is accomplished using special attributes with names like <emphasis>node.fillColor</emphasis> and <emphasis>node.shape</emphasis>.  These are normal Cytoscape attributes and can be seen an editted in the Attribute Browser.  The value of the attribute is a string representation of a property.  For example, color is represented by 3 integers representing the RGB (red, green, blue) value of the color.  Different types of properties have different string representations.  When in doubt, just use the right click menu to create valid attribute values.  </para><para>Because bypass values are specified using normal attributes, these attributes will persist between sessions as long as you save your session!  If you don't save your session, you will lose whatever bypass values you set. </para></section> </section><section><title>Finding and Filtering Nodes and Edges</title><para/><section><title>QuickFind</title><para>Cytoscape now includes a new Quick Find feature, which enables you to quickly find nodes and edges.   </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=quick_find2.png'/></imageobject><textobject><phrase>attachment:quick_find2.png</phrase></textobject></inlinemediaobject> </para><para>Using Quick Find is very simple.  Here is how it works: </para><itemizedlist><listitem>Import up a network.  For example, load up sampleData/galFiltered.sif </listitem><listitem>Start typing in the text box.  For example, enter "yd".  The search box will automatically display a list of all matching nodes. </listitem></itemizedlist><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=quick_find3.png'/></imageobject><textobject><phrase>attachment:quick_find3.png</phrase></textobject></inlinemediaobject> </para><itemizedlist><listitem>Select a matching node by hitting [Enter].  Cytoscape will automatically zoom in on the selected node. </listitem></itemizedlist><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=quick_find4.png'/></imageobject><textobject><phrase>attachment:quick_find4.png</phrase></textobject></inlinemediaobject> </para><para/><section><title>Configuring Quick Find</title><para>Quick Find works by creating an internal index of all nodes within the network.  By default, Cytoscape indexes all nodes by the node identifier.  However, you can configure Quick Find to index nodes or edges, and you can choose to index on any attribute. </para><para>For example, if you load up a BioPAX file (sampleData/Apoptosis_BioPAX.xml), your network will be automatically annotated with numerous attributes.  To index the network based on, e.g. cellular location, click the Quick Find configuration button, and select "biopax_cellular" location from the drop-down menu. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=quick_find5.png'/></imageobject><textobject><phrase>attachment:quick_find5.png</phrase></textobject></inlinemediaobject> </para><para>You can then quickly find all proteins located in the "plasma membrane" by just typing "p". </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=quick_find6.png'/></imageobject><textobject><phrase>attachment:quick_find6.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='strong'>Tip:</emphasis>  If you don't know what to search for, just leave the search box empty, and click on the down arrow directly next to the search box.  Cytoscape will provide you with an initial list of matches.  In the case below, we get a list of all distinct cellular locations in the network. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=quick_find7.png'/></imageobject><textobject><phrase>attachment:quick_find7.png</phrase></textobject></inlinemediaobject> </para><para/></section><section><title>Dynamic Filtering via Quick Find</title><para>If you choose to index on a numerical attribute, the Cytoscape search box changes to a dynamic slider for quick filtering. </para><para>For example: </para><itemizedlist><listitem><para>Import a network:  sampleData/galFiltered.sif.  <emphasis role='strong'>File &amp;#8594; Import &amp;#8594;  Network</emphasis>. </para></listitem><listitem><para>Import an expression data file:  sampleData/galExpData.pvals.  <emphasis role='strong'>File &amp;#8594; Import &amp;#8594;  Attribute / Expression Matrix</emphasis> </para></listitem><listitem>Index Quick Find on the gal1RGExp attribute </listitem></itemizedlist><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=quick_find8.png'/></imageobject><textobject><phrase>attachment:quick_find8.png</phrase></textobject></inlinemediaobject> </para><itemizedlist><listitem>Use the slider widget to automatically filter the entire network </listitem></itemizedlist><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=quick_find9.png'/></imageobject><textobject><phrase>attachment:quick_find9.png</phrase></textobject></inlinemediaobject> </para><para/></section></section><section><title>Filters</title><para>Filters allow for a wide variety of filtering on node and edge attributes loaded onto Cytoscape networks. Filters are poorly named because what they really do is select nodes or edges based on properties you specifiy. For example, you can select all the nodes whose name contains a specific pattern. Several types of filters are available. Basic filters allow the selection of multiple nodes or edges according to attribute data: </para><itemizedlist><listitem><para><emphasis role='strong'>String </emphasis>filters allow selection of nodes or edges with attributes matching specified patterns. These patterns may include the wildcards * and ?. </para></listitem><listitem><para><emphasis role='strong'>Numerical</emphasis> filters allow selection of nodes or edges according to numerical attributes and the mathematical operators >, =, and &lt;. </para></listitem><listitem><para><emphasis role='strong'>Topology</emphasis> filters allow selection of nodes with neighbors that match some pre-existing filter. </para></listitem></itemizedlist><para>Compound filters allow selection based on the application of pre-existing filters: </para><itemizedlist><listitem><para><emphasis role='strong'>Boolean</emphasis> filters allow the combination of multiple filters using the AND, OR and XOR operators. Example filters are shipped with the plugin to get started. </para></listitem></itemizedlist><para/><section><title>Using Filters</title><para>By default, you should see a filter icon on the toolbar: <inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=filter_icon.png'/></imageobject><textobject><phrase>attachment:filter_icon.png</phrase></textobject></inlinemediaobject> </para><para>If you press the filter icon, you will see a filters dialog which initially looks like the following: </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=init_filter_dialog.png'/></imageobject><textobject><phrase>attachment:init_filter_dialog.png</phrase></textobject></inlinemediaobject> </para><para>If the first filter is selected, then the dialog looks as shown: </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=first_filter_dialog.png'/></imageobject><textobject><phrase>attachment:first_filter_dialog.png</phrase></textobject></inlinemediaobject> </para><para/><section><title>Filter Panels:</title><para>The right panel: An existing or newly created filter can be edited in this area. Each filter type has its own user interface for editing. </para><para>The low left panel: All available filters are shown in this list. Initially, this list will contain sample filters, but as you create more, they will be added here. </para><para>The up left panel: Pressing “Create new filter” adds a filter to the “Available Filters” box, and “Remove selected filter” deletes the currently selected filter. </para><para/></section></section><section><title>Creating Filters</title><para>The “Create new filter” button brings up the Filter creation dialog box, shown below. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=create_new_filter_dialog.png'/></imageobject><textobject><phrase>attachment:create_new_filter_dialog.png</phrase></textobject></inlinemediaobject> </para><para>The important thing to realize when creating a filter is that the filter does not <emphasis role='strong'>do</emphasis> anything by itself. Once created, the filter must be run. </para><para/><section><title>String Filter:</title><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=string_filter.png'/></imageobject><textobject><phrase>attachment:string_filter.png</phrase></textobject></inlinemediaobject> </para><para>The String Filter allows you to filter nodes or edges by a given string node or edge attribute. Attributes that are loaded on the network are available for filtering against. Search terms are entered in the text box at the bottom. For example to match any Node whose canonicalName starts with “YDL” you would select “Node”, “canonicalName” and type “YDL*”. The * is important as it matches any number of characters after YDL. If you want to be more specific and only select nodes whose canonicalName starts with YDL00 followed by any other two characters, you would type “YDL00??”. The “?” denotes any single character, while the “*” represents zero or more characters. Full regular expression searching is supported, although is not covered here. Once the filter is defined, it will be assigned a default descriptive name. </para><para/></section><section><title>Numerical Filter:</title><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=numerical_filter.png'/></imageobject><textobject><phrase>attachment:numerical_filter.png</phrase></textobject></inlinemediaobject> </para><para>The Numerical Filter also allows you to filter nodes or edges, and presents you with a list of available attributes. This filter matches greater-than, less-than, or equal-to a number you type in the search box. </para><para/></section><section><title>Node Topology Filter:</title><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=node_topology_filter.png'/></imageobject><textobject><phrase>attachment:node_topology_filter.png</phrase></textobject></inlinemediaobject> </para><para>The node topology filter allows you to select nodes with at least <emphasis>n</emphasis> neighbors of distance <emphasis>m </emphasis>or less that pass some other selected filter. For instance, to select all the nodes adjacent to a node with the canonical name matching ‘YD*’, you would “select nodes with 1 neighbors”, “within distance 1”, “that pass the filter Node: canonicalName ~ YD*”. </para><para>The node topology filter depends on the existence of other filters.  By default the <emphasis role='strong'>[No Filter]</emphasis> is selected for this purpose.  The <emphasis role='strong'>[No Filter]</emphasis> doesn't filter anything, rather it selects all nodes. </para><para/></section><section><title>Boolean Filter:</title><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Filters?action=AttachFile&amp;do=get&amp;target=boolean_filter.png'/></imageobject><textobject><phrase>attachment:boolean_filter.png</phrase></textobject></inlinemediaobject> </para><para>The Boolean Meta-Filter allows you to define a new filter that is a logical combination of existing filters. Available filters are displayed. By selecting one or more filters, you can then choose whether Nodes or Edges pass “ALL” (AND), “AT LEAST ONE” (OR), or “ONLY ONE” (XOR) of the selected filters. Once created Boolean filters can then themselves be combined using the Boolean filter to create arbitrarily complex logical combinations of filters. Note that unlike the String and Numerical Filters, Boolean Filters will need to be assigned a name manually. </para><para/></section><section><title>Saving Filters</title><para>Filters are currently saved automatically in the filters.props file found in the <emphasis>.cytoscape</emphasis> directory, found in each user's home directory. Once created, filters are saved for future sessions, as long as you exit Cytoscape normally via the exit command in the File menu (i.e. not via ctrl-c on Linux). </para><para/></section><section><title>Running filters</title><para>Any available filter can be run by pressing the ‘Apply selected filter’ button. When a filter is applied and multiple nodes or edges are selected, all of the normal selection-related operations may be performed, such as Delete Selected Node/Edges, Copy To New Network, and Invert Selection. </para><para/></section></section></section><section><title>Select Menu</title><para>The <emphasis role='underline'>Select &amp;#8594; Nodes</emphasis> and <emphasis role='underline'>Select &amp;#8594; Edges</emphasis> menus provide several mechanisms for selecting nodes and edges. Most options are fairly straightforward, however some need extra explanation. </para><para><emphasis role='underline'>Select &amp;#8594; Nodes &amp;#8594; By Name...</emphasis>  selects nodes by the node identifier (ID).  This is the value seen in the left-most column of the attribute browser.  This does not change if the node label changes! </para><para><emphasis role='underline'>Select &amp;#8594; Nodes &amp;#8594; From File...</emphasis> selects nodes based on node identifiers found in a specified file.  The file format is simply one node id per line: </para><para></para><screen><![CDATA[Node1
Node2
Node3
...
]]></screen></section> </section><section><title>Editing Networks</title><para>Using Cytoscape's Editor, you can build and modify networks interactively by dragging and dropping nodes and edges from a palette onto the main network view window. The palette contains a set of shapes (for nodes) and arrows (for edges). The shapes on the palette are defined by the current Visual Style, with Node Shape and Node Color mapping into the shape and color of a node, and Edge Target Arrow mapping into the target arrow of an edge. An example of an editor, with the palette contained in <ulink url='/cgi-bin/moin.cgi/CytoPanel'>CytoPanel</ulink> 1, is shown below. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Network_Editor?action=AttachFile&amp;do=get&amp;target=image096.gif'/></imageobject><textobject><phrase>attachment:image096.gif</phrase></textobject></inlinemediaobject> </para><para>To edit an existing network, just select the Editor tab in <ulink url='/cgi-bin/moin.cgi/CytoPanel'>CytoPanel</ulink> 1.  To start editing a new network, use the <emphasis role='underline'>File → New → Network → Empty Network</emphasis> menu item. </para><para>The figure below shows the editor with palette defined by "Default" visual style. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Network_Editor?action=AttachFile&amp;do=get&amp;target=image097.gif'/></imageobject><textobject><phrase>attachment:image097.gif</phrase></textobject></inlinemediaobject> </para><para>To add a node to a network, drag and drop a node shape from the palette onto the canvas. </para><para>To connect two nodes with an edge, drag and drop an arrow shape onto a node on the canvas. This node becomes the source node of the edge. Move the cursor and a rubber-banded line follows the cursor. As the cursor passes over another node, that node is highlighted and the rubber-banded line will snap to a connection point on that second node. Click the mouse while over this node and the connection is established. </para><para>You can abort the drawing of the edge by clicking on an empty spot on the palette. </para><para>Note that if you change the Visual Style, the palette used by the current network view will also change to be consistent with the mappings in the new Visual Style. </para><para>There is also an <emphasis role='underline'>Edit → Connect Selected Nodes</emphasis> menu item that, when chosen, creates a clique amongst the selected nodes. </para><para>The editor provides accelerators for adding nodes and edges. Control-clicking at a position on the canvas creates a node at that position. The NODE_TYPE attribute of the node will be the same as the NODE_TYPE of the node most recently added, defaulting to "<ulink url='/cgi-bin/moin.cgi/DefaultNode'>DefaultNode</ulink>" type. In this manner, you can use control-clicking as a kind of "stamp" to add multiple nodes of the same type to the network. Control-clicking on a node on the canvas starts an edge with source at that node. Move the cursor and a rubber-banded line follows the cursor. As the cursor passes over another node, that node is highlighted and the rubber-banded line will snap to a connection point on that second node. Control-click the mouse again and the connection is established. The EDGE_TYPE attribute of the edge will be the same as the EDGE_TYPE of the edge most recently added, defaulting to "<ulink url='/cgi-bin/moin.cgi/DefaultEdge'>DefaultEdge</ulink>" type. You can abort the drawing of the edge by control-clicking on an empty spot on the palette. </para><para>You can delete nodes and edges by selecting a number of nodes and edges, then selecting the <emphasis role='underline'>Edit → Delete Selected Nodes and Edges</emphasis> menu item. You can recover any nodes and edges deleted from a network by selecting the <emphasis role='underline'>Edit → Undo</emphasis> menu item. Note that this will restore <emphasis role='strong'>all</emphasis> nodes and edges that were previously deleted from the network, not just those deleted by the most recent delete operation. </para> </section><section><title>CytoPanels</title><para><emphasis role='underline'><emphasis role='strong'>What are C</emphasis><emphasis role='strong'>ytoPanels?</emphasis></emphasis> </para><para>C<emphasis role='strong'/>ytoPanels are floatable / dockable panels designed to cut down on the number of pop-up windows within Cytoscape and to create a more unified user experience. The following screenshot shows the galFiltered.sif file loaded into Cytoscape.  In C<emphasis role='strong'/>ytoPanel 1, the C<emphasis role='strong'/>ytoPanel on the left-hand side of the screen, the Network Manager, Network Overview, and Cytoscape Editor have been loaded.  In addition, in C<emphasis role='strong'/>ytoPanel 2, the Node Attribute Browser has been loaded. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/CytoPanels?action=AttachFile&amp;do=get&amp;target=cytopanel-default.png'/></imageobject><textobject><phrase>attachment:cytopanel-default.png</phrase></textobject></inlinemediaobject> </para><para>The user can then chose to resize, hide or float the left C<emphasis role='strong'/>ytoPanel. For example, in the screenshot below, the user has chosen to float C<emphasis role='strong'/>ytoPanel 1: </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/CytoPanels?action=AttachFile&amp;do=get&amp;target=cytopanel-float.png'/></imageobject><textobject><phrase>attachment:cytopanel-float.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='strong'>Basic Usage</emphasis> </para><para>Cytoscape 2.2 includes three C<emphasis role='strong'/>ytoPanels: C<emphasis role='strong'/>ytoPanel 1 (appears on the left), C<emphasis role='strong'/>ytoPanel 2 (appears on the bottom), and C<emphasis role='strong'/>ytoPanel 3 (appears on the right). By default, C<emphasis role='strong'/>ytoPanel 1 and C<emphasis role='strong'/>ytoPanel 2 will appear.  C<emphasis role='strong'/>ytoPanel 3 may appear depending on the mix of P<emphasis role='strong'/>lugIns currently installed in your Cytoscape distribution. </para><para>C<emphasis role='strong'/>ytoPanels can be shown or hidden by selecting the desired menu item within the C<emphasis role='strong'/>ytoPanels menu. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/CytoPanels?action=AttachFile&amp;do=get&amp;target=cytopanel-menu-items.png'/></imageobject><textobject><phrase>attachment:cytopanel-menu-items.png</phrase></textobject></inlinemediaobject> </para><para>In addition, C<emphasis role='strong'/>ytoPanels can be floated or docked by selected the icon at the top-right corner of each C<emphasis role='strong'/>ytoPanel. The icon and tooltip will change based on the C<emphasis role='strong'/>ytoPanel state. If the C<emphasis role='strong'/>ytoPanel is docked, clicking on the icon will float the C<emphasis role='strong'/>ytoPanel, as indicated by the “Float Window” tooltip. Alternatively, if the C<emphasis role='strong'/>ytoPanel is floating, clicking on the icon will dock the C<emphasis role='strong'/>ytoPanel, as indicated by the “Dock Window” tooltip. </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/CytoPanels?action=AttachFile&amp;do=get&amp;target=cytopanel-float-dock-icon.png'/></imageobject><textobject><phrase>attachment:cytopanel-float-dock-icon.png</phrase></textobject></inlinemediaobject> </para> </section><itemizedlist><listitem><anchor id='renderer'/> </listitem></itemizedlist><para/><section><title>Rendering Engine</title><para>In Cytoscape 2.3 a new network rendering engine is being introduced.  The goal of the rendering engine is to be able to display large networks (>10,000 nodes) yet retain interactive speed.  To accomplish this goal a technique involving <emphasis>level of detail</emphasis> is being used.  Based on the count of objects (nodes and edges) being rendered, an appropriate <emphasis>level of detail</emphasis> is chosen.  For example, by default, node labels (if present) are only rendered when less than 100 nodes are visible because drawing text is a relatively expensive operation.  This can create some unusual behavior. If the screen currently contains 98 nodes, node labels will be displayed.  If you pan the screen, such that now 101 nodes are displayed, the node labels will disappear.  As another example, if the sum of rendered edges and rendered nodes is greater than or equal to a default value of 2000, a very coarse level of detail is chosen, where edges are always straight lines, nodes are always rectangles, and no antialiasing is done.  The default values used to determine these thresholds can be changed by setting properties in the <emphasis role='underline'>Edit → Preferences</emphasis> menu.   <emphasis role='strong'>Beware!</emphasis>  The greater these thresholds become, the slower performance will become.  If you work with small networks (a few hundred nodes), this shouldn't be a problem, but for large networks it will produce noticeable slowing.  The various thresholds are described below. </para><table><caption/><tgroup cols='3'><colspec colname='xxx1'/><colspec colname='xxx2'/><colspec colname='xxx3'/><tbody><row><entry><para> render.coarseDetailThreshold </para></entry><entry namest='xxx2' nameend='xxx3'><para> If the sum of <emphasis>rendered</emphasis> nodes and <emphasis>rendered</emphasis> edges equals to or exceeds this number, a very coarse level of detail will be chosen and all other detail parameters will be ignored; this value defaults to 2000. </para></entry></row><row><entry><para> render.nodeBorderThreshold </para></entry><entry namest='xxx2' nameend='xxx3'><para> If the number of <emphasis>rendered</emphasis> nodes equals to or exceeds this number, node borders will not be rendered; this value defaults to 200. </para></entry></row><row><entry><para> render.nodeLabelThreshold </para></entry><entry namest='xxx2' nameend='xxx3'><para> If the number of <emphasis>rendered</emphasis> nodes equals to or exceeds this number, node labels will not be rendered; this value defaults to 100. </para></entry></row><row><entry><para> render.edgeArrowThreshold </para></entry><entry namest='xxx2' nameend='xxx3'><para> If the number of <emphasis>rendered</emphasis> edges equals to or exceeds this number, edge arrows will not be rendered; this value defaults to 300. </para></entry></row><row><entry><para> render.edgeLabelThreshold </para></entry><entry namest='xxx2' nameend='xxx3'><para> If the number of <emphasis>rendered</emphasis> edges equals to or exceeds this number, edge labels will not be rendered; this value defaults to 150. </para></entry></row></tbody></tgroup></table><para>When printing networks or exporting to formats such as <ulink url='/cgi-bin/moin.cgi/PostScript'>PostScript</ulink>, the highest level of detail is always chosen regardless of what is currently being displayed on the screen. </para> </section><section><title>Annotation</title><para>Annotations in Cytoscape are stored as a set of ontologies (e.g. the Gene Ontology - GO). An ontology consists of a set of controlled vocabulary terms that annotate the objects. For example, using the Gene Ontology, the Saccharomyces Cerevisiae <emphasis role='strong'>CDC55</emphasis> gene’s biological process is described as “protein biosynthesis”, to which GO has assigned the number 6412 (a GO ID).  </para><para></para><screen><![CDATA[GO 8150 biological_process
 GO 7582 physiological processes
   GO 8152 metabolism
    GO 44238 primary metabolism
      GO 19538 protein metabolism
        GO 6412 protein biosynthesis
]]></screen><para><emphasis role='strong'>Graphical View of GO Term 6412: protein biosynthesis</emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_dag1.png'/></imageobject><textobject><phrase>attachment:ontology_dag1.png</phrase></textobject></inlinemediaobject> </para><para>Cytoscape can use this ontology DAG (Directed Acyclic Graph) to annotate objects in networks.  The <emphasis><emphasis role='strong'>Ontology Server</emphasis></emphasis> (originally called <emphasis><emphasis role='strong'>Bio Data Server</emphasis></emphasis>) is a Cytoscape feature which allows you to load, navigate, and assign annotation terms to nodes and edges in a network.  In version 2.4, Cytoscape has enhanced GUI for loading ontology and associated annotation, which enables you to load both local and remote files. </para><para/><section><title>Ontology and Annotation File Format</title><para>The standard file formats used in Cytoscape Ontology Server are OBO and Gene Association. The GO website details these file formats: </para><itemizedlist><listitem><para>Ontologies and Definitions:  <ulink url='http://www.geneontology.org/GO.downloads.shtml#ont'>http://www.geneontology.org/GO.downloads.shtml#ont</ulink> </para></listitem><listitem><para>Current Annotations: <ulink url='http://www.geneontology.org/GO.current.annotations.shtml'>http://www.geneontology.org/GO.current.annotations.shtml</ulink> </para></listitem></itemizedlist><para/><section><title>OBO File</title><para>OBO file is the ontology DAG itself.  This file defines relationships of ontology terms.  Since version 2.4, Cytoscape can load all ontology files written in OBO format.  The full listing of ontology files are available from Open Biomedical Ontologies (OBO) website:  </para><itemizedlist><listitem><para>OBO Ontology Browser: <ulink url='http://obo.sourceforge.net/browse.html'>http://obo.sourceforge.net/browse.html</ulink> </para></listitem></itemizedlist><para>Sample OBO File - gene_ontology.obo: <ulink url='http://www.geneontology.org/ontology/gene_ontology_edit.obo'>http://www.geneontology.org/ontology/gene_ontology_edit.obo</ulink> </para><screen><![CDATA[format-version: 1.2
date: 27:11:2006 17:12
saved-by: midori
auto-generated-by: OBO-Edit 1.002
subsetdef: goslim_generic "Generic GO slim"
subsetdef: goslim_goa "GOA and proteome slim"
subsetdef: goslim_plant "Plant GO slim"
subsetdef: goslim_yeast "Yeast GO slim"
subsetdef: gosubset_prok "Prokaryotic GO subset"
default-namespace: gene_ontology
remark: cvs version: $Revision: 5.49 $

[Term]
id: GO:0000001
name: mitochondrion inheritance
namespace: biological_process
def: "The distribution of mitochondria, including the mitochondrial genome, into daughter cells after mitosis or meiosis, mediated by interactions between mitochondria and the cytoskeleton." [GOC:mcc, PMID:10873824, PMID:11389764]
synonym: "mitochondrial inheritance" EXACT []
is_a: GO:0048308 ! organelle inheritance
is_a: GO:0048311 ! mitochondrion distribution

[Term]
id: GO:0000002
name: mitochondrial genome maintenance
namespace: biological_process
def: "The maintenance of the structure and integrity of the mitochondrial genome." [GOC:ai]
is_a: GO:0007005 ! mitochondrion organization and biogenesis
]]></screen><para><emphasis role='underline'> <emphasis role='strong'>Default List of Ontologies</emphasis> </emphasis> </para><para>Cytoscape provides a list of ontologies available in OBO format.  If Internet connection is available, Cytoscape imports ontology and annotation file directly from the remote source.  The table below is the list of default ontoligies. </para><table><caption/><tgroup cols='2'><colspec colname='xxx1'/><colspec colname='xxx2'/><tbody><row><entry><para> <emphasis role='strong'>Ontology Name</emphasis> </para></entry><entry><para> <emphasis role='strong'>Description</emphasis> </para></entry></row><row><entry><para>Gene Ontology Full</para></entry><entry><para>This data source contains full size GO dag, which contains all GO terms.  This OBO file is written in version 1.2 format.</para></entry></row><row><entry><para>Generic GO slim</para></entry><entry><para>Subset of general GO Terms.  Includes higer-level terms only.</para></entry></row><row><entry><para>Yeast GO slim</para></entry><entry><para>Subset of GO Terms for annotating Yeast data sets.  Maintained by SGD.</para></entry></row><row><entry><para>Molecule role (INOH Protein name/family name ontology)</para></entry><entry><para>A structured controlled vocabulary of concrete protein names and generic (abstract) protein names. This ontology is a INOH pathway annotation ontology, one of a set of ontologies intended to be used in pathway data annotation to ease data integration. This ontology is used to annotate protein names, protein family names, generic/concrete protein names in the INOH pathway data.  INOH is part of the BioPAX working group.</para></entry></row><row><entry><para>Event (INOH pathway ontology)</para></entry><entry><para>A structured controlled vocabulary of pathway centric biological processes. This ontology is a INOH pathway annotation ontology, one of a set of ontologies intended to be used in pathway data annotation to ease data integration. This ontology is used to annotate biological processes, pathways, sub-pathways in the INOH pathway data. INOH is part of the BioPAX working group.</para></entry></row><row><entry><para>Protein-protein interaction</para></entry><entry><para>A structured controlled vocabulary for the annotation of experiments concerned with protein-protein interactions.</para></entry></row><row><entry><para>Pathway Ontology</para></entry><entry><para>The Pathway Ontology is a controlled vocabulary for pathways that provides standard terms for the annotation of geneproducts.</para></entry></row><row><entry><para>PATO</para></entry><entry><para>PATO is an ontology of phenotypic qualities, intended for use in a number of applications, primarily phenotype annotation.  For more information, please visit PATO wiki (<ulink url='http://www.bioontology.org/wiki/index.php/PATO:Main_Page'>http://www.bioontology.org/wiki/index.php/PATO:Main_Page</ulink>). </para></entry></row><row><entry><para>Mouse pathology</para></entry><entry><para>Mouse Pathology Ontology (MPATH) is an ontology for mutant mouse pathology.  This is Version 1.</para></entry></row><row><entry><para>Human disease</para></entry><entry><para>This ontology is a comprehensive hierarchical controlled vocabulary for human disease representation.  For more information, please visit Disease Ontology website (<ulink url='http://diseaseontology.sourceforge.net/'>http://diseaseontology.sourceforge.net/</ulink>).</para></entry></row></tbody></tgroup></table><para>Although Cytoscape can import all kinds of ontologies in OBO format, <emphasis role='strong'>you need to provide ontology-specific annotation file to annotate node/edge/network in Cytoscape</emphasis>.  For example, while you can annotate human network data with GO Full and Gene Association file for human, you cannot annotate it with the combination of the Human disease ontology file and Gene Association file because the Gene Association file is annotation data only for GO. </para><itemizedlist><listitem><para>Mapping Ontology - <emphasis role='underline'>Annotation files are associated with a specific ontology</emphasis>.  This means, you can map GO terms onto human network using Gene Association file for human, but cannot map Human Disease ontology terms with Gene Association file.  In that case, you need an annotation file for Human disease ontology(see the diagram below): </para></listitem></itemizedlist><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_mapping1.png'/></imageobject><textobject><phrase>attachment:ontology_mapping1.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='underline'><emphasis role='strong'>Visualize and Browse Ontology DAG (for Advanced Users)</emphasis></emphasis> </para><para>Relationships between ontology terms are usually represented as Directed Acyclic Graph (DAG).  This is a special case of a network (or graph), where nodes are ontology terms and edges are relationships between terms.  Originally, Cytoscape used special data structure called <ulink url='/cgi-bin/moin.cgi/BioDataServer'>BioDataServer</ulink> to store ontology DAGs.  Since version 2.4, ontology data is stored in the same data structure as normal networks.  This enables users and plugin writers to visualize, browse and manipulate ontology DAGs just like other networks.  The following is an example of visualization of an ontology DAG (Generic GO Slim): </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_dag2.png'/></imageobject><textobject><phrase>attachment:ontology_dag2.png</phrase></textobject></inlinemediaobject> </para><para>Every ontology term and relationship can have attributes.  In the OBO files, ontology terms have optional fields such as definition, synonyms, comments, or cross-references.  These fields will be imported as node attributes.  To browse those attributes, please use attribute browser (see the example below): </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_attrs.png'/></imageobject><textobject><phrase>attachment:ontology_attrs.png</phrase></textobject></inlinemediaobject> </para><itemizedlist><listitem><para>Note 1: Some ontologies have a lot of terms.  For example, the full Gene Ontology contains more than 20,000 terms.  If you need to save memory, you can remove this ontology DAG from Network Panel (Right click on the Ontology Name → <emphasis><emphasis role='strong'>Destroy Network</emphasis></emphasis>). </para></listitem><listitem>Note 2: All ontology DAGs will be saved in the session file.  To minimize the session file size, you can delete the Ontology DAG before saving session. </listitem></itemizedlist><para/></section><section><title>Gene Association File</title><para>Gene Association (GA) file is an annotation only for Gene Ontology.  This is a species specific annotation file for GO terms.  <emphasis role='strong'>Gene Assoiation files will only work with Gene Ontologies and NOT others!</emphasis> </para><para>Sample Gene Association File (gene_association.sgd - annotation file for yeast): </para><para></para><screen><![CDATA[SGD     S000003916      AAD10           GO:0006081      SGD_REF:S000042151|PMID:10572264        ISS             P       aryl-alcohol dehydrogenase (putative)        YJR155W gene    taxon:4932      20020902        SGD
SGD     S000005275      AAD14           GO:0008372      SGD_REF:S000069584      ND              C       aryl-alcohol dehydrogenase (putative)        YNL331C gene    taxon:4932      20010119        SGD
]]></screen><para/></section></section><section><title>Import Ontology and Annotation</title><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_and_annotation_Import_main.png'/></imageobject><textobject><phrase>attachment:ontology_and_annotation_Import_main.png</phrase></textobject></inlinemediaobject> Cytoscape 2.4 provides a graphical user interface to import both ontology and annotation files at the same time. </para><para/><section><title>Import Gene Ontology and Gene Association Files</title><para>For user's convenience, Cytoscape has a list of URLs for commonly used ontology data and a complete set of Gene Association files.  To import Gene Ontology and Gene Association files for the loaded networks, please follow these steps: </para><para><emphasis><emphasis role='strong'>Important: All data sources in the preset list are remote URLs, meaning a network connection is required!</emphasis></emphasis> </para><para><emphasis role='underline'>Step 1.</emphasis> Select Annotation File </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_import_annotation.png'/></imageobject><textobject><phrase>attachment:ontology_import_annotation.png</phrase></textobject></inlinemediaobject> </para><para>Select <emphasis role='underline'><emphasis><emphasis role='strong'>File → Import → Ontology and Annotation...</emphasis></emphasis></emphasis> to open the <emphasis>Import Ontology and Annotation</emphasis> dialog.  From the <emphasis><emphasis role='strong'>Annotation</emphasis></emphasis> combo box, select a gene association file for your network.  For example, if you want to annotate yeast network, select <emphasis>Gene Association file for Saccharomyces cerevisiae</emphasis>. </para><para><emphasis role='underline'>Step 2.</emphasis> Select Ontology File </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_import_obo.png'/></imageobject><textobject><phrase>attachment:ontology_import_obo.png</phrase></textobject></inlinemediaobject> </para><para>Select an Ontology data (OBO file) from <emphasis><emphasis role='strong'>Ontology</emphasis></emphasis> combo box.  If the file is not loaded yet, they are shown in red.  The first three files are Gene Ontology files.  You can load other ontologies, but you need your own annotation file to annotate networks.  </para><para><emphasis role='underline'>Step 3.</emphasis> Start Import </para><para>Once you click <emphasis><emphasis role='strong'>Import</emphasis></emphasis> button, Cytoscape start loading OBO and Gene Association files from the remote sources.  If you choose <emphasis>GO Full</emphasis> it may take a while since it is a large data file. </para><para><emphasis role='underline'>Step 4.</emphasis> </para><para>When Cytoscape finishes to import files, the window will be automatically closed.  All attributes mapped by this function have prefix <emphasis>annotation</emphasis> and looks like this: <emphasis>annotation</emphasis>.[attribute_name].  All ontologies will be added to the end of branch <emphasis><emphasis role='strong'>Ontology DAGs</emphasis></emphasis>.  </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_tree.png'/></imageobject><textobject><phrase>attachment:ontology_tree.png</phrase></textobject></inlinemediaobject> </para><para>Ontology DAGs have some attributes associated with the terms.  All attributes associated with ontology terms have prefix <emphasis><emphasis role='strong'>ontology.</emphasis></emphasis>  They have at least one attribute, <emphasis>ontology.name</emphasis>.  For more informations about detail of attributes for ontology DAGs, please read <ulink url='http://www.geneontology.org/GO.format.obo-1_2.shtml'>OBO specification document</ulink>. </para><itemizedlist><listitem>Note: Cytoscape supports both OBO format version 1.0 and 1.2. </listitem></itemizedlist><para/></section></section><section><title>Custom Annotation Files for Ontologies Other than GO (for Advanced Users)</title><para><emphasis>Ontology and Annotation Import</emphasis> function is designed to import general ontology and annotation files.  Internally, mapping ontology terms onto existing networks is same as joining three data tables in Cytoscape.  An Ontology DAG, an annotation file, and networks are used in this process (see the example below). </para><para><emphasis role='underline'>Network Data</emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_net_table.png'/></imageobject><textobject><phrase>attachment:ontology_net_table.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='underline'>Ontology Data</emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_obo_table.png'/></imageobject><textobject><phrase>attachment:ontology_obo_table.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='underline'>Annotation Data</emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_ga_table.png'/></imageobject><textobject><phrase>attachment:ontology_ga_table.png</phrase></textobject></inlinemediaobject> </para><para><emphasis role='underline'>Mapping Result</emphasis> </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_mapping_result.png'/></imageobject><textobject><phrase>attachment:ontology_mapping_result.png</phrase></textobject></inlinemediaobject> </para><para>If you want to map ontology terms onto network objects, you need to create a custom annotation file.  The annotation file should contain at least 2 columns: a<emphasis><emphasis role='strong'>primary key</emphasis></emphasis> and an <emphasis><emphasis role='strong'>ontology term ID</emphasis></emphasis>.  <emphasis>Primary key</emphasis> is the value for mapping between annotation file and network.  Usually, node/edge ID is used as primary key, but you may choose any of the available attributes.  <emphasis>Ontology term ID</emphasis> is the key for mapping between the ontology DAG and the annotation file.  Using these data sources, you can annotate network objects in Cytoscape. </para><para>Suppose you have a small network: </para><screen><![CDATA[node_1 pp node_2
node_3 pp node_1
node_2 pp node_3
]]></screen><para>and you want to annotate this network with <emphasis>Ontology A</emphasis>, which is an ontology DAG available in OBO format.  In this case, you need an annotation table file looks like this: </para><screen><![CDATA[node_1  OA_0000232
node_2  OA_0000441
node_3  OA_0000702
]]></screen><para>where <emphasis>OA_***</emphasis> represents an ontology term ID.  This example is a file with the minimum necessary number of columns, however you can include additional columns that will appear as additional node attributes. </para><para>Some ontologies will be used to annotate edges or networks.  For example, <ulink url='http://obo.sourceforge.net/cgi-bin/detail.cgi?psi-mi'>Protein-protein interaction ontology</ulink> is a controlled set of terms for annotating interactions between proteins, so ontology terms should be mapped onto edges (see example below). </para><screen><![CDATA[node_1 (pp) node_2  MI:0445
node_3 (pp) node_1  MI:0046
node_2 (pp) node_3  MI:0346
]]></screen><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_import_custom1.png'/></imageobject><textobject><phrase>attachment:ontology_import_custom1.png</phrase></textobject></inlinemediaobject> </para><para>The basic operation of <emphasis>Ontology and Annotation Import</emphasis> is the same as <emphasis>Attribute Table Import</emphasis>.  The main difference is that you need to specify an additional key for mapping: </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Annotation?action=AttachFile&amp;do=get&amp;target=ontology_import_custom2.png'/></imageobject><textobject><phrase>attachment:ontology_import_custom2.png</phrase></textobject></inlinemediaobject> </para><para>By selecting a column from <emphasis><emphasis role='strong'>Key Column in Annotation File</emphasis></emphasis> combo box,  you can specify the key for mapping between ontology terms and annotation file. </para><itemizedlist><listitem><para>Note: When you load <emphasis>Gene Association</emphasis> files, Cytoscape uses a special loader program designed only for Gene Association files.  Because of this program, all attributes will be named automatically.  Also, ontology IDs will be converted into term names and NCBI taxsonomy ID will be converted into actual species name.  However, for custom annotation files, those processes will not be applied.  All ontology terms will be mapped as term IDs. </para></listitem></itemizedlist></section> </section><section><title>Linkout</title><para><ulink url='/cgi-bin/moin.cgi/LinkOut'>LinkOut</ulink> provides a mechanism to link nodes and edges to external web resources within Cytoscape. Right-clicking on a node or edge in Cytoscape view opens a popup menu with a list of web links. </para><para>The external links are specified in a <code>linkout.props</code> file which is included in the cytoscape.jar file. The defaults include a number of links such as Entrez, SGD, iHOP, Google, as well as a number of species-specific links. In addition to the default links, users can customize the <ulink url='/cgi-bin/moin.cgi/LinkOut'>LinkOut</ulink> menu by adding (or removing) links by editing the linkout properties that can be found in the <emphasis role='underline'>Edit &amp;#8594; Preferences &amp;#8594; Properties...</emphasis> dialog. </para><para>External links are listed as <emphasis>‘key’-‘value’</emphasis> pairs in the <code>linkout.props</code> file where <emphasis>key</emphasis> specifies the name of the link and <emphasis>value</emphasis> is the search URL. The LinkOut menus are organized in a hierarchical structure that is specified in the key. All key terms start with the keyword <code>linkouturl</code>. </para><para>For example, the following entry: <code>linkouturl.yeast.SGD=http://db.yeastgenome.org/cgi-bin/locus.pl?locus\=%ID%</code> </para><para>places the SGD link under the yeast submenu. This link will appear in Cytoscape as: </para><para><inlinemediaobject><imageobject><imagedata fileref='/cgi-bin/moin.cgi/Cytoscape_User_Manual/Linkout?action=AttachFile&amp;do=get&amp;target=Figure1_linkout.png'/></imageobject><textobject><phrase>attachment:Figure1_linkout.png</phrase></textobject></inlinemediaobject> </para><para>In a similar fashion one can added new submenus. </para><para>The <emphasis role='strong'><code>%ID%</code></emphasis> string in the URL is a place-holder for the node label. When the popup menu is generated this marker is substituted with the node label. In the above example the generated SGD link for YIM protein is: <code>http://db.yeastgenome.org/cgi-bin/locus.pl?locus\=YIM1</code>.  If you want to query based on a different attribute you currently need to specify a different Node Label using the <ulink url='/cgi-bin/moin.cgi/VizMapper'>VizMapper</ulink>. </para><para>Currently there is no mechanism to check whether the constructed URL query is correct and if the node label is meaningful. Similarly there is no ID mapping between various identifiers. For example, a link to NCBI Entrez from a network that uses ensembl gene identifiers as node label will produce a link to Entrez using ensembl ID, which results in an incorrect link. It is the users responsibility to ensure that the node label that is used as the search term in the URL link will result in a meaningful link. </para><para><emphasis role='strong'>Adding or Removing links</emphasis>  The default links are defined in a <code>linkout.props</code> file contained in the linkout.jar.  These links are normal java properties and can be editited while running in the <emphasis role='underline'>Edit &amp;#8594; Preferences &amp;#8594; Properties...</emphasis>  dialog.  New links can be defined this way as well.  New links can be defined at startup in a separate file and loaded from the command line, either by specifying a file containing the links <code>cytoscape.sh -P new_linout.props</code> or as individual properties <code>cytoscape.sh -P linkouturl.yeast.SGD=http://db.yeastgenome.org/cgi-bin/locus.pl?locus\=%ID%</code>. Any links defined on the command line will supersede the default links. </para><para>To remove a link from the menu simply delete the property from the <emphasis role='underline'>Edit &amp;#8594; Preferences &amp;#8594; Properties...</emphasis>  dialog. </para> </section><itemizedlist><listitem><anchor id='acknowledgements'/> </listitem></itemizedlist><para/><section><title>Acknowledgements</title><para>Cytoscape is built with a number of open source 3rd party Java libraries. The Cytoscape team gratefully acknowledges the following libraries: </para><itemizedlist><listitem><para>The Colt Distribution: Open Source Libraries for High Performance Scientific and Technical Computing in Java. Information is available at: <ulink url='http://hoschek.home.cern.ch/hoschek/colt/'>http://hoschek.home.cern.ch/hoschek/colt/</ulink>. </para></listitem><listitem><para>Graph INterface librarY a.k.a. GINY. Information is available at: <ulink url='http://csbi.sourceforge.net/'>http://csbi.sourceforge.net/</ulink>. </para></listitem><listitem><para>JDOM. Information is available at: <ulink url='http://www.jdom.org'>http://www.jdom.org</ulink>. </para></listitem><listitem><para>JUnit. Information is available at: <ulink url='http://junit.org'>http://junit.org</ulink>. </para></listitem><listitem><para>JGoodies Looks. Information is available at: <ulink url='http://www.jgoodies.com/freeware/looks/index.html'>http://www.jgoodies.com/freeware/looks/index.html</ulink>. </para></listitem><listitem><para>Piccolo. Information is available at: <ulink url='http://www.cs.umd.edu/hcil/jazz/'>http://www.cs.umd.edu/hcil/jazz/</ulink>. </para></listitem><listitem><para>Type-Specific Collections Library, from Sosnoski Software Solutions, Inc. Information is available at: <ulink url='http://www.sosnoski.com/opensrc/tclib/'>http://www.sosnoski.com/opensrc/tclib/</ulink>. </para></listitem><listitem><para>Xerces Java XML parser. Information is available at: <ulink url='http://xml.apache.org/xerces-j/'>http://xml.apache.org/xerces-j/</ulink>. </para></listitem><listitem><para>CLI command line parser. Information is available at: <ulink url='http://jakarta.apache.org/commons/cli/'>http://jakarta.apache.org/commons/cli/</ulink>. </para></listitem><listitem><para>FreeHEP library. Information is available at: <ulink url='http://java.freehep.org'>http://java.freehep.org</ulink>. </para></listitem></itemizedlist><para>This product includes software developed by the Apache Software Foundation (<ulink url='http://www.apache.org/'>http://www.apache.org/</ulink>). </para><para>This product includes software developed by the JDOM Project (<ulink url='http://www.jdom.org/'>http://www.jdom.org/</ulink>). </para><para>One-step Installation of the Cytoscape software is accomplished using the <emphasis><ulink url='/cgi-bin/moin.cgi/InstallAnywhere'>InstallAnywhere</ulink> </emphasis>product from ZeroG Software, Inc. (<ulink url='http://zerog.com'>http://zerog.com</ulink>) </para> </section><section><title>Appendix A: Old Annotation Server Format</title><para>Handler for the following format still exist in Cytoscape as a legacy code, however we <emphasis><emphasis role='strong'>strongly</emphasis></emphasis> recommend using the new formats (OBO + Gene Association) described in the previous section, since they are easier to download directly from the Gene Ontology project and use directly.  Currently, users have no access to import UI for this old format.  </para><para/><section><title>Building your own annotation files</title><para>The annotation server requires that the gene annotations, and associated ontology on controlled vocabulary terms, follow a simple format. This simple format was chosen because it is efficient to parse and easy to use. </para><para>The flat file formats are explained below: </para><para/><section><title>The Ontology Format</title><para>By example (the Gene Ontology - GO): </para><para></para><screen><![CDATA[(curator=GO) (type=all)
0003673 = Gene_Ontology
0003674 = molecular_function [partof: 0003673 ]
0008435 = anticoagulant [isa: 0003674 ]
0016172 = antifreeze [isa: 0003674 ]
0016173 = ice nucleation inhibitor [isa: 0016172 ]
0016209 = antioxidant [isa: 0003674 ]
0045174 = glutathione dehydrogenase (ascorbate) [isa: 0009491 0015038 0016209 0016672 ]
0004362 = glutathione reductase (NADPH) [isa: 0015038 0015933 0016209 0016654 ]
0017019 = myosin phosphatase catalyst [partof: 0017018 ]
...
]]></screen><para>A second example (KEGG pathway ontology): </para><para></para><screen><![CDATA[(curator=KEGG) (type=Metabolic Pathways)
90001 = Metabolism
80001 = Carbohydrate Metabolism [isa: 90001 ]
80003 = Lipid Metabolism [isa: 90001 ]
80002 = Energy Metabolism [isa: 90001 ]
80004 = Nucleotide Metabolism [isa: 90001 ]
80005 = Amino Acid Metabolism [isa: 90001 ]
80006 = Metabolism of Other Amino Acids [isa: 90001 ]
80007 = Metabolism of Complex Carbohydrates [isa: 90001 ]
...
]]></screen><para>The format has three required features: </para><orderedlist numeration='arabic'><listitem><para>The first line contains two parenthesized assignments, for <emphasis>curator</emphasis> and <emphasis>type</emphasis>. In the GO example above, the ontology file (which is created from the XML GO provides) nests all three specific ontologies (molecular function, biological process, cellular component) below the 'root' ontology, named 'Gene_Ontology'. </para></listitem></orderedlist><para></para><screen><![CDATA[(type=all)
]]></screen><para>tells you that all three ontologies are included in that file. </para><orderedlist numeration='arabic'><listitem>Following the mandatory title line, there are one or more category lines, each with the form: </listitem></orderedlist><para></para><screen><![CDATA[number0 = name [isa:|partof: number1 number2 ...]
]]></screen><para>'isa' and 'partof' are terms used in GO; they describe the relation between parent and child terms in the ontology hierarchy. </para><orderedlist numeration='arabic'><listitem><para>The trailing blank before each left square bracket is <emphasis>not</emphasis> required; it is an artifact of the python script that creates these files. </para></listitem></orderedlist><para/></section><section><title>The Annotation Format</title><para>By example (from the GO biological process annotation file): </para><para></para><screen><![CDATA[(species=Saccharomyces cerevisiae) (type=Biological Process) (curator=GO)
YMR056C = 0006854
YBR085W = 0006854
YJR155W = 0006081
...
]]></screen><para>and from KEGG: </para><para></para><screen><![CDATA[(species=Mycobacterium tuberculosis) (type=Metabolic Pathways) (curator=KEGG)
RV0761C = 10
RV0761C = 71
RV0761C = 120
RV0761C = 350
RV0761C = 561
RV1862 = 10
...
]]></screen><para>The format has these required features: </para><orderedlist numeration='arabic'><listitem><para>The first line contains three parenthesized assignments, for <emphasis>species</emphasis>, <emphasis>type</emphasis> and <emphasis>curator</emphasis>. In the example just above, the annotation file (which we create for budding yeast from the flat text file maintained by SGD for the Gene Ontology project, and available both at their web site and at GO's) shows three yeast ORFs annotated for biological process, with respect to GO, described (further above). </para></listitem><listitem>Following the mandatory title line, there are one or more annotation lines, each with the form: </listitem></orderedlist><para></para><screen><![CDATA[canonicalName = ontologyTermID
]]></screen><orderedlist numeration='arabic'><listitem><para>Once loaded, this annotation (along with the accompanying ontology) can be assigned to nodes in a Cytoscape network. <emphasis role='strong'>For this to work, the species type of the node must exactly match the species named on the first line of the annotation file. The canonicalName of your node must exactly match the canonicalName present in the annotation file.</emphasis> If you don’t see the expected results when using this feature of Cytoscape, check this again, as getting either of these wrong is a common mistake. </para></listitem></orderedlist><para/></section></section><section><title>Load Data into Cytoscape</title><para>The easiest way to make annotations available to Cytoscape is by loading annotations into the Cytoscape annotation server. This is the default behavior for the official release of Cytoscape. </para><para/><section><title>The Annotation Manifest</title><para>You must first create a text file to specify the files you want Cytoscape to load. Here is an example, from a file which (for convenience) we usually call <emphasis role='strong'>“manifest”</emphasis> </para><para></para><screen><![CDATA[ontology=goOntology.txt
annotation=yeastBiologicalProcess.txt
annotation=yeastMolecularFunction.txt
annotation=yeastCellularComponent.txt
]]></screen><para>Use the Cytoscape <emphasis><emphasis role='strong'>-b</emphasis></emphasis> command line argument to specify the annotation manifest file to read (e.g. -b manifest). Please note that the <emphasis role='strong'>-s</emphasis> switch, which sets the default species for your data is required to exactly match the species named in any annotation file you wish to use. </para><para/></section></section><section><title>Getting and Reformatting GO Data</title><para>The Gene Ontology (GO) project is a valuable source of annotation for the genes of many organisms. In this section we will explain how to: </para><orderedlist numeration='arabic'><listitem>Obtain the GO ontology file </listitem><listitem>Reformat it into the simpler flat file Cytoscape uses </listitem><listitem>Obtain an annotation file (we illustrate with yeast and human annotation) </listitem><listitem>Reformat the annotation files into the simple Cytoscape format </listitem></orderedlist><para><emphasis role='strong'>Obtain the GO ontology file</emphasis> Go to the GO XML FTP (<ulink url='ftp://ftp.geneontology.org/pub/go/xml/'>ftp://ftp.geneontology.org/pub/go/xml/</ulink>) page. Download the latest <emphasis role='strong'>go-YYYYMM-termdb.xml.gz</emphasis> file. </para><para><emphasis role='strong'>Reformat GO XML ontology file into a flat file</emphasis> </para><para></para><screen><![CDATA[ gunzip go-YYYYMM-termdb.xml.gz
 python parseGoTermsToFlatFile.py go-YYYYMM-termdb.xml > goOntology.txt
]]></screen><para>(See below for Python script listing) </para><para><emphasis role='strong'>Obtain the 'association' file for your organism</emphasis> GO maintains a list of association files for many organisms; these files associate genes with GO terms. The next step is to get the file for the organism/s you are interested in, and parse it into the form Cytoscape needs. A list of files may be seen at <ulink url='http://www.geneontology.org/GO.current.annotations.shtml'>http://www.geneontology.org/GO.current.annotations.shtml</ulink>. The rightmost column contains links to tab-delimited files of gene associations, by species. Choose the species you are interested in, and click 'Download'. </para><para>Let's use <emphasis role='strong'>'GO Annotations @ EBI</emphasis> Human' as an example. After you have downloaded and saved the file, look at the first few lines: </para><para></para><screen><![CDATA[SPTR    O00115  DRN2_HUMAN              GO:0003677      PUBMED:9714827  TAS             F       Deoxyribonuclease II precursor  IPI00010348     protein taxon:9606              SPTR
SPTR    O00115  DRN2_HUMAN              GO:0004519      GOA:spkw        IEA             F       Deoxyribonuclease II precursor  IPI00010348     protein taxon:9606        20020425      SPTR
SPTR    O00115  DRN2_HUMAN              GO:0004531      PUBMED:9714827  TAS             F       Deoxyribonuclease II precursor  IPI00010348     protein taxon:9606              SPTR
...
]]></screen><para>Note that line wrapping has occurred here, so each line of the actual file is wrapped to two lines. The goal is to create from these lines the following lines: </para><para></para><screen><![CDATA[(species=Homo sapiens) (type=Molecular Function) (curator=GO)
IPI00010348 = 0003677
IPI00010348 = 0004519
IPI00010348 = 0004531
...
]]></screen><para>or </para><para></para><screen><![CDATA[(species=Homo sapiens) (type=Biological Process) (curator=GO)
NP_001366 = 0006259
NP_001366 = 0006915
NP_005289 = 0007186
NP_647593 = 0006899
...
]]></screen><para>The first sample contains molecular function annotation for proteins, and each protein is identified by its IPI number. IPI is the International Protein Index, which maintains cross references to the main databases for human, mouse and rat proteomes.  The second sample contains biological process annotation, and each protein is identified by its NP (<ulink url='/cgi-bin/moin.cgi/RefSeq'>RefSeq</ulink>) number.  These two naming systems, IPI and <ulink url='/cgi-bin/moin.cgi/RefSeq'>RefSeq</ulink>, are two of many that you can use for canonical names when you run Cytoscape. For budding yeast, it is much easier: the yeast community always uses standard ORF names, and so Cytoscape uses these as canonical names. For human proteins and genes, there is no such single simple standard. See section <emphasis>5. Building and Storing Interaction Networks</emphasis> for more information. </para><para>The solution (for those working with human genes or proteins) is, once you have downloaded the annotations file, to: </para><orderedlist numeration='arabic'><listitem>Decide which naming system you want to use. </listitem><listitem><para>Download <ulink url='ftp://ftp.ebi.ac.uk/pub/databases/GO/goa/HUMAN/xrefs.goa'>ftp://ftp.ebi.ac.uk/pub/databases/GO/goa/HUMAN/xrefs.goa</ulink>. This cross-reference file, when used strategically, allows you to create Cytoscape-compatible annotation files in which the canonical name is the one most meaningful to you. </para></listitem><listitem><para>Examine <emphasis><emphasis role='strong'>xrefs.goa</emphasis></emphasis> to figure out which column contains the names you wish to use. </para></listitem><listitem>Make a very slight modification to the python script described below, and then </listitem><listitem>Run that script, supplying both xrefs.goa and that annotation file as arguments. </listitem></orderedlist><para>Here are a few sample lines from <emphasis><emphasis role='strong'>xrefs.goa</emphasis></emphasis>: </para><para></para><screen><![CDATA[SP      O00115  IPI00010348             ENSP00000222219;        NP_001366;              BAA28623;AAC77366;AAC35751;AAC39852;BAB55598;AAB51172;AAH10419; 2960,DNASE2     1777,DNASE2
SP      O00116  IPI00010349             ENSP00000324567;ENSP00000264167;        NP_003650;              CAA70591;       327,AGPS        8540,AGPS
SP      O00124  IPI00010353             ENSP00000265616;ENSP00000322580;        NP_005662;              BAA18958;BAA18959;AAH20694;             7993,D8S2298E
...
]]></screen><para>Note that line wrapping has occurred here – each line in this example starts with the letters SP. See the README file for more information (<ulink url='ftp://ftp.ebi.ac.uk/pub/databases/GO/goa/HUMAN/README'>ftp://ftp.ebi.ac.uk/pub/databases/GO/goa/HUMAN/README</ulink>) </para><para>Finally, run the script to create your three annotation files for human proteins: </para><itemizedlist><listitem><para><emphasis role='strong'>bioproc.anno</emphasis> (GO biological process annotation) </para></listitem><listitem><para><emphasis role='strong'>molfunc.anno</emphasis> (GO molecular function annotation) </para></listitem><listitem><para><emphasis role='strong'>cellcomp.anno</emphasis> (GO cellular component annotation) </para></listitem></itemizedlist><para>using the supplied python script. It may be necessary to modify this script slightly if <ulink url='/cgi-bin/moin.cgi/RefSeq'>RefSeq</ulink> identifiers are not used as canonical names or if you are using a more recent version of Python. </para><para></para><screen><![CDATA[python parseAssignmentsToFlatFileFromGoaProject.py gene_association.goa_human xrefs.goa
]]></screen><para>(See below for Python script listing) </para><para><emphasis role='strong'>Python script examples:</emphasis> These scripts, described above require Python version 2.2 or later. </para><para>Script 1 - parseGoTermsToFlatFile.py </para><para></para><screen><![CDATA[
# parseGoTermToFlatFile.py:  translate a GO XML ontology file into a simpler
#  Cytoscape flat file
#-----------------------------------------------------------------------------------
# RCS: $Revision: 1.3 $   $Date: 2003/05/18 00:38:43 $
#-----------------------------------------------------------------------------------
import re, pre, sys
#-----------------------------------------------------------------------------------
def flatFilePrint (id, name, isaIDs, partofIDs):
  isa = ''
  if (len (isaIDs) > 0):
    isa = '[isa: '
    for isaID in isaIDs:
      isa += isaID
      isa += ' '
    isa += ']'
  partof = ''
  if (len (partofIDs) > 0):
    partof = '[partof: '
    for partofID in partofIDs:
      partof += partofID
      partof += ' '
    partof += ']'
  result = '~np~%~/np~s = ~np~%~/np~s ~np~%~/np~s ~np~%~/np~s' ~np~%~/np~ (id, name, isa, partof)
  result = result.strip ()
  if (result == 'isa = isa' or result == 'partof = partof'):
    print >> sys.stderr, 'meaningless term: ~np~%~/np~s' ~np~%~/np~ result
  else:
    print result
#-----------------------------------------------------------------------------------
if (len (sys.argv) != 2):
  print 'usage:  ~np~%~/np~s <someFile.xml>' ~np~%~/np~ sys.argv [0]
  sys.exit ();
inputFilename = sys.argv [1];
print >> sys.stderr,  'reading ~np~%~/np~s...' ~np~%~/np~ inputFilename
text = open (inputFilename).read ()
print >> sys.stderr,  'read ~np~%~/np~d characters' ~np~%~/np~ len (text)
regex = '<go:term .*?>(.*?)</go:term>';
cregex = pre.compile (regex, re.DOTALL)   # . matches newlines
m = pre.findall (cregex, text)
print >> sys.stderr, 'number of go terms: ~np~%~/np~d' ~np~%~/np~ len (m)
regex2 = '<go:accession>GO:(.*?)</go:accession>.*?<go:name>(.*?)</go:name>'
cregex2 = re.compile (regex2, re.DOTALL)
regex3 = '<go:isa\s*rdf:resource="http://www.geneontology.org/go#GO:(.*?)"\s*/>'
cregex3 = re.compile (regex3, re.DOTALL)
regex4 = '<go:part-of\s*rdf:resource="http://www.geneontology.org/go#GO:(.*?)"\s*/>'
cregex4 = re.compile (regex4, re.DOTALL)
goodElements = 0
badElements = 0
print '(curator=GO) (type=all)'
for term in m:
  m2 = re.search (cregex2, term)
  if (m2):
    goodElements += 1;
    id = m2.group (1)
    name = m2.group (2)
    isaIDs = []
    m3 = re.findall (cregex3, term);
    for ref in m3:
      isaIDs.append (ref)
    m4 = re.findall (cregex4, term);
    partofIDs = []
    for ref in m4:
      partofIDs.append (ref)
    flatFilePrint (id, name, isaIDs, partofIDs)
  else:
    badElements += 1;
    print >> sys.stderr, 'no match to m2...'
    print >> sys.stderr, "---------------\n~np~%~/np~s\n------------------" ~np~%~/np~ term
print >> sys.stderr,  'goodElements ~np~%~/np~d' ~np~%~/np~ goodElements
print >> sys.stderr, 'badElements ~np~%~/np~d' ~np~%~/np~ badElements
#--------------------------------------
]]></screen><para>Script 1 - parseAssignmentsToFlatFileFromGoaProject.py </para><para></para><screen><![CDATA[
import sys
#-----------------------------------------------------------------------------------
def fixCanonicalName (rawName):
# for instance, trim 'YBR085W|ANC3' to 'YBR085W'
  bar = rawName.find ('|')
  if (bar < 0):
    return rawName
  return rawName [:bar]
#-----------------------------------------------------------------------------------
def fixGoID (rawID):
  bar = rawID.find (':') + 1
  return rawID [bar:]
#-----------------------------------------------------------------------------------
def readGoaXrefFile (filename):
  lines = open (filename).read().split ('\n')
  result = {}
  for line in lines:
    if (len (line) < 10):
      continue
    tokens = line.split ('\t')
    ipi = tokens [2]
    np = tokens [5]
    semicolon = np.find (';')
    if (semicolon >= 0):
      np = np [:semicolon]
    if (len (ipi) > 0 and len (np) > 0):
      result [ipi] = np
  return result
#-----------------------------------------------------------------------------------
if (len (sys.argv) != 3):
  print 'error!  parse   <gene_associations file from GO> <goa xrefs file> '
  sys.exit ()
associationFilename = sys.argv [1];
xrefsFilename = sys.argv [2]
species = 'Homo sapiens'
ipiToNPHash = readGoaXrefFile (xrefsFilename)
tester = 'IPI00099416'
print 'hash size: ~np~%~/np~d' ~np~%~/np~ len (ipiToNPHash)
print 'test map: ~np~%~/np~s -> NP_054861: ~np~%~/np~s ' ~np~%~/np~ (tester, ipiToNPHash [tester])
bioproc = open ('bioproc.txt', 'w')
molfunc = open ('molfunc.txt', 'w')
cellcomp = open ('cellcomp.txt', 'w')
bioproc.write ('(species=~np~%~/np~s) (type=Biological Process) (curator=GO)\n' ~np~%~/np~ species)
molfunc.write ('(species=~np~%~/np~s) (type=Molecular Function) (curator=GO)\n' ~np~%~/np~ species);
cellcomp.write ('(species=~np~%~/np~s) (type=Cellular Component) (curator=GO)\n' ~np~%~/np~ species);
lines=open(associationFilename).read().split('\n')
sys.stderr.write ('found ~np~%~/np~d lines\n' ~np~%~/np~ len (lines))

for line in lines:
  if (line.find ('!') == 0 or len (line) < 2):
    continue
  tokens = line.split ('\t')
  goOntology = tokens [8]
  goIDraw = tokens [4]
  goID = goIDraw.split (':')[1]
  ipiName = fixCanonicalName (tokens [10])
  if (len (ipiName) < 1):
    continue


  if (not ipiToNPHash.has_key (ipiName)):
    continue
  refseqName = ipiToNPHash [ipiName]
  printName = refseqName
  #printName = ipiName
  if (ipiName == tester):
    print '~np~%~/np~s (~np~%~/np~s) has go term ~np~%~/np~s' ~np~%~/np~ (tester, printName, goID)
  if (goOntology == 'C'):
    cellcomp.write ('~np~%~/np~s = ~np~%~/np~s\n' ~np~%~/np~ (printName, goID))
  elif (goOntology == 'P'):
    bioproc.write ('~np~%~/np~s = ~np~%~/np~s\n' ~np~%~/np~ (printName, goID))
  elif (goOntology == 'F'):
    molfunc.write ('~np~%~/np~s = ~np~%~/np~s\n' ~np~%~/np~ (printName, goID))
#-----------------------------------------------------------------------------------
]]></screen></section> </section><section><title>Appendix B: GNU Lesser General Public License</title><para>GNU LESSER GENERAL PUBLIC LICENSE </para><itemizedlist><listitem>Version 2.1, February 1999 Copyright (C) 1991, 1999 Free Software Foundation, Inc. 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. [This is the first released version of the Lesser GPL.  It also counts as the successor of the GNU Library Public License, version 2, hence the version number 2.1.] </listitem></itemizedlist><para>Preamble </para><para>The licenses for most software are designed to take away your freedom to share and change it.  By contrast, the GNU General Public Licenses are intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. </para><para>This license, the Lesser General Public License, applies to some specially designated software packages--typically libraries--of the Free Software Foundation and other authors who decide to use it.  You can use it too, but we suggest you first think carefully about whether this license or the ordinary General Public License is the better strategy to use in any particular case, based on the explanations below. </para><para>When we speak of free software, we are referring to freedom of use, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish); that you receive source code or can get it if you want it; that you can change the software and use pieces of it in new free programs; and that you are informed that you can do these things. </para><para>To protect your rights, we need to make restrictions that forbid distributors to deny you these rights or to ask you to surrender these rights.  These restrictions translate to certain responsibilities for you if you distribute copies of the library or if you modify it. </para><para>For example, if you distribute copies of the library, whether gratis or for a fee, you must give the recipients all the rights that we gave you.  You must make sure that they, too, receive or can get the source code.  If you link other code with the library, you must provide complete object files to the recipients, so that they can relink them with the library after making changes to the library and recompiling it.  And you must show them these terms so they know their rights. </para><para>We protect your rights with a two-step method: (1) we copyright the library, and (2) we offer you this license, which gives you legal permission to copy, distribute and/or modify the library. </para><para>To protect each distributor, we want to make it very clear that there is no warranty for the free library.  Also, if the library is modified by someone else and passed on, the recipients should know that what they have is not the original version, so that the original author's reputation will not be affected by problems that might be introduced by others. </para><para>Finally, software patents pose a constant threat to the existence of any free program.  We wish to make sure that a company cannot effectively restrict the users of a free program by obtaining a restrictive license from a patent holder.  Therefore, we insist that any patent license obtained for a version of the library must be consistent with the full freedom of use specified in this license. </para><para>Most GNU software, including some libraries, is covered by the ordinary GNU General Public License.  This license, the GNU Lesser General Public License, applies to certain designated libraries, and is quite different from the ordinary General Public License.  We use this license for certain libraries in order to permit linking those libraries into non-free programs. </para><para>When a program is linked with a library, whether statically or using a shared library, the combination of the two is legally speaking a combined work, a derivative of the original library.  The ordinary General Public License therefore permits such linking only if the entire combination fits its criteria of freedom.  The Lesser General  Public License permits more lax criteria for linking other code with  the library.    We call this license the "Lesser" General Public License  because it does Less to protect the user's freedom than the ordinary  General Public License.  It also provides other free software  developers Less of an advantage over competing non-free programs.   These disadvantages are the reason we use the ordinary General Public  License for many libraries.  However, the Lesser license provides  advantages in certain special circumstances.    For example, on rare  occasions, there may be a special need to encourage the widest possible  use of a certain library, so that it becomes a de-facto standard.  To  achieve this, non-free programs must be allowed to use the library.   A more frequent case is that a free library does the same job as widely  used non-free libraries.  In this case, there is little to gain by limiting the  free library to free software only, so we use the Lesser General Public  License.    In other cases, permission to use a particular library in  non-free programs enables a greater number of people to use a large body  of free software.  For example, permission to use the GNU C Library in  non-free programs enables many more people to use the whole GNU  operating system, as well as its variant, the GNU/Linux operating system.     Although the Lesser General Public License is Less protective of the users'  freedom, it does ensure that the user of a program that is linked with the  Library has the freedom and the wherewithal to run that program using a  modified version of the Library.    The precise terms and conditions for  copying, distribution and modification follow.  Pay close attention to the  difference between a "work based on the library" and a "work that uses  the library".  The former contains code derived from the library, whereas  the latter must be combined with the library in order to run.      </para><para>GNU LESSER GENERAL PUBLIC LICENSE    TERMS AND  CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION     </para><para>0. This License Agreement applies to any software library or other program  which contains a notice placed by the copyright holder or other authorized  party saying it may be distributed under the terms of this Lesser General  Public License (also called "this License"). Each licensee is addressed  as "you".    A "library" means a collection of software functions and/or  data prepared so as to be conveniently linked with application programs  (which use some of those functions and data) to form executables.     The "Library", below, refers to any such software library or work  which has been distributed under these terms.  A "work based on the  Library" means either the Library or any derivative work under copyright  law: that is to say, a work containing the Library or a portion of it, either  verbatim or with modifications and/or translated straightforwardly into  another language.  (Hereinafter, translation is included without limitation  in the term "modification".)    "Source code" for a work means the preferred  form of the work for making modifications to it.  For a library, complete  source code means all the source code for all modules it contains, plus any  associated interface definition files, plus the scripts used to control  compilation and installation of the library.    Activities other than copying,  distribution and modification are not covered by this License; they are  outside its scope.  The act of running a program using the Library is not  restricted, and output from such a program is covered only if its contents  constitute a work based on the Library (independent of the use of the  Library in a tool for writing it).  Whether that is true depends on what  the Library does and what the program that uses the Library does.       </para><para>1. You may copy and distribute verbatim copies of the Library's complete  source code as you receive it, in any medium, provided that you  conspicuously and appropriately publish on each copy an appropriate  copyright notice and disclaimer of warranty; keep intact all the notices  that refer to this License and to the absence of any warranty; and distribute a copy of this License along with the Library. </para><para>You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. </para><para>2. You may modify your copy or copies of the Library or any portion of it, thus forming a work based on the Library, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: </para><para>a) The modified work must itself be a software library. </para><para>b) You must cause the files modified to carry prominent notices stating that you changed the files and the date of any change. </para><para>c) You must cause the whole of the work to be licensed at no charge to all third parties under the terms of this License. </para><para>d) If a facility in the modified Library refers to a function or a table of data to be supplied by an application program that uses the facility, other than as an argument passed when the facility is invoked, then you must make a good faith effort to ensure that, in the event an application does not supply such function or table, the facility still operates, and performs whatever part of its purpose remains meaningful. (For example, a function in a library to compute square roots has a purpose that is entirely well-defined independent of the application.  Therefore, Subsection 2d requires that any application-supplied function or table used by this function must be optional: if the application does not supply it, the square root function must still compute square roots.) </para><para>These requirements apply to the modified work as a whole.  If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works.  But when you distribute the same sections as part of a whole which is a work based on the Library, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. </para><para>Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Library. In addition, mere aggregation of another work not based on the Library with the Library (or with a work based on the Library) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. </para><para>3. You may opt to apply the terms of the ordinary GNU General Public License instead of this License to a given copy of the Library.  To do this, you must alter all the notices that refer to this License, so that they refer to the ordinary GNU General Public License, version 2, instead of to this License.  (If a newer version than version 2 of the ordinary GNU General Public License has appeared, then you can specify that version instead if you wish.)  Do not make any other change in these notices. </para><para>Once this change is made in a given copy, it is irreversible for that copy, so the ordinary GNU General Public License applies to all subsequent copies and derivative works made from that copy. </para><para>This option is useful when you wish to copy part of the code of the Library into a program that is not a library. </para><para>4. You may copy and distribute the Library (or a portion or derivative of it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange. </para><para>If distribution of object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place satisfies the requirement to distribute the source code, even though third parties are not compelled to copy the source along with the object code. </para><para>5. A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a "work that uses the Library".  Such a work, in isolation, is not a derivative work of the Library, and therefore falls outside the scope of this License. </para><para>However, linking a "work that uses the Library" with the Library creates an executable that is a derivative of the Library (because it contains portions of the Library), rather than a "work that uses the library".  The executable is therefore covered by this License. Section 6 states terms for distribution of such executables. </para><para>When a "work that uses the Library" uses material from a header file that is part of the Library, the object code for the work may be a derivative work of the Library even though the source code is not. Whether this is true is especially significant if the work can be linked without the Library, or if the work is itself a library.  The threshold for this to be true is not precisely defined by law. </para><para>If such an object file uses only numerical parameters, data structure layouts and accessors, and small macros and small inline functions (ten lines or less in length), then the use of the object file is unrestricted, regardless of whether it is legally a derivative work.  (Executables containing this object code plus portions of the Library will still fall under Section 6.) </para><para>Otherwise, if the work is a derivative of the Library, you may distribute the object code for the work under the terms of Section 6. Any executables containing that work also fall under Section 6, whether or not they are linked directly with the Library itself. </para><para>6. As an exception to the Sections above, you may also combine or link a "work that uses the Library" with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice, provided that the terms permit modification of the work for the customer's own use and reverse engineering for debugging such modifications. </para><para>You must give prominent notice with each copy of the work that the Library is used in it and that the Library and its use are covered by this License.  You must supply a copy of this License.  If the work during execution displays copyright notices, you must include the copyright notice for the Library among them, as well as a reference directing the user to the copy of this License.  Also, you must do one of these things: </para><para>a) Accompany the work with the complete corresponding machine-readable source code for the Library including whatever changes were used in the work (which must be distributed under Sections 1 and 2 above); and, if the work is an executable linked with the Library, with the complete machine-readable "work that uses the Library", as object code and/or source code, so that the user can modify the Library and then relink to produce a modified executable containing the modified Library.  (It is understood that the user who changes the contents of definitions files in the Library will not necessarily be able to recompile the application to use the modified definitions.) </para><para>b) Use a suitable shared library mechanism for linking with the Library.  A suitable mechanism is one that (1) uses at run time a copy of the library already present on the user's computer system, rather than copying library functions into the executable, and (2) will operate properly with a modified version of the library, if the user installs one, as long as the modified version is interface-compatible with the version that the work was made with. </para><para>c) Accompany the work with a written offer, valid for at least three years, to give the same user the materials specified in Subsection 6a, above, for a charge no more than the cost of performing this distribution. </para><para>d) If distribution of the work is made by offering access to copy from a designated place, offer equivalent access to copy the above specified materials from the same place. </para><para>e) Verify that the user has already received a copy of these materials or that you have already sent this user a copy. </para><para>For an executable, the required form of the "work that uses the Library" must include any data and utility programs needed for reproducing the executable from it.  However, as a special exception, the materials to be distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. </para><para>It may happen that this requirement contradicts the license restrictions of other proprietary libraries that do not normally accompany the operating system.  Such a contradiction means you cannot use both them and the Library together in an executable that you distribute. </para><para>7. You may place library facilities that are a work based on the Library side-by-side in a single library together with other library facilities not covered by this License, and distribute such a combined library, provided that the separate distribution of the work based on the Library and of the other library facilities is otherwise permitted, and provided that you do these two things: </para><para>a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities.  This must be distributed under the terms of the Sections above. </para><para>b) Give prominent notice with the combined library of the fact that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work. </para><para>8. You may not copy, modify, sublicense, link with, or distribute the Library except as expressly provided under this License.  Any attempt otherwise to copy, modify, sublicense, link with, or distribute the Library is void, and will automatically terminate your rights under this License.  However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. </para><para>9. You are not required to accept this License, since you have not signed it.  However, nothing else grants you permission to modify or distribute the Library or its derivative works.  These actions are prohibited by law if you do not accept this License.  Therefore, by modifying or distributing the Library (or any work based on the Library), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Library or works based on it. </para><para>10. Each time you redistribute the Library (or any work based on the Library), the recipient automatically receives a license from the original licensor to copy, distribute, link with or modify the Library subject to these terms and conditions.  You may not impose any further restrictions on the recipients' exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties with this License. </para><para>11. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Library at all.  For example, if a patent license would not permit royalty-free redistribution of the Library by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Library. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply, and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system which is implemented by public license practices.  Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. </para><para>This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. </para><para>12. If the distribution and/or use of the Library is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Library under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded.  In such case, this License incorporates the limitation as if written in the body of this License. </para><para>13. The Free Software Foundation may publish revised and/or new versions of the Lesser General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number.  If the Library specifies a version number of this License which applies to it and "any later version", you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation.  If the Library does not specify a license version number, you may choose any version ever published by the Free Software Foundation. </para><para>14. If you wish to incorporate parts of the Library into other free programs whose distribution conditions are incompatible with these, write to the author to ask for permission.  For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this.  Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. </para><para>NO WARRANTY </para><para>15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. </para><para>16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. </para><para>END OF TERMS AND CONDITIONS </para> </section></article>