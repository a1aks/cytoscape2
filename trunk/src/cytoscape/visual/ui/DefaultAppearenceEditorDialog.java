package cytoscape.visual.ui;

import cytoscape.Cytoscape;

import cytoscape.visual.VisualMappingManager;
import cytoscape.visual.VisualPropertyType;

import cytoscape.visual.ui.icon.NodeFullDetailView;
import cytoscape.visual.ui.icon.VisualPropertyIcon;

import org.jdesktop.swingx.border.DropShadowBorder;
import org.jdesktop.swingx.decorator.HighlighterPipeline;
import org.jdesktop.swingx.decorator.RolloverHighlighter;
import org.jdesktop.swingx.painter.gradient.BasicGradientPainter;
import org.jdesktop.swingx.painter.gradient.LinearGradientPainter;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.awt.geom.Point2D;

import java.util.List;

import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.ListCellRenderer;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;


/**
 * DOCUMENT ME!
 *
 * @author $author$
 */
public abstract class DefaultAppearenceEditorDialog extends JDialog {
    private VisualPropertyType[] orderedList;
    protected VisualMappingManager vmm = Cytoscape.getVisualMappingManager();

    /** Creates new form DefaultAppearenceDialog */
    protected DefaultAppearenceEditorDialog(VisualPropertyType[] typeList,
        Frame parent) {
        super(parent, true);
        this.orderedList = typeList;
        initComponents();

        this.addComponentListener(
            new ComponentListener() {
                public void componentHidden(ComponentEvent arg0) {
                    // TODO Auto-generated method stub
                }

                public void componentMoved(ComponentEvent e) {
                    // TODO Auto-generated method stub
                }

                public void componentResized(ComponentEvent e) {
                    // TODO Auto-generated method stub
                    jXPanel2.createView();
                    System.out.println("+++++++++++++ Resized!");
                }

                public void componentShown(ComponentEvent e) {
                    // TODO Auto-generated method stub
                }
            });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">
    private void initComponents() {
        jXPanel1 = new org.jdesktop.swingx.JXPanel();

        jXTitledPanel1 = new org.jdesktop.swingx.JXTitledPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jXList1 = new org.jdesktop.swingx.JXList();
        jCheckBox1 = new javax.swing.JCheckBox();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jButton1.setOpaque(false);
        jButton1.setBorder(new DropShadowBorder());
        jButton1.setFont(new Font("SansSerif", Font.BOLD, 14));

        jButton1.addActionListener(
            new ActionListener() {
                public void actionPerformed(ActionEvent arg0) {
                    vmm.getNetworkView()
                       .redrawGraph(false, true);
                    Cytoscape.getDesktop()
                             .setFocus(vmm.getNetworkView().getIdentifier());

                    dispose();
                }
            });

        jButton2.setOpaque(false);
        jButton2.setBorder(new DropShadowBorder());
        jButton2.setFont(new Font("SansSerif", Font.BOLD, 14));

        jButton2.addActionListener(
            new ActionListener() {
                public void actionPerformed(ActionEvent arg0) {
                    dispose();
                }
            });

        jButton2.setOpaque(false);
        jCheckBox1.setOpaque(false);

        jXTitledPanel1.setAlpha(0.9f);
        jXList1.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        jXList1.addListSelectionListener(
            new javax.swing.event.ListSelectionListener() {
                public void valueChanged(
                    javax.swing.event.ListSelectionEvent evt) {
                    jXList1ValueChanged(evt);
                }
            });

        jXList1.addMouseListener(
            new MouseListener() {
                public void mouseClicked(MouseEvent e) {
                    listActionPerformed(e);
                }

                public void mouseEntered(MouseEvent arg0) {
                    // TODO Auto-generated method stub
                }

                public void mouseExited(MouseEvent arg0) {
                    // TODO Auto-generated method stub
                }

                public void mousePressed(MouseEvent arg0) {
                    // TODO Auto-generated method stub
                }

                public void mouseReleased(MouseEvent arg0) {
                    // TODO Auto-generated method stub
                }
            });

        jXList1.setRolloverEnabled(true);

        HighlighterPipeline pipe = new HighlighterPipeline();
        pipe.addHighlighter(
            new RolloverHighlighter(
                jXList1.getBackground(),
                jXList1.getForeground()));
        jXList1.setHighlighters(pipe);

        jXPanel2 = new NodeFullDetailView();

        // jXPanel2 = new NodeFullDetailView(icontest);

        // jXPanel2.setOpaque(false);

        // jXPanel2.setAlpha(0.9f);

        // jXPanel1.setAlpha(0.9F);
        // jXPanel1.setAutoscrolls(true);
        Point2D start = new Point2D.Float(0, 0);
        Point2D end = new Point2D.Float(0, 1);
        float[] dist = { 0.0f, 0.8f, 1.0f };
        Color c1 = new Color(180, 180, 180, 90);

//        Color[] colors = { Color.white, c1, Color.white };
//        LinearGradientPaint p = new LinearGradientPaint(start, end, dist, colors);
//
//        // LinearGradientPaint backgroundGradient = new LinearGradientPaint();
//        LinearGradientPaint test = LinearGradientPainter.BLACK_PERSPECTIVE;
//        float[] frac = test.getFractions();
//
//        org.jdesktop.swingx.painter.gradient.LinearGradientPainter painter2 = new LinearGradientPainter(p);
//        jXPanel1.setBackgroundPainter(painter2);

        jXPanel2.setBorder(new org.jdesktop.swingx.border.DropShadowBorder());
        jXTitledPanel1.setBorder(
            new org.jdesktop.swingx.border.DropShadowBorder());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Default Node Visual Attribute Editor");

        org.jdesktop.layout.GroupLayout jXPanel2Layout = new org.jdesktop.layout.GroupLayout(jXPanel2);
        jXPanel2.setLayout(jXPanel2Layout);
        jXPanel2Layout.setHorizontalGroup(
            jXPanel2Layout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(0, 400,
                Short.MAX_VALUE));
        jXPanel2Layout.setVerticalGroup(
            jXPanel2Layout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(0, 200,
                Short.MAX_VALUE));

        jXTitledPanel1.setTitle("Default Node Appearence");
        jXTitledPanel1.setTitlePainter(
            new BasicGradientPainter(
                new Point2D.Double(.2d, 0),
                new Color(
                    Color.gray.getRed(),
                    Color.gray.getGreen(),
                    Color.gray.getBlue(),
                    100),
                new Point2D.Double(.8d, 0),
                Color.WHITE));
        jXTitledPanel1.setTitleFont(new java.awt.Font("SansSerif", 1, 12));

        jScrollPane1.setViewportView(jXList1);

        org.jdesktop.layout.GroupLayout jXTitledPanel1Layout = new org.jdesktop.layout.GroupLayout(
                jXTitledPanel1.getContentContainer());
        jXTitledPanel1.getContentContainer()
                      .setLayout(jXTitledPanel1Layout);
        jXTitledPanel1Layout.setHorizontalGroup(
            jXTitledPanel1Layout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(jScrollPane1,
                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200,
                Short.MAX_VALUE));
        jXTitledPanel1Layout.setVerticalGroup(
            jXTitledPanel1Layout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(jScrollPane1,
                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200,
                Short.MAX_VALUE));

        jCheckBox1.setFont(new java.awt.Font("SansSerif", 1, 12));
        jCheckBox1.setText("Keep Aspect Ratio");
        jCheckBox1.setBorder(
            javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBox1.setMargin(new java.awt.Insets(0, 0, 0, 0));

        jButton1.setText("Apply");

        jButton2.setText("Cancel");

        org.jdesktop.layout.GroupLayout jXPanel1Layout = new org.jdesktop.layout.GroupLayout(jXPanel1);
        jXPanel1.setLayout(jXPanel1Layout);
        jXPanel1Layout.setHorizontalGroup(
            jXPanel1Layout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                jXPanel1Layout.createSequentialGroup().addContainerGap().add(
                    jXPanel1Layout.createParallelGroup(
                        org.jdesktop.layout.GroupLayout.LEADING).add(
                        jXPanel1Layout.createSequentialGroup().add(jCheckBox1,
                            org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 100,
                            Short.MAX_VALUE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jButton2).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jButton1)).add(jXPanel2,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                        Short.MAX_VALUE)).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(jXTitledPanel1,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 300,
                    org.jdesktop.layout.GroupLayout.PREFERRED_SIZE).addContainerGap()));
        jXPanel1Layout.setVerticalGroup(
            jXPanel1Layout.createParallelGroup(
                org.jdesktop.layout.GroupLayout.LEADING).add(
                org.jdesktop.layout.GroupLayout.TRAILING,
                jXPanel1Layout.createSequentialGroup().addContainerGap().add(
                    jXPanel1Layout.createParallelGroup(
                        org.jdesktop.layout.GroupLayout.TRAILING).add(org.jdesktop.layout.GroupLayout.LEADING,
                        jXTitledPanel1,
                        org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 200,
                        Short.MAX_VALUE).add(
                        jXPanel1Layout.createSequentialGroup().add(jXPanel2,
                            org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                            org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                            Short.MAX_VALUE).addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED).add(
                            jXPanel1Layout.createParallelGroup(
                                org.jdesktop.layout.GroupLayout.BASELINE).add(jCheckBox1).add(jButton2).add(jButton1)))).addContainerGap()));

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
                getContentPane());
        getContentPane()
            .setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(jXPanel1,
                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING).add(jXPanel1,
                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
                org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

        pack();
    } // </editor-fold>

    private void jXList1ValueChanged(javax.swing.event.ListSelectionEvent evt) {
        // TODO add your handling code here:
    }

    private void listActionPerformed(MouseEvent e) {
        // TODO add your handling code here:
        if (e.getClickCount() == 1) {
            int selected = jXList1.getSelectedIndex();

            System.out.println("++++++++ Selected = " + selected);

            VizMapperMainPanel.showValueSelectDialog(orderedList[selected], this);
            buildList();
            vmm.getNetworkView()
               .redrawGraph(false, true);
            Cytoscape.getDesktop()
                     .setFocus(vmm.getNetworkView().getIdentifier());
            jXPanel2.createView();

            //jXPanel2.repaint();
        }
    }

    /**
     * DOCUMENT ME!
     */
    public abstract void buildList();

    // Variables declaration - do not modify
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JScrollPane jScrollPane1;
    protected org.jdesktop.swingx.JXList jXList1;
    private org.jdesktop.swingx.JXPanel jXPanel1;

    // private org.jdesktop.swingx.JXPanel jXPanel2;
    protected NodeFullDetailView jXPanel2;
    private org.jdesktop.swingx.JXTitledPanel jXTitledPanel1;

    // End of variables declaration
    private JPanel getPanel() {
        return jXPanel2;
    }

    class VisualPropCellRenderer extends JLabel
        implements ListCellRenderer {
        private final Font SELECTED_FONT = new Font("SansSerif", Font.ITALIC, 18);
        private final Font NORMAL_FONT = new Font("SansSerif", Font.BOLD, 14);
        private final Color SELECTED_COLOR = new Color(0, 5, 80, 30);
        private final Color SELECTED_FONT_COLOR = new Color(0, 150, 255, 120);
        private final List<Icon> icons;

        public VisualPropCellRenderer(List<Icon> icons) {
            this.icons = icons;
            setOpaque(true);
        }

        public Component getListCellRendererComponent(JList list, Object value,
            int index, boolean isSelected, boolean cellHasFocus) {
            final VisualPropertyIcon icon = (VisualPropertyIcon) icons.get(index);

            setText(value.toString());
            setIcon(icon);
            setFont(isSelected ? SELECTED_FONT : NORMAL_FONT);

            this.setVerticalTextPosition(SwingConstants.CENTER);
            // this.setHorizontalTextPosition(SwingConstants.LEFT);
            this.setVerticalAlignment(SwingConstants.CENTER);
            // this.setHorizontalAlignment(SwingConstants.CENTER);
            this.setIconTextGap(75);
            //this.setAlignmentX(150.0f);
            setBackground(isSelected ? SELECTED_COLOR : list.getBackground());
            setForeground(isSelected ? SELECTED_FONT_COLOR : list.getForeground());
            setPreferredSize(new Dimension(250, icon.getIconHeight() + 12));
            // this.setBorder(new LineBorder(Color.black));
            this.setBorder(new DropShadowBorder());

            return this;
        }
    }
}
