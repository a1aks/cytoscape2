/*
 * NetworkImportDialog.java
 *
 * Created on 2006/05/08, 11:33
 */

package cytoscape.dialogs;

import java.io.File;

import cytoscape.util.CyFileFilter;
import cytoscape.util.FileUtil;

/**
 * 
 * @author kono
 */
public class ImportNetworkDialog extends javax.swing.JDialog {

	private boolean status;
	
	/** Creates new form NetworkImportDialog */
	public ImportNetworkDialog(java.awt.Frame parent, boolean modal) {
		super(parent, modal);
		initComponents();
		status = false;
	}

	
	public File getFile() {
		File networkFile = null;
		networkFile = new File(networkFileNameTextField.getText());
		return networkFile;
	}
	
	public boolean getVSFlag() {
		return vsBuilderCheckBox.isSelected();
	}
	
	public boolean getStatus() {
		return status;
	}
	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">
	private void initComponents() {
		
		this.setTitle("Import a Network");
		
		titleLabel = new javax.swing.JLabel();
		networkFileNameTextField = new javax.swing.JTextField();
		selectNetworkFileButton = new javax.swing.JButton();
		jSeparator1 = new javax.swing.JSeparator();
		vsBuilderCheckBox = new javax.swing.JCheckBox();
		cancelButton = new javax.swing.JButton();
		importButton = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		titleLabel.setFont(new java.awt.Font("Dialog", 1, 14));
		titleLabel.setText("Import Network File");

		networkFileNameTextField.setText("Please select a network file...");
		
		selectNetworkFileButton.setText("Select");
		selectNetworkFileButton
				.addActionListener(new java.awt.event.ActionListener() {
					public void actionPerformed(java.awt.event.ActionEvent evt) {
						selectNetworkFileButtonActionPerformed(evt);
					}
				});

		vsBuilderCheckBox
				.setText("Build Visual Style from graphics data (for GML files only.)");
		vsBuilderCheckBox.setBorder(javax.swing.BorderFactory
				.createEmptyBorder(0, 0, 0, 0));
		vsBuilderCheckBox.setEnabled(false);
		vsBuilderCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));

		cancelButton.setText("Cancel");
		cancelButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				cancelButtonActionPerformed(evt);
			}
		});

		importButton.setText("Import");
		importButton.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				importButtonActionPerformed(evt);
			}
		});
		importButton.setEnabled(false);

		org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(
				getContentPane());
		getContentPane().setLayout(layout);
		layout
				.setHorizontalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.LEADING)
														.add(
																vsBuilderCheckBox,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																379,
																Short.MAX_VALUE)
														.add(
																jSeparator1,
																org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																379,
																Short.MAX_VALUE)
														.add(
																titleLabel,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																367,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(
																layout
																		.createSequentialGroup()
																		.add(
																				networkFileNameTextField,
																				org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
																				302,
																				Short.MAX_VALUE)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				selectNetworkFileButton)
																		.add(
																				1,
																				1,
																				1))
														.add(
																org.jdesktop.layout.GroupLayout.TRAILING,
																layout
																		.createSequentialGroup()
																		.add(
																				importButton)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)
																		.add(
																				cancelButton)
																		.addPreferredGap(
																				org.jdesktop.layout.LayoutStyle.RELATED)))
										.addContainerGap()));
		layout
				.setVerticalGroup(layout
						.createParallelGroup(
								org.jdesktop.layout.GroupLayout.LEADING)
						.add(
								layout
										.createSequentialGroup()
										.addContainerGap()
										.add(titleLabel)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												jSeparator1,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(
																networkFileNameTextField,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE,
																23,
																org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
														.add(
																selectNetworkFileButton))
										.addPreferredGap(
												org.jdesktop.layout.LayoutStyle.RELATED)
										.add(vsBuilderCheckBox)
										.add(29, 29, 29)
										.add(
												layout
														.createParallelGroup(
																org.jdesktop.layout.GroupLayout.BASELINE)
														.add(importButton).add(
																cancelButton))
										.addContainerGap(
												org.jdesktop.layout.GroupLayout.DEFAULT_SIZE,
												Short.MAX_VALUE)));
		pack();
	}// </editor-fold>

	private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		status = false;
		this.dispose();
	}
	
	private void importButtonActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		status = true;
		this.dispose();
	}

	private void selectNetworkFileButtonActionPerformed(
			java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		
//		 Create FileFilters
		CyFileFilter intFilter = new CyFileFilter();
		CyFileFilter gmlFilter = new CyFileFilter();
		CyFileFilter xgmmlFilter = new CyFileFilter();
		CyFileFilter graphFilter = new CyFileFilter();

		// Add accepted File Extensions
		gmlFilter.addExtension("gml");
		gmlFilter.setDescription("GML files");
		xgmmlFilter.addExtension("xgmml");
		xgmmlFilter.addExtension("xml");
		xgmmlFilter.setDescription("XGMML files");
		intFilter.addExtension("sif");
		intFilter.setDescription("Interaction files");
		graphFilter.addExtension("sif");
		graphFilter.addExtension("gml");
		graphFilter.addExtension("xml");
		graphFilter.addExtension("xgmml");
		graphFilter.setDescription("All network files");

		// Get the file name
		File file = FileUtil.getFile("Import Network File", FileUtil.LOAD,
				new CyFileFilter[] { xgmmlFilter, gmlFilter, intFilter,
						graphFilter });
		if(file != null) {
			networkFileNameTextField.setText(file.getAbsolutePath());
			networkFileNameTextField.setToolTipText(file.getAbsolutePath());
			importButton.setEnabled(true);
			if(file.getName().endsWith(".gml")) {
				vsBuilderCheckBox.setEnabled(true);
			}
		} 
	}

	// Variables declaration - do not modify
	private javax.swing.JButton cancelButton;
	private javax.swing.JButton importButton;
	private javax.swing.JSeparator jSeparator1;
	private javax.swing.JTextField networkFileNameTextField;
	private javax.swing.JButton selectNetworkFileButton;
	private javax.swing.JLabel titleLabel;
	private javax.swing.JCheckBox vsBuilderCheckBox;
	// End of variables declaration

}
