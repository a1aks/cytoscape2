<?xml version="1.0"?>
<!-- build.xml - Build file for Cytoscape -->
<project name="Cytoscape" default="compile" basedir=".">

	<!--  The directory containing library jar files -->	
	<property name="lib.dir" value="lib"/>

  	<!-- The directory containing source code -->
  	<property name="src.dir" value="src"/>
	
  	<!-- Temporary build directories -->
 	<property name="build.dir" value="build"/>
  	<property name="build.classes" value="${build.dir}/classes"/>
  	
	<!-- Distribution directory -->
	<property name="dist.dir" value="dist"/>
	
	<!-- Global "magic" property for <javac> -->
	<property name="build.compiler" value="modern"/>
	
	<!-- Classpath with all lib JAR Files -->
	<path id="classpath">
		<pathelement path="${build.classes}"/>	
		<pathelement path="${basedir}"/>
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
	</path>

	<!-- Classpath with all lib JAR Files -->
	<path id="classpath_run">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
		</fileset>
		<pathelement location="${build.dir}/cytoscape.jar"/>
	</path>

	<!-- Classpath with Obfuscated Jar file -->
	<path id="classpath_obfuscated">
		<fileset dir="${lib.dir}">
			<include name="**/*.jar"/>
			<exclude name="y.jar"/>
		</fileset>
		<pathelement location="${dist.dir}/cytoscape-obfuscated.jar"/>
	</path>
	
  	<!-- Target to create the build directories prior to compilation -->
  	<target name="prepare">
    		<mkdir dir="${build.dir}"/>
		<mkdir dir="${build.dir}/docs"/>
    		<mkdir dir="${build.classes}"/>
		<mkdir dir="${build.classes}/images"/>
		<!-- copy over images -->
		<copy todir="${build.classes}/cytoscape/images">
			<fileset dir="${basedir}/images"/>
		</copy>
		<mkdir dir="${dist.dir}"/>
  	</target>

	<!--  Target to clean out all directories -->
  	<target name="clean" description="Removes all generated files.">
    		<delete dir="${build.dir}"/>
		<delete dir="${dist.dir}"/>
	  	<delete>
   	 		<fileset dir="." includes="*.log"/>
 	 	</delete>
  	</target>

	<!--  Target to compile all code -->
  	<target name="compile" depends="prepare" description="Compiles all source code.">
    	<javac srcdir="${src.dir}" destdir="${build.classes}" nowarn="on" source="1.4">
		<include name="cytoscape/**"/>
		
		<!-- Deferred classes are never compiled -->
		<!-- For details, see cytoscape/unitTests/makefile -->
		<exclude name="cytoscape/unitTests/deferred/*"/>
	
		<!-- data/util is never compiled -->
		<!-- For details, see cytoscape/data/makefile -->
		<exclude name="cytoscape/data/util/*"/>

		<!-- only compile those files specified in the makefile -->
		<!-- For details, see cytoscape/data/servers/makefile -->
		<exclude name="cytoscape/data/servers/**"/>
		<include name="cytoscape/data/servers/BioDataServerInterface"/>
		<include name="cytoscape/data/servers/BioDataServerRmi"/>
		<include name="cytoscape/data/servers/BioDataServer"/>
		<include name="cytoscape/data/servers/loadAnnotation"/>
		<include name="cytoscape/data/servers/loadAnnotationFromFlatFiles"/>
		<include name="cytoscape/data/servers/loadThesaurus"/>
		<include name="cytoscape/data/servers/status"/>
		<include name="cytoscape/data/servers/clear"/>
		<include name="cytoscape/data/servers/getCommonName"/>
		<include name="cytoscape/data/servers/getCanonicalName"/>

		<!-- data/annotation/reader/unitTests are never compiled -->
		<!-- For details, see cytoscape/data/readers/makefile -->
		<exclude name="cytoscape/data/annotation/readers/unitTests/*"/>	

		<!-- Exclude Dialog Files that do not currently compile -->
                <exclude name="cytoscape/dialogs/GoDataServerPopupTable.java"/>
                <exclude name="cytoscape/dialogs/GoIDAttributesPopupTable.java"/>
                <exclude name="cytoscape/dialogs/NodeAttributesPopupTable.java"/>

    		<classpath refid="classpath"/>
    	</javac>
	<!-- Run RMIC for BioDataServer -->
	<rmic classname="cytoscape/data/servers/BioDataServerRmi" base="${build.classes}"/>	
  	</target>
  	
  	<!--  Target to Run Cytoscape with Simple Sample Data -->
  	<target name="run" depends="jar" 
		description="Runs Cytoscape.">
		<java classname="cytoscape.cytoscape"
		classpathref="classpath_run" fork="true">
       	</java> 
	</target>
	
	<!-- Target to Run JavaDoc -->
	<target name="doc" description="Runs JavaDoc.">
		<javadoc destdir="${build.dir}/docs" classpathref="classpath"
			overview="${src.dir}/org/mskcc/dataservices/overview.html">
    			<packageset dir="${src.dir}">
      				<include name="cytoscape/**" />
			</packageset>
		</javadoc>
	</target>

        <!--  Target to Create Cytoscape Jar File  -->
        <target name="jar" depends="compile" description="Creates Cytoscape Jar File.">
                <jar destfile="${build.dir}/cytoscape.jar">
			<fileset dir="${build.classes}"/>
		</jar>
        </target>

	<!-- Target to Obfuscate Cytoscape.jar -->
	<target name="obfuscate" depends="jar" description="Obfuscates Cytoscape Jar File.">
		<!-- Copy Cytoscape.jar to distribution directory -->
		<copy file="${build.dir}/cytoscape.jar" todir="${dist.dir}"/>

	        <!-- Unjar YFiles Jar Files To Temporary Directory -->
		<mkdir dir="${dist.dir}/temp"/>
                <unjar src="${lib.dir}/y.jar" dest="${dist.dir}/temp"/>

		<!-- Add YFiles classes to cytoscape.jar -->
                <jar destfile="${dist.dir}/cytoscape.jar" update="true">
			<fileset dir="${dist.dir}/temp"/>
		</jar>
		
                <!-- Obfuscate Jar File with RetroGuard -->                       
                <java classname="RetroGuard"                                      
                        classpathref="classpath" fork="true" dir="${dist.dir}">   
                        <arg line="cytoscape.jar cytoscape-obfuscated.jar ../tools/jars/obfuscation_table.log retro.log"/>
                </java>

		<echo message="Obfuscated Cytoscape.jar is now completed.  It is located in dist/ directory"/>
		<delete dir="${dist.dir}/temp"/>
	</target>

  	<!--  Target to Run Cytoscape with Obfuscated Jar File -->
  	<target name="run_obfuscated" 
		description="Runs Cytoscape with Obfuscated Jar File.">
		<java classname="cytoscape.cytoscape"
		classpathref="classpath_obfuscated" fork="true">
       		</java> 
	</target>
</project>
