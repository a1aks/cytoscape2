<?xml version="1.0"?>
<!-- ======================================================= -->
<!-- ======================================================= -->
<!-- Build file for Cytoscape 			        -->
<!-- Created by Ethan Cerami, cerami@cbio.mskcc.org	-->
<!-- To get a quick listing of all ant targets, type: 	-->
<!-- ant -projecthelp                                   -->
<!-- $Revision$       -->
<!-- $Date$           -->
<!-- $Author$         -->
<!-- ======================================================= -->
<!-- ======================================================= -->

<project name="Cytoscape" default="compile" basedir=".">

  <!-- ======================================================= -->
  <!-- Define Directories and other environment variables      -->
  <!-- ======================================================= -->
	
    <!--  The directory containing library jar files -->	
	  <property name="lib.dir" value="lib"/>

    <!-- The directory containing source code -->
    <property name="src.dir" value="src"/>
	
    <!-- Temporary build directories -->
 	  <property name="build.dir" value="build"/>
    <property name="build.classes" value="${build.dir}/classes"/>
  	
    <!-- Temporary Distribution directory -->
    <property name="dist.dir" value="dist"/>
 	
    <!-- Manifest Dir -->
    <property name="manifest.dir" value="manifest"/>

    <!-- Global "magic" property for <javac> -->
    <property name="build.compiler" value="modern"/>
	
    <!-- Location of GINY -->
    <property name="giny.lib" value="..\giny\lib" />

    <!-- Release number -->
    <property name="version" value="2.0RC1"/>

    <!-- Temporary Release Directory -->
    <property name="release.dir" value="release"/>

    <!-- Temporary Zip/Gzipped Release Directory -->
    <property name="zip_release.dir" value="zip_release"/>

  <!-- ======================================================= -->
  <!-- Cytoscape ClassPath definition                          -->
  <!-- ======================================================= -->

	  <!-- Classpathwith all lib JAR Files -->
	  <path id="classpath">
		  <pathelement path="${build.classes}"/>	
		  <pathelement path="${basedir}"/>
		  <fileset dir="${lib.dir}">
		    <include name="**/*.jar"/>
		  </fileset>
		  <pathelement location="${giny.lib}/giny.jar"/>
                  <pathelement location="${giny.lib}/giny.jar"/>
                  <pathelement location="${giny.lib}/phoebe.jar"/>
                  <pathelement location="${giny.lib}/colt.jar"/>
                  <pathelement location="${giny.lib}/coltginy.jar"/>
                  <pathelement location="${giny.lib}/luna.jar"/>
                  <pathelement location="${giny.lib}/piccolo.jar"/>
                  <pathelement location="${giny.lib}/looks-1.1.3.jar"/>

	  </path>

	  <!-- Classpath for running Cytoscape with non-obfuscated Cytoscape Jar file -->
	  <path id="classpath_run">
		  <fileset dir="${lib.dir}">
			  <include name="**/*.jar"/>
		  </fileset>
		  <pathelement location="${build.dir}/cytoscape.jar"/>
                  <pathelement location="${giny.lib}/giny.jar"/>
                  <pathelement location="${giny.lib}/giny.jar"/>
                  <pathelement location="${giny.lib}/phoebe.jar"/>
                  <pathelement location="${giny.lib}/colt.jar"/>
                  <pathelement location="${giny.lib}/coltginy.jar"/>
                  <pathelement location="${giny.lib}/luna.jar"/>
                  <pathelement location="${giny.lib}/piccolo.jar"/>
                  <pathelement location="${giny.lib}/piccolox.jar"/>
                  <pathelement location="${giny.lib}/looks-1.1.3.jar"/>
          </path>

	  <!-- Classpath for running Cytoscape with obfuscated Cytoscape Jar file -->
	  <path id="classpath_obfuscated">
		  <fileset dir="${lib.dir}">
			  <include name="**/*.jar"/>
			  <exclude name="y.jar"/>
		  </fileset>
		  <pathelement location="${dist.dir}/cytoscape-obfuscated.jar"/>
	  </path>

  <!-- ======================================================= -->
  <!-- Environment Checks and Information                      -->
  <!-- ======================================================= -->

	  <!-- Target to Query Environment && Checks if y.jar exists -->
	  <!-- This check in necessary because we cannot check y.jar into cvs. -->
	  <target name="query_environment">
		  <condition property="environment.configured">
			  <available file="${lib.dir}/y.jar"/>
		  </condition>
	  </target>

	  <!-- Stop build if Environment is not configured correctly -->
	  <target name="check_environment" depends="query_environment" unless="environment.configured">
		  <fail>Build aborted:  Make sure that y.jar is available within your lib directory.</fail>
	  </target>

	  <!-- Outputs Current compilation classpath -->
	  <target name="show_cp">
		  <property name="temp" refid="classpath"/>
		  <echo message="Classpath:  ${temp}"/>
	  </target>

  <!-- ======================================================= -->
  <!-- Create Build directories and copy images                -->
  <!-- ======================================================= -->

  	<!-- Target to create the build directories prior to compilation -->
  	<target name="prepare" depends="check_environment">
    	<mkdir dir="${build.dir}"/>
		  <mkdir dir="${build.dir}/docs"/>
    	<mkdir dir="${build.classes}"/>
		  <mkdir dir="${build.classes}/images"/>
  		<mkdir dir="${dist.dir}"/>
  
      <!-- copy over images -->
		  <copy todir="${build.classes}/cytoscape/images">
			  <fileset dir="${basedir}/images"/>
		  </copy>
		  <copy todir="${build.classes}/cytoscape/view/images">
			  <fileset dir="${basedir}/images"/>
		  </copy>
		  <copy todir="${build.classes}/cytoscape/dialogs/images">
			  <fileset dir="${src.dir}/cytoscape/dialogs/images"/>
		  </copy>
		  <copy todir="${build.classes}/cytoscape/visual/ui/images">
			  <fileset dir="${src.dir}/cytoscape/visual/ui/images"/>
		  </copy>
		  
    	</target>

  <!-- ======================================================= -->
  <!-- Clean the build environment                             -->
  <!-- ======================================================= -->

  <!--  Target to clean out all directories -->
  <target name="clean" description="Removes all generated files.">
 	<delete dir="${build.dir}"/>
	<delete dir="${dist.dir}"/>
	<delete dir="${release.dir}"/>
	<delete dir="${zip_release.dir}"/>
	<delete file="lib/cytoscape.jar"/>
	<delete>
		<fileset dir="." includes="*.log"/>
 	</delete>
  </target>

  <!-- ======================================================= -->
	<!-- Compile Cytoscape                                       -->
  <!-- ======================================================= -->

    <!--  Target to compile all code -->
  	<target name="compile" depends="prepare" description="Compiles all source code.">
    	<javac srcdir="${src.dir}" 
             destdir="${build.classes}" 
             nowarn="off" 
             debug="true" 
	     debuglevel="source"
             source="1.4" 
             optimize="on"
             includeAntRuntime="false">
             <classpath refid="classpath"/>

		    <include name="cytoscape/**"/>
		
		    <!-- Deferred classes are never compiled -->
		    <!-- For details, see cytoscape/unitTests/makefile -->
	    	  <exclude name="cytoscape/unitTests/deferred/*"/>
	
    		<!-- data/util is never compiled, we don't know why-->
		    <!-- For details, see cytoscape/data/makefile -->
		      <exclude name="cytoscape/data/util/*"/>

   		  <!-- ignore files moved to cytoscape/data/servers/archive -->
		    <!-- For details, see cytoscape/data/servers/makefile -->
		      <exclude name="cytoscape/data/servers/archive/*"/>
                  <!-- also ignore tests of the archived classes -->
                      <exclude name="cytoscape/data/servers/unitTests/archive/*"/>

		    <!-- data/annotation/reader/unitTests are never compiled -->
		    <!-- For details, see cytoscape/data/readers/makefile -->
		      <exclude name="cytoscape/data/annotation/readers/unitTests/*"/>	

		    <!-- Exclude Dialog Files that do not currently compile -->
          <exclude name="cytoscape/dialogs/GoDataServerPopupTable.java"/>
          <exclude name="cytoscape/dialogs/GoIDAttributesPopupTable.java"/>
          <exclude name="cytoscape/dialogs/NodeAttributesPopupTable.java"/>
        <!-- Exclude obsolete visual package testing class -->
          <exclude name="cytoscape/visual/tests/TestNewMappingsUI.java"/>

        <!-- Exclude unused classes in archive directories -->
          <exclude name="cytoscape/actions/archive/*"/>
          <exclude name="cytoscape/filters/dialogs/archive/*"/>
          <exclude name="cytoscape/dialogs/archive/*"/>
    		
    	</javac>
	
    <!-- Run RMIC for BioDataServer -->
    <rmic classname="cytoscape.data.servers.BioDataServerRmi" base="${build.classes}" classpathref="classpath"/>
    </target>
  	
  <!-- ======================================================= -->
  <!-- Run Cytoscape with Y-Files                              -->
  <!-- ======================================================= -->

  	<!--  Target to Run Cytoscape with non-obfuscated jar file -->
  	<target name="run" depends="jar" description="Runs Cytoscape.">
		  <java classname="cytoscape.cytoscape" classpathref="classpath_run" fork="true"/>
   	</target>
	
  <!-- ======================================================= -->
  <!-- Run Cytoscape with GINY                                 -->
  <!-- ======================================================= -->

	  <!--  Target to Run Cytoscape with non-obfuscated jar file using giny-->
  	<target name="giny" depends="jar" description="Runs Cytoscape/Giny.">
		  <java classname="cytoscape.cytoscape"  args= "-y giny" classpathref="classpath_run" fork="true"/>
	  </target>
	
  <!-- ======================================================= -->
  <!-- Make the JavaDocs for Cytoscape                         -->
  <!-- ======================================================= -->

	  <!-- Target to Run JavaDoc -->
	  <target name="doc" description="Runs JavaDoc.">
		  <javadoc destdir="API" 
               source="1.4" 
               classpathref="classpath"
			         overview="${src.dir}/org/mskcc/dataservices/overview.html"
               link="http://java.sun.com/j2se/1.4.2/docs/api/">
    			
        <packageset dir="${src.dir}">
      	  <include name="cytoscape/**"/>
          <exclude name="**test/**"/>
          <exclude name="**.unitTests/**"/>
			  </packageset>
		  </javadoc>
	  </target>

  <!-- ======================================================= -->
  <!-- Create the Cytoscape Jar file                           -->
  <!-- ======================================================= -->

    <!--  Target to Create Cytoscape Jar File  -->
      <target name="jar" depends="compile" description="Creates Cytoscape Jar File.">

	<echo>
	***********************************************
	Creating Cytoscape JAR File
	***********************************************
	</echo>

        <jar destfile="${build.dir}/cytoscape.jar"
             manifest="${manifest.dir}/cytoscape.manifest">
			    <fileset dir="${build.classes}"/>
		    </jar>

        <copy file="${build.dir}/cytoscape.jar" todir="${lib.dir}"/>

      </target>

  <!-- ======================================================= -->
  <!-- Create the Obfuscated Cytoscape Jar File                -->
  <!-- ======================================================= -->

  <!-- Target to Obfuscate Cytoscape.jar -->
  <target name="obfuscate" depends="jar" description="Obfuscates Cytoscape Jar File.">

	<echo>
	***********************************************
	Obfuscating Cytoscape
	***********************************************
	</echo>
		
  	<!-- Copy Cytoscape.jar to distribution directory -->
	<copy file="${build.dir}/cytoscape.jar" todir="${dist.dir}"/>

	<!-- Unjar YFiles Jar Files To Temporary Directory -->
	<mkdir dir="${dist.dir}/temp"/>
	<unjar src="${lib.dir}/y.jar" dest="${dist.dir}/temp"/>

	<!-- Add YFiles classes to cytoscape.jar -->
	<jar destfile="${dist.dir}/cytoscape.jar" update="true">
 		<fileset dir="${dist.dir}/temp"/>
	</jar>
		
      	<!-- Obfuscate Jar File with RetroGuard -->                       
      	<java classname="RetroGuard" classpathref="classpath" fork="true" dir="${dist.dir}">   
        	<arg line="cytoscape.jar cytoscape-obfuscated.jar ../tools/jars/cytoscape-obf-1_1.log retro.log"/>
      	</java>

      	<echo message="Obfuscated Cytoscape.jar is now completed.  It is located in dist/ directory"/>
	<delete dir="${dist.dir}/temp"/>
    </target>

  <!-- ======================================================= -->
  <!-- Run Cytoscape Using the Obfuscated jar file             -->
  <!-- ======================================================= -->

  <!--  Target to Run Cytoscape with Obfuscated Jar File -->
  <target name="run_obfuscated" 
            description="Runs Cytoscape with Obfuscated Jar File.">
		
      <java classname="cytoscape.cytoscape"
		        classpathref="classpath_obfuscated" 
            fork="true">
      </java> 
  </target>

  <!-- ======================================================= -->
  <!-- Run All of the Cytoscape Unit Tests                     -->
  <!-- ======================================================= -->
  <target name="test" depends="compile" description="Runs all Cytoscape Unit Tests.">
  	<java classname="cytoscape.unitTests.AllTests" classpathref="classpath" fork="true">
        <arg line="-ui"/>
      </java>
  </target>

  <!-- ======================================================= -->
  <!-- Create Cytoscape Distribution                           -->
  <!-- Final releases are made available in zip_release/ dir   -->
  <!-- Questions?  email:  cerami@cbio.mskcc.org	       -->
  <!-- ======================================================= -->
  <target name="release" depends="obfuscate" description="Creates Cytoscape Release">

        <echo>
        ***********************************************
        Creating Cytoscape Release
        ***********************************************
        </echo>

	<!-- Create Release Directory -->
	<mkdir dir="${release.dir}"/>
	<mkdir dir="${release.dir}/plugins"/>
	<mkdir dir="${release.dir}/GO"/>
	<mkdir dir="${release.dir}/sampleData"/>
	<mkdir dir="${zip_release.dir}"/>

        <echo>
	---------------------------------------
	Copying over all necessary JAR files
	---------------------------------------
        </echo>

	<!-- Copy Obfuscated Jar File over -->
	<copy file="${dist.dir}/cytoscape-obfuscated.jar"
		tofile="${release.dir}/cytoscape.jar"/>
 
	<!-- Add All other JARs to Obfuscated Cytoscape Jar File -->
	<delete dir="${dist.dir}/temp"/>
	<mkdir dir="${dist.dir}/temp"/>
	<unjar dest="${dist.dir}/temp">
    		<fileset dir="${lib.dir}">
        		<exclude name="y.jar"/>
			<exclude name="cytoscape.jar"/>
			<exclude name="retroguard.jar"/>
    		</fileset>
	</unjar>
	<jar destfile="${release.dir}/cytoscape.jar" update="true">
		<fileset dir="${dist.dir}/temp"/>
	</jar>
	<delete dir="${dist.dir}/temp"/>

	<!-- Copy over start scripts -->
        <echo>
	---------------------------------------
	Copying over all OS-specific scripts 
	---------------------------------------
        </echo>
	<copy file="bin/cytoscape.bat" todir="${release.dir}"/>
	<copy file="bin/cytoscape.sh"  todir="${release.dir}"/>
	<chmod perm="+x" file="${release.dir}/cytoscape.bat"/>
	<chmod perm="+x" file="${release.dir}/cytoscape.sh"/>

	<!-- Copy over props files -->
        <echo>
	---------------------------------------
	Copying over all property files.
	---------------------------------------
        </echo>
	<copy file="config/cytoscape_release.props" 
		tofile="${release.dir}/cytoscape.props"/>
	<copy file="config/vizmap_release.props" 
		tofile="${release.dir}/vizmap.props"/>

	<!-- Copy over Txt/PDF files -->
        <echo>
	---------------------------------------
	Copying over user documentation.
	---------------------------------------
        </echo>

	<copy file="user_docs/INSTALL.txt" todir="${release.dir}"/>
	<copy file="user_docs/LICENSE.txt" todir="${release.dir}"/>
	<copy file="user_docs/Cytoscape1_1Manual.pdf" todir="${release.dir}"/>
 
	<!-- Copy over Sample Data Files -->
        <echo>
	---------------------------------------
	Copying over sample data files.
	---------------------------------------
        </echo>

	<copy file="testData/BINDyeast.sif" todir="${release.dir}/sampleData"/>
	<copy file="testData/galExpData.pvals" todir="${release.dir}/sampleData"/>
	<copy file="testData/galFiltered.gml" todir="${release.dir}/sampleData"/>
	<copy file="testData/galFiltered.sif" todir="${release.dir}/sampleData"/>

	<!-- Copy over GO Data Files -->
	<copy todir="${release.dir}/GO">
		<fileset dir="testData/GO">
			<include name="annotationAndSynonyms"/>
			<include name="biologicalProcess.xml"/>
			<include name="molecularFunction.xml"/>
			<include name="cellularComponent.xml"/>
			<include name="go.xml"/>
			<include name="synonyms"/>
		</fileset>
	</copy>

	<!-- Create Windows Zip Distribution -->
        <echo>
	---------------------------------------
	Creating zip/tar.gz files.
	---------------------------------------
        </echo>

	<zip destfile="${zip_release.dir}/cytoscape-v${version}.zip"                 
		basedir="${release.dir}"/>                                  

	<!-- Create Unix/Linux/MaxOS X tar.gz Distribution -->
	<!-- Include Executable Permissions -->
	<tar tarfile="${zip_release.dir}/cytoscape-v${version}.tar">
		<tarfileset dir="${release.dir}" mode="755">
			<include name="*.sh"/>
			<include name="*.bat"/>
		</tarfileset>
		<tarfileset dir="${release.dir}">
			<include name="**/*"/>
			<exclude name="*.bat"/>
			<exclude name="*.sh"/>
		</tarfileset>
	</tar>
	<gzip src="${zip_release.dir}/cytoscape-v${version}.tar"                     
		zipfile="${zip_release.dir}/cytoscape-v${version}.tar.gz"/>
	<delete file="${zip_release.dir}/cytoscape-v${version}.tar"/>

	<!--  Create tar.gz release of source code -->
	<tar tarfile="${zip_release.dir}/cytoscapeSource-v${version}.tar">
		<tarfileset dir=".">
			<exclude name="${release.dir}/**"/>
			<exclude name="${zip_release.dir}/**"/>
			<exclude name="${build.dir}/**"/>
			<exclude name="CVS/**"/>
			<exclude name="${lib.dir}/y.jar"/>
		</tarfileset>
	</tar>
	<gzip src="${zip_release.dir}/cytoscapeSource-v${version}.tar" 
		zipfile="${zip_release.dir}/cytoscapeSource-v${version}.tar.gz"/>
	<delete file="${zip_release.dir}/cytoscapeSource-v${version}.tar"/>
  </target>

</project>
